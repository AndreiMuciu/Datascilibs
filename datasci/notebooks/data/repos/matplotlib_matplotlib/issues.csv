repo_full_name,issue_id,number,title,body,user_login,user_id,state,locked,comments_count,created_at,updated_at,closed_at,labels,reactions_total,reactions_plus1,reactions_minus1,reactions_laugh,reactions_hooray,reactions_confused,reactions_heart
matplotlib/matplotlib,3056541389,30043,Fix alpha compositing in ft2font's draw_bitmap.,"The old formula (`*dst |= *src`) works fine when either dst or src is full transparent or fully opaque, but not for compositing intermediate values.  Fix that (while keeping a fast-path for the common case of writing on an empty buffer).

Example (note the more uniform gray zone between the two letters):
```python
from matplotlib import pyplot as plt, ft2font as f, cbook
import numpy as np

font = f.FT2Font(str(cbook._get_data_path(""fonts/ttf/DejaVuSans.ttf"")))
font.set_size(24, 72)
im = f.FT2Image(30, 30)
ga = font.load_char(ord(""A""))
gv = font.load_char(ord(""V""))
font.draw_glyph_to_bitmap(im, 2, 2, ga)
font.draw_glyph_to_bitmap(im, 12, 2, gv)

(plt.figure(layout=""constrained"", figsize=(3, 3))
 .add_subplot(xticks=[], yticks=[])
 .imshow(np.asarray(im), cmap=""gray""))
plt.show()
```
old/new:
![old](https://github.com/user-attachments/assets/e3ef21d2-d2fa-4978-bd3f-d1bc577bc968)
![new](https://github.com/user-attachments/assets/2b08f031-0062-4d47-87e0-1380c19dfe7d)

Somewhat unsurprisingly, this also breaks a bunch of baseline images; maybe this could be squashed into the FreeType update (#29816)?

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",anntzer,1322974,open,False,0,2025-05-12T10:51:59+00:00,2025-05-12T11:10:19+00:00,,topic: text/fonts,0,0,0,0,0,0,0
matplotlib/matplotlib,3055668929,30042,[Bug]: pixeled dotted lines with no readability,"### Bug summary

![Image](https://github.com/user-attachments/assets/d811afcd-13a3-44fc-a91c-9899240f6e27)
I run into issues in using mayplotlib and only yields pixeled dotted lines with no readability. 
Anyone knows how to fix it?


### Code for reproduction

```Python
import matplotlib.pyplot as plt

load = [
    65.0, 65.0, 65.0, 65.0,
    62.0, 62.0, 62.0, 62.0,
    59.0, 59.0, 59.0, 59.0,
    69.0, 69.0, 69.0, 69.0,
    70.0, 70.0, 70.0, 70.0,
    61.0, 61.0, 61.0, 61.0,
    70.0, 70.0, 70.0, 70.0,
    82.0, 82.0, 82.0, 82.0,
    92.0, 92.0, 92.0, 92.0,
    97.0, 97.0, 97.0, 97.0,
    98.0, 98.0, 98.0, 98.0,
    96.0, 96.0, 96.0, 96.0,
    96.0, 96.0, 96.0, 96.0,
    94.0, 94.0, 94.0, 94.0,
    93.0, 93.0, 93.0, 93.0,
    95.0, 95.0, 95.0, 95.0,
    96.0, 96.0, 96.0, 96.0,
    96.0, 96.0, 96.0, 96.0,
    95.0, 95.0, 95.0, 95.0,
    93.0, 93.0, 93.0, 93.0,
    89.0, 89.0, 89.0, 89.0,
    80.0, 80.0, 80.0, 80.0,
    68.0, 68.0, 68.0, 68.0
]

t    = np.arange(0, 23, 0.25)     # 15-min resolution in hours


fig, ax = plt.subplots(figsize=(12, 4), dpi=140)  # bigger & sharper
ax.step(t, load, where=""post"", lw=2)              # solid 2-pt staircase
ax.set_xlim(0, 24)
ax.set_xticks(np.arange(0, 25, 2))
ax.set_xlabel(""Hour of day"")
ax.set_ylabel(""% of daily peak"")
ax.set_title(""IEEE RTS – Typical Daily Load Profile"")
ax.grid(ls=""--"", alpha=0.3)       # light, unobtrusive grid
plt.tight_layout()
plt.show()
```

### Actual outcome

![Image](https://github.com/user-attachments/assets/a15b1f40-d8da-443b-b4b9-ef641548a56f)

### Expected outcome

readable figures

### Additional information

_No response_

### Operating system

_No response_

### Matplotlib Version

3.8.4

### Matplotlib Backend

_No response_

### Python version

3.9

### Jupyter version

_No response_

### Installation

pip",PonySubway,28859042,open,False,2,2025-05-12T05:22:51+00:00,2025-05-12T08:15:15+00:00,,status: needs clarification,0,0,0,0,0,0,0
matplotlib/matplotlib,3055311232,30041,[Bug]: qt_compat error in handling pyside6 Qt enumerations for pyplot,"### Bug summary

pyplot cannot be imported. Raises an error pertaining to converting Qt Enumerations to integers.

### Code for reproduction

```Python
import matplotlib.pyplot as plt
""""""
Error is thrown on import
""""""

# addendum
import matplotlib
# This also produces the same error (same source)
matplotlib.get_backend()
```

### Actual outcome

Traceback (most recent call last):
  File "".../test.py"", line 2, in <module>
    import matplotlib.pyplot as plt
  File ""~/.local/lib/python3.10/site-packages/matplotlib/pyplot.py"", line 2230, in <module>
    switch_backend(rcParams[""backend""])
  File ""~/.local/lib/python3.10/site-packages/matplotlib/__init__.py"", line 672, in __getitem__
    plt.switch_backend(rcsetup._auto_backend_sentinel)
  File ""~/.local/lib/python3.10/site-packages/matplotlib/pyplot.py"", line 247, in switch_backend
    switch_backend(candidate)
  File ""~/.local/lib/python3.10/site-packages/matplotlib/pyplot.py"", line 267, in switch_backend
    class backend_mod(matplotlib.backend_bases._Backend):
  File ""~/.local/lib/python3.10/site-packages/matplotlib/pyplot.py"", line 268, in backend_mod
    locals().update(vars(importlib.import_module(backend_name)))
  File ""/usr/lib64/python3.10/importlib/__init__.py"", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File ""~/.local/lib/python3.10/site-packages/matplotlib/backends/backend_qtagg.py"", line 12, in <module>
    from .backend_qt import (
  File ""~/.local/lib/python3.10/site-packages/matplotlib/backends/backend_qt.py"", line 73, in <module>
    _MODIFIER_KEYS = [
  File ""~/.local/lib/python3.10/site-packages/matplotlib/backends/backend_qt.py"", line 74, in <listcomp>
    (_to_int(getattr(_enum(""QtCore.Qt.KeyboardModifier""), mod)),
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'KeyboardModifier'


### Expected outcome

# Nothing, execute and exit

### Additional information

The source of the error is the enumerations used in PySide6 (for me). In `matplotlib/qt_compat.py`, the
enumerations returned from _enum cannot be directly converted to integers with _to_int; the issue can be resolved by extending the QT_API condition in _to_int()[qt_compat.py+143] to include ""pyside6"". 

Alternatively, I can set QT_API in the environment from the various expected values at the top of qt_compat.py (pyside6, pyqt5, pyside2, etc.); pyside6 is the only compatibility mode which raises this particular error.

### Operating system

Fedora

### Matplotlib Version

3.5.1

### Matplotlib Backend

PySide6 (matplotlib.get_backend() also raises the same error described)

### Python version

3.10.11

### Jupyter version

n-a

### Installation

pip",btishmack,92449319,closed,False,3,2025-05-12T00:07:50+00:00,2025-05-12T11:33:00+00:00,2025-05-12T11:32:58+00:00,Community support,0,0,0,0,0,0,0
matplotlib/matplotlib,3055240814,30040,Improve usetex and pgf troubleshooting docs.,"- Merge ""Troubleshooting"" and ""Possible hangups"".
- Don't list $PATH issues twice.
- Remove mention of dvipng for pgf (which doesn't use dvipng).
- Be more generic re: missing latex packages (this applies to all texlive installs, and the required list is given elsewhere).

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",anntzer,1322974,closed,False,1,2025-05-11T21:47:03+00:00,2025-05-12T09:59:25+00:00,2025-05-12T09:55:12+00:00,Documentation;Documentation: user guide,0,0,0,0,0,0,0
matplotlib/matplotlib,3055174493,30039,Rasterize dvi files without dvipng.,"This patch drops the reliance on dvipng to rasterize dvi files prior to inclusion by agg, instead performing the rasterization ourselves (as a consequence, the rasterization output also becomes dependent of the freetype version used).  Note that this approach will be needed anyways to support xetex and luatex, as dvipng doesn't support dvi files generated by these engines.

Baseline images change slightly, for the better or the worse.  The top-left blue cross text in test_rotation.py (""Myrt0"") seems to be better top-aligned against the blue line (the old version overshot a bit); the bounding box of the formulas in test_usetex.py seems a bit worse.

Small API point that needs to be discussed: do we want to keep the old dvipng-based codepath? (likely, at least temporarily)  If so, what kind of switch do we want to expose to the end-user?  I would suggest already looking forward to the future support for xetex/luatex which would likely be implemented using `rcParams[""text.latex.engine""] = {""latex"", ""xelatex"", ""lualatex""}` and further add a possible ""latex+dvipng"" value in there, which would correspond to the old default; ""latex"" would be the dvipng-less codepath; both ""latex"" and ""latex+dvipng"" would behave the same for backends other than agg.  (Also note that if we decide later to remove that dvipng codepath, it is easier to deprecate an allowable value from a rcParams entry than to completely deprecate an entry.)

I will either implement the switch or strip out the dvipng code, and write the corresponding docs, depending on the decision above.

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",anntzer,1322974,open,False,0,2025-05-11T19:39:51+00:00,2025-05-11T21:08:36+00:00,,backend: agg;topic: text/usetex;topic: text/fonts;status: needs comment/discussion,0,0,0,0,0,0,0
matplotlib/matplotlib,3055113681,30038,[Bug]: install in development mode fails,"### Bug summary

I'm trying to install matplotlib in development mode for a PR, and I'm using this for installing it in dev mode (from [here](https://matplotlib.org/devdocs/devel/development_setup.html#install-matplotlib-in-editable-mode)):

```bash
python -m pip install --verbose --no-build-isolation --editable "".[dev]""
```

I've tried all the basic stuffs (removing/re-creating the venv, etc), but I don't understand the error.

### Code for reproduction

Right after I git cloned and cd matplotlib:

```Python
python -m venv venv
source venv/bin/activate
pip install -r requirements/dev/dev-requirements.txt
pip install -r requirements/doc/doc-requirements.txt
pip install -r requirements/testing/all.txt
python -m pip install --verbose --no-build-isolation --editable "".[dev]""
```

### Actual outcome

Using pip 22.0.4 from /Users/josephbarbier/Desktop/matplotlib/venv/lib/python3.10/site-packages/pip (python 3.10)
Obtaining file:///Users/josephbarbier/Desktop/matplotlib
  Running command Checking if build backend supports build_editable
  Checking if build backend supports build_editable ... done
  Running command Preparing editable metadata (pyproject.toml)
  + meson setup /Users/josephbarbier/Desktop/matplotlib /Users/josephbarbier/Desktop/matplotlib/build/cp310 -Dbuildtype=release -Db_ndebug=if-release -Db_vscrt=md --native-file=/Users/josephbarbier/Desktop/matplotlib/build/cp310/meson-python-native-file.ini
  The Meson build system
  Version: 1.8.0
  Source dir: /Users/josephbarbier/Desktop/matplotlib
  Build dir: /Users/josephbarbier/Desktop/matplotlib/build/cp310
  Build type: native build
  Program python3 python found: NO found 3.10.5 but need: '>= 3.11'

  ../../meson.build:6:4: ERROR: Program 'python3 python' not found or not executable

  A full log can be found at /Users/josephbarbier/Desktop/matplotlib/build/cp310/meson-logs/meson-log.txt
  error: subprocess-exited-with-error

  × Preparing editable metadata (pyproject.toml) did not run successfully.
  │ exit code: 1
  ╰─> See above for output.

  note: This error originates from a subprocess, and is likely not a problem with pip.
  full command: /Users/josephbarbier/Desktop/matplotlib/venv/bin/python /Users/josephbarbier/Desktop/matplotlib/venv/lib/python3.10/site-packages/pip/_vendor/pep517/in_process/_in_process.py prepare_metadata_for_build_editable /var/folders/m2/jfzxyg4s0xz3jyw5f94r7tcm0000gn/T/tmpwu3byzgi
  cwd: /Users/josephbarbier/Desktop/matplotlib
  Preparing editable metadata (pyproject.toml) ... error
error: metadata-generation-failed

× Encountered error while generating package metadata.
╰─> See above for output.

note: This is an issue with the package mentioned above, not pip.
hint: See above for details.

### Expected outcome

Successfully install matplotlib in development mode.

### Additional information

- I'm not sure why I have this version of Python installed here

- I tried with pip latest (25.1.1), and it doesn't change anything

- `meson-log.txt`

Build started at 2025-05-11T19:18:42.156591
Main binary: /Users/josephbarbier/Desktop/matplotlib/venv/bin/python
Build Options: -Dbuildtype=release -Db_ndebug=if-release -Db_vscrt=md --native-file=/Users/josephbarbier/Desktop/matplotlib/build/cp310/meson-python-native-file.ini
Python system: Darwin
The Meson build system
Version: 1.8.0
Source dir: /Users/josephbarbier/Desktop/matplotlib
Build dir: /Users/josephbarbier/Desktop/matplotlib/build/cp310
Build type: native build
Running command: /Users/josephbarbier/Desktop/matplotlib/venv/bin/python --version
--- stdout ---
Python 3.10.5

--- stderr ---


Program python3 python found: NO found 3.10.5 but need: '>= 3.11'

../../meson.build:6:4: ERROR: Program 'python3 python' not found or not executable


### Operating system

MacOS Sequoia 15.4.1

### Matplotlib Version

3.10.3

### Matplotlib Backend

macosx

### Python version

Python 3.10.5

### Jupyter version

_No response_

### Installation

pip",JosephBARBIERDARNAL,79746670,open,False,3,2025-05-11T17:28:50+00:00,2025-05-12T16:16:37+00:00,,,0,0,0,0,0,0,0
matplotlib/matplotlib,3054783929,30037,Update top message matplotlibrc file,"
## PR summary

As suggested in #29699 , I updated the top message of the `matplotlibrc` file.

From: `## NOTE FOR END USERS: DO NOT EDIT THIS FILE!`

To: `## DO NOT EDIT THIS FILE, MAKE A COPY FIRST`

For me, this makes it more obvious that this file **can** be modified, as long as it is a copy of the original. The current message suggests that users should never touch this file. Even if the text just after says you can make a copy, I think a lot of people will stop reading because of the uppercase message at the top.

See the discussion [here](https://github.com/matplotlib/matplotlib/issues/29699).


## PR checklist

- [N/A] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [N/A] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [N/A] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [N/A] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [N/A] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines
",JosephBARBIERDARNAL,79746670,closed,False,1,2025-05-11T07:07:11+00:00,2025-05-11T09:36:08+00:00,2025-05-11T09:35:29+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3054272365,30036,Remove cutout for missing font file in PdfFile._embedTeXFont.,"If fontfile is None, an error would already have been raised earlier in dviFontName (which explicitly checks for this case).

(The cutout in _embedTeXFont was introduced first, in ed0066f (2009), but support for that case appears to have been broken a bit later and the check in dviFontName was then introduced in 4fcc0e7 (2016) where it simply improved the clarity of the exception ultimately raised. -- attn @jkseppan, who wrote both commits?)

Noted in relation to #29807.

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",anntzer,1322974,open,False,0,2025-05-10T15:27:00+00:00,2025-05-11T18:30:05+00:00,,backend: pdf;Maintenance,0,0,0,0,0,0,0
matplotlib/matplotlib,3053580488,30035,Remove meson-python pinning,"## PR summary

Version 0.18 should restore handling of symlinks:
https://github.com/mesonbuild/meson-python/pull/728

## PR checklist

- [n/a] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [n/a] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [n/a] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [n/a] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines",QuLogic,302469,closed,False,2,2025-05-10T02:43:33+00:00,2025-05-10T10:02:31+00:00,2025-05-10T09:03:10+00:00,Build;CI: Run cibuildwheel,0,0,0,0,0,0,0
matplotlib/matplotlib,3053150708,30034,Backport PR #30029 on branch v3.10.3-doc (Update diagram in subplots_adjust documentation to clarify parameters),Backport PR #30029: Update diagram in subplots_adjust documentation to clarify parameters,meeseeksmachine,39504233,closed,False,0,2025-05-09T20:46:55+00:00,2025-05-09T21:22:25+00:00,2025-05-09T21:22:25+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3053150472,30033,Backport PR #30029 on branch v3.10.x (Update diagram in subplots_adjust documentation to clarify parameters),Backport PR #30029: Update diagram in subplots_adjust documentation to clarify parameters,meeseeksmachine,39504233,closed,False,1,2025-05-09T20:46:49+00:00,2025-05-09T21:25:41+00:00,2025-05-09T21:23:58+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3053096042,30032,Add Matplotlib Journey online course to external resources,"## PR summary

Following discussions with @tacaswell and @story645, I have added [Matplotlib Journey](https://www.matplotlib-journey.com/), an online course on matplotlib, in the external resources.

Please let me know if any changes need to be made (for example, to make it clear that this is a paying resource).


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [N/A] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [N/A] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [N/A] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [N/A] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [N/A] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

",JosephBARBIERDARNAL,79746670,open,False,7,2025-05-09T20:13:00+00:00,2025-05-11T02:51:49+00:00,,Documentation: user guide,0,0,0,0,0,0,0
matplotlib/matplotlib,3052908406,30031,merge up 3.10.3,"- Backport PR #29584: DOC: Recommend constrained_layout over tight_layout
- Backport PR #29689: Fix alt and caption handling in Sphinx directives
- Backport PR #29590: Blocked set_clim() callbacks to prevent inconsistent state (#29522)
- Backport PR #29708: MNT: correct version in plotting method deprecation warnings
- Backport PR #29726: Add reference tag to Hatch style reference
- Backport PR #29724: Fix SubplotSpec.get_gridspec type hint
- Backport PR #29719: Fix passing singleton sequence-type styles to hist
- Backport PR #29734: ci: MacOS 14: temporarily upper-bound the 'PyGObject' Python package version
- Backport PR #29748: Fix PyGObject version pinning in macOS tests
- Backport PR #29721: FIX: pyplot auto-backend detection case-sensitivity fixup
- Backport PR #29767: Add description to logit_demo.py script
- Backport PR #29752: DOC: Add install instructions for pixi and uv
- Backport PR #29781: Fix escaping of nulls and ""0"" in default filenames.
- Backport PR #29755: DOC: Simplify annotation arrow style reference
- Backport PR #29770: MNT: Move test for old ipython behavior to minver tests
- Backport PR #29552: Bug Fix: Normalize kwargs for Histogram
- Backport PR #29801: DOC: Slightly further improve arrowstyle demo
- Backport PR #29839: Improve docs regarding plt.close().
- Backport PR #29842: Don't drag draggables on scroll events
- Backport PR #29545: DOC: correctly specify return type of `figaspect`
- Backport PR #29773: DOC: Improve interactive figures guide / Blocking input
- Backport PR #29834: TST: pin flake8
- Backport PR #29853: Update lib/matplotlib/stackplot.py
- Backport PR #29803: DOC: Improve FancyArrowPatch docstring
- Backport PR #29896: Change `.T` to `.transpose()` in `_reshape_2D`
- Backport PR #29899: [doc] minimally document what basic units is doing
- Backport PR #29897: BUG: ensure that errorbar does not error on masked negative errors.
- Backport PR #29929: Correct rightparen typo
- Backport PR #29920: Allow `None` in set_prop_cycle (in type hints)
- Backport PR #29931: Allow Python native sequences in Matplotlib `imsave()`.
- Backport PR #29919: Handle MOVETO's, CLOSEPOLY's and empty paths in Path.interpolated
- Fix broken links in interactive guide
- STY: placate lint
- Backport PR #29872: TST: Use placeholders for text in layout tests
- Backport PR #29796: ci: rotate soon-to-be-unsupported GitHub Actions ubuntu-20.04 runner out of roster
- Backport PR #29827: TST: Remove unnecessary test images
- Backport PR #29965: Document Axes.spines
- Backport PR #29970: TST: Make refcount tests more resilient to Python changes
- Backport PR #29979: Fix typos: horizonatal -> horizontal
- Backport PR #29975: DOC: correct signature for animation update function in rain example
- Backport PR #29370: DOC: Improve NonUniformImage docs
- Backport PR #29789: Improve layout of cheatsheets in sidebar
- Backport PR #29995: Fix typo: missing singlequote in unrecognized backend exception
- Backport PR #29997: BLD: Ensure meson.build has the right version of Python
- Backport PR #29673: DOC: document the issues with overlaying new mpl on old mpl
- Backport PR #29992 on v3.10.x: Update pinned oldest win image on azure
- Backport PR #29907: Ensure text metric calculation always uses the text cache
- REL prep 3.10.3
- REL: v3.10.3
- Bump from v3.10.3 tag

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",ksunden,2501846,open,False,0,2025-05-09T18:31:30+00:00,2025-05-09T22:28:58+00:00,,Documentation: user guide,0,0,0,0,0,0,0
matplotlib/matplotlib,3051996163,30030,"Add ""sans"" alias to rc() to allow users to set font.sans-serif","<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->
Closes #30021. Previously, users were unable to set font.sans-serif by using keyword arguments to the `rc` function as described in the issue. This change adds the `sans` alias to `sans-serif`. It appears to function as intended:

```python3
>>> import matplotlib as mpl
>>> mpl.rcParams[""font.sans-serif""]
['DejaVu Sans', 'Bitstream Vera Sans', 'Computer Modern Sans Serif', 'Lucida Grande', 'Verdana', 'Geneva', 'Lucid', 'Arial', 'Helvetica', 'Avant Garde', 'sans-serif']
>>> mpl.rc(""font"", sans=""Verdana"")
>>> mpl.rcParams[""font.sans-serif""]
['Verdana']
```

The change to the alias list in the docstring also appears to be OK:
![image](https://github.com/user-attachments/assets/41732d72-75a0-44be-9503-8027c68567a4)

No tests seemed to fail following this change.

## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [x] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [x] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",founta,8631329,open,False,2,2025-05-09T12:18:23+00:00,2025-05-10T10:31:39+00:00,,topic: rcparams;topic: text/fonts,0,0,0,0,0,0,0
matplotlib/matplotlib,3050432451,30029,Update diagram in subplots_adjust documentation to clarify parameters,"## PR summary
This pull request addresses an issue in the documentation for [](https://matplotlib.org/stable/api/_as_gen/matplotlib.figure.Figure.subplots_adjust.html#matplotlib.figure.Figure.subplots_adjust) where the diagram incorrectly implied that the left, right, top, and bottom parameters were distances from the nearest subplot edges. In reality, these parameters represent distances from the edges of the figure (the overall plotting area).

- Why is this change necessary?
The current diagram is misleading and contradicts the correct usage of subplots_adjust, potentially causing confusion for users trying to control subplot layout. 

- What is the reasoning for this implementation?
The implementation involves updating the Python script (doc/_embedded_plots/figure_subplots_adjust.py) that generates the diagram embedded in the documentation. The plotting code has been modified to accurately represent the relationship between the subplots_adjust parameters and the figure edges, matching the function's actual behavior.

## PR checklist

- [ ]  closes #30022 [matplotlib.figure.Figure.subplots_adjust figure](https://github.com/matplotlib/matplotlib/issues/30022#issuecomment-2861297324)
- [N/A ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in [figure_subplots_adjust.py](https://github.com/matplotlib/matplotlib/blob/main/doc/_embedded_plots/figure_subplots_adjust.py)
- [N/A ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines
",Bindi003,160021929,closed,False,4,2025-05-09T00:30:05+00:00,2025-05-09T22:14:42+00:00,2025-05-09T20:46:21+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3049878198,30028,Deprecate unused 'origin' and 'extent' in tricontour and tricontour,"As recommended by @rcomer i just used the decorator to take care of the issue.

- [x] ""closes #0000"" is in the body of the PR description to [link the related issue](https://github.com/matplotlib/matplotlib/issues/24006)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [x] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [x] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [x] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines",BrunoWolf03,102613947,open,False,1,2025-05-08T19:16:51+00:00,2025-05-10T10:04:26+00:00,,topic: tri,0,0,0,0,0,0,0
matplotlib/matplotlib,3048730772,30027,Make PdfFile font-related attributes private.,"They are clearly intended for internal use, and we may want to change their internal representation in the future to support xetex/luatex (which expose more font types).

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",anntzer,1322974,closed,False,2,2025-05-08T11:41:06+00:00,2025-05-08T18:23:28+00:00,2025-05-08T15:35:22+00:00,backend: pdf;Maintenance,0,0,0,0,0,0,0
matplotlib/matplotlib,3047080962,30026,[Doc]: add histogram as colorbar example,"### Documentation Link

_No response_

### Problem

Making a colorbar histogram is a kinda popular visualization that's not difficult but I figure finnicky enough that it's worth adding an example to the gallery. 

### Suggested improvement

I've got one here to explain what I mean but I'm making this an issue so that maybe someone who has a better example can have fun with this:

![Image](https://github.com/user-attachments/assets/c0393ec5-64a8-406b-bb93-35851111bf6d)

```python
x = np.random.random(100).reshape(10,10)
counts, bins = np.histogram(x)

cmap = plt.colormaps['viridis']
norm = mcolors.BoundaryNorm(bins, cmap.N)

fig, ax = plt.subplots()
im = ax.imshow(x, cmap=cmap, norm=norm)
cbar = plt.colorbar(im)

cax = ax.inset_axes([1.5, 0, .25, 1])
midpoints = bins[:-1] + np.diff(bins)/2
cax.barh(midpoints, counts, height= 1/len(counts), color = cmap(norm(midpoints)))
cax.set_yticks(bins)
cax.margins(0)
cax.spines[:].set_visible(False)
```

I'm making cax an inset_axes here mostly because a lot of the real use cases for this are maps where it's nice to have a lot of control on where to put the histogram. I figure this example should live in color. Would be even nicer with #26312 and colorizer 'cause then I think the syncing is managed.

",story645,1300499,open,False,4,2025-05-07T20:18:57+00:00,2025-05-08T15:14:28+00:00,,Documentation;topic: color/colorbar;Documentation: examples,1,1,0,0,0,0,0
matplotlib/matplotlib,3046584149,30025,Deprecate unused 'origin' and 'extent' in tricontour and tricontourf,"PR SUMMARY:

Set the Origin and Extent parameters to none, if the parameters stay as none the user gets a warning.

- [X] ""closes #0000"" is in the body of the PR description to [link the related issue](https://github.com/matplotlib/matplotlib/issues/24006)
- [X] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [X] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [X] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [X] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines",BrunoWolf03,102613947,closed,False,1,2025-05-07T16:47:11+00:00,2025-05-08T19:06:31+00:00,2025-05-08T19:06:30+00:00,topic: tri,0,0,0,0,0,0,0
matplotlib/matplotlib,3045005413,30024,"Feature Implementation for ""setting spine default location displacement rcParams"" *ATTEMPT 2* - DRAFT PR","** DRAFT PULL REQUEST **

closes #13930 

This PR is a re-attempt of PR #30011 which I think I messed up. I address the comments made in that PR conversation as well.

Implementing feature to set default spine positions for top, left, right and bottom using rcParams. Feature implementation involves the addition of four new rcParams:

axes.spines.left.position
axes.spines.right.position
axes.spines.bottom.position
axes.spines.top.position

The default value for the rcParams is ('outward', 0.0). The 'axes.spines.{spine_type}.position' format for the rcParams was chosen, as 'axes.spines.{spine_type}' is already taken for another purpose, I believe whether to show or not show an axis.

The rcParams can be set to ('outward' | 'axes' | 'data', amount) or 'center' or 'zero'

Below is a screenshot showing the feature in action.

![image](https://github.com/user-attachments/assets/fb796c53-24da-4e40-b98d-8789d1e739f7)",ebubekir-pulat,83969385,open,False,1,2025-05-07T07:37:53+00:00,2025-05-07T09:29:10+00:00,,topic: rcparams;topic: styles,0,0,0,0,0,0,0
matplotlib/matplotlib,3044899728,30023,Remove unused `_api` import,"## PR summary

The combination of #30014 and #30015 made this import redundant, but as each PR was independently tested and reviewed, nothing was evident until both were merged.

## PR checklist

- [n/a] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [n/a] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [n/a] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [n/a] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines",QuLogic,302469,closed,False,0,2025-05-07T06:52:19+00:00,2025-05-07T10:03:06+00:00,2025-05-07T09:45:44+00:00,topic: mpl_toolkit,0,0,0,0,0,0,0
matplotlib/matplotlib,3043799956,30022,[Doc]: matplotlib.figure.Figure.subplots_adjust figure,"### Documentation Link

https://matplotlib.org/stable/api/_as_gen/matplotlib.figure.Figure.subplots_adjust.html#matplotlib.figure.Figure.subplots_adjust

### Problem

The image implies ""right"" and ""top"" are given as distances from the nearest subplot, while in reality, they are supposed to be expressed as distances from the zero coordinate of the figure.

As an example, to center a figure one might give this according to the diagram:
```python
fig.subplots_adjust(
  right = 0.2,
  left = 0.2,
  bottom = 0.2,
  top = 0.2
)
```
while the correct arguments would be:
```python
fig.subplots_adjust(
  right = 0.8,
  left = 0.2,
  bottom = 0.2,
  top = 0.8
)
```

### Suggested improvement

A simple correction of the diagram would likely be sufficient.",battisti456,34172919,closed,False,2,2025-05-06T19:26:42+00:00,2025-05-09T22:29:40+00:00,2025-05-09T20:46:22+00:00,Documentation,0,0,0,0,0,0,0
matplotlib/matplotlib,3043509664,30021,[Bug]: Setting font.sans-serif is impossible by the intended way using matplotlib.rc because it contains a hyphen.,"### Bug summary

The functions `matplotlib.rc` and `matplotlib.pyplot.rc` process settings given as named parameters. Named parameters can't contain hyphens; therefore, it is impossible to set `font.sans-serif` so because it contains a hyphen.

It is possible to set the parameter by different means, but this seems like the main way, so I consider that it does not work a significant shortcoming. How else this parameter can be set:
- `matplotlib.rcParams[""font.sans-serif""] = ""Fira Sans""`
- `matplotlib.rc(""font"", **{""sans-serif"": ""Fira Sans""})`


### Code for reproduction

```Python
from matplotlib import rc
rc(""font"", sans-serif=""Fira Sans"")
```

### Actual outcome

```
>>> from matplotlib import rc
>>> rc(""font"", sans-serif=""Fira Sans"")
  File ""<python-input-1>"", line 1
    rc(""font"", sans-serif=""Fira Sans"")
               ^^^^^^^^^^^
SyntaxError: expression cannot contain assignment, perhaps you meant ""==""?
```

### Expected outcome

I think that that the parameter is named `font.sans-serif` is a mistake, and it should be named something like `font.sans_serif` with an underscore. It may be too late to change that, but an alias would work. `rc` already has aliases like `lw` → `linewidth`, `ls` → `linestyle`, `c` → `color`. I expect that there would be an alias like `sans` → `sans-serif` so I could use `rc(""font"", sans=""Fira Sans"")`.

### Additional information

_No response_

### Operating system

_No response_

### Matplotlib Version

3.10.1

### Matplotlib Backend

_No response_

### Python version

Python 3.13.3

### Jupyter version

_No response_

### Installation

None",matj1,22873928,open,False,1,2025-05-06T17:18:30+00:00,2025-05-06T18:10:17+00:00,,,0,0,0,0,0,0,0
matplotlib/matplotlib,3042522562,30020,Micro-optimize _to_rgba_no_colorcycle.,"This patch speeds up conversions of `#rgba`-type formats by between 25% and 40% (while shortening the implementation), although real benefits should be limited because of caching in to_rgba.

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",anntzer,1322974,closed,False,2,2025-05-06T11:32:30+00:00,2025-05-08T19:43:59+00:00,2025-05-08T19:29:29+00:00,Performance;topic: color/color & colormaps;Maintenance,0,0,0,0,0,0,0
matplotlib/matplotlib,3041863678,30019,FIX #30007: Raise ValueError when all wedge sizes are zero in ax.pie,"<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->
This closes #30007, `ax.pie` will now throw a ValueError when all the wedges are zero ,  before entering the NaN conversion
## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [x] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->

![Screenshot (128)](https://github.com/user-attachments/assets/f0e351ed-b1f1-4445-96e6-67b0644a3496)

",albus-droid,70963724,closed,False,3,2025-05-06T07:45:34+00:00,2025-05-06T16:44:17+00:00,2025-05-06T09:46:54+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3041543694,30018,Backport PR #29907 on branch v3.10.x (Ensure text metric calculation always uses the text cache),Backport PR #29907: Ensure text metric calculation always uses the text cache,meeseeksmachine,39504233,closed,False,0,2025-05-06T05:16:53+00:00,2025-05-06T07:38:40+00:00,2025-05-06T07:38:40+00:00,topic: text;topic: mpl_toolkit,0,0,0,0,0,0,0
matplotlib/matplotlib,3041016402,30017,Allow setting of aspect ratio for Axes in rcParams - Draft PR,"** DRAFT PR **

closes #8088

Implementing feature that allows the setting of a default aspect ratio for axes, not just images. New features involves the addition of the rcParam: axes.aspect.

Below is a screenshot showing the feature in action (before the last couple of recent upstream commits were merged into the branch):
![image](https://github.com/user-attachments/assets/c05df1eb-86cc-4828-a1b7-74fe757199ba)



",ebubekir-pulat,83969385,open,False,0,2025-05-05T22:51:31+00:00,2025-05-05T22:51:42+00:00,,topic: rcparams;topic: styles;topic: axes,0,0,0,0,0,0,0
matplotlib/matplotlib,3040616786,30016,Bump github/codeql-action from 3.28.16 to 3.28.17 in the actions group,"Bumps the actions group with 1 update: [github/codeql-action](https://github.com/github/codeql-action).

Updates `github/codeql-action` from 3.28.16 to 3.28.17
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/github/codeql-action/releases"">github/codeql-action's releases</a>.</em></p>
<blockquote>
<h2>v3.28.17</h2>
<h1>CodeQL Action Changelog</h1>
<p>See the <a href=""https://github.com/github/codeql-action/releases"">releases page</a> for the relevant changes to the CodeQL CLI and language packs.</p>
<h2>3.28.17 - 02 May 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.21.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2872"">#2872</a></li>
</ul>
<p>See the full <a href=""https://github.com/github/codeql-action/blob/v3.28.17/CHANGELOG.md"">CHANGELOG.md</a> for more information.</p>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>
<blockquote>
<h1>CodeQL Action Changelog</h1>
<p>See the <a href=""https://github.com/github/codeql-action/releases"">releases page</a> for the relevant changes to the CodeQL CLI and language packs.</p>
<h2>[UNRELEASED]</h2>
<p>No user facing changes.</p>
<h2>3.28.17 - 02 May 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.21.2. <a href=""https://redirect.github.com/github/codeql-action/pull/2872"">#2872</a></li>
</ul>
<h2>3.28.16 - 23 Apr 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.21.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2863"">#2863</a></li>
</ul>
<h2>3.28.15 - 07 Apr 2025</h2>
<ul>
<li>Fix bug where the action would fail if it tried to produce a debug artifact with more than 65535 files. <a href=""https://redirect.github.com/github/codeql-action/pull/2842"">#2842</a></li>
</ul>
<h2>3.28.14 - 07 Apr 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.21.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2838"">#2838</a></li>
</ul>
<h2>3.28.13 - 24 Mar 2025</h2>
<p>No user facing changes.</p>
<h2>3.28.12 - 19 Mar 2025</h2>
<ul>
<li>Dependency caching should now cache more dependencies for Java <code>build-mode: none</code> extractions. This should speed up workflows and avoid inconsistent alerts in some cases.</li>
<li>Update default CodeQL bundle version to 2.20.7. <a href=""https://redirect.github.com/github/codeql-action/pull/2810"">#2810</a></li>
</ul>
<h2>3.28.11 - 07 Mar 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.20.6. <a href=""https://redirect.github.com/github/codeql-action/pull/2793"">#2793</a></li>
</ul>
<h2>3.28.10 - 21 Feb 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.20.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2772"">#2772</a></li>
<li>Address an issue where the CodeQL Bundle would occasionally fail to decompress on macOS. <a href=""https://redirect.github.com/github/codeql-action/pull/2768"">#2768</a></li>
</ul>
<h2>3.28.9 - 07 Feb 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.20.4. <a href=""https://redirect.github.com/github/codeql-action/pull/2753"">#2753</a></li>
</ul>
<h2>3.28.8 - 29 Jan 2025</h2>
<ul>
<li>Enable support for Kotlin 2.1.10 when running with CodeQL CLI v2.20.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2744"">#2744</a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/github/codeql-action/commit/60168efe1c415ce0f5521ea06d5c2062adbeed1b""><code>60168ef</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2886"">#2886</a> from github/update-v3.28.17-97a2bfd2a</li>
<li><a href=""https://github.com/github/codeql-action/commit/0d5a3115da6459f8ab4333164184f8292c0c7a7f""><code>0d5a311</code></a> Update changelog for v3.28.17</li>
<li><a href=""https://github.com/github/codeql-action/commit/97a2bfd2a3d26d458da69e548f7f859d6fca634d""><code>97a2bfd</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2872"">#2872</a> from github/update-bundle/codeql-bundle-v2.21.2</li>
<li><a href=""https://github.com/github/codeql-action/commit/9aba20e4c91fd8c3a71d5ab2bdeba0da11713864""><code>9aba20e</code></a> Merge branch 'main' into update-bundle/codeql-bundle-v2.21.2</li>
<li><a href=""https://github.com/github/codeql-action/commit/81a9508deb02898c1a7be79bd5b49bb0ab9c787e""><code>81a9508</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2876"">#2876</a> from github/henrymercer/fix-diff-informed-multiple-a...</li>
<li><a href=""https://github.com/github/codeql-action/commit/1569f4c145413fbce7d6573c6ee9212d2612d27f""><code>1569f4c</code></a> Disable diff-informed queries in code scanning config tests</li>
<li><a href=""https://github.com/github/codeql-action/commit/62fbeb66b359bfbdec7d4d96af8f68aece59b4db""><code>62fbeb6</code></a> Merge branch 'main' into henrymercer/fix-diff-informed-multiple-analyze</li>
<li><a href=""https://github.com/github/codeql-action/commit/f122d1dc9eb83b12dc16b38495b667a2dddfa6f9""><code>f122d1d</code></a> Address test failures from computing temporary directory too early</li>
<li><a href=""https://github.com/github/codeql-action/commit/083772aae48a3be5654921bb6e6ccb00e0e1d563""><code>083772a</code></a> Do not fail diff informed analyses when <code>analyze</code> is run twice in the same job</li>
<li><a href=""https://github.com/github/codeql-action/commit/5db14d0471303d6eee1e2a51393f5ae1669b6703""><code>5db14d0</code></a> Merge branch 'main' into update-bundle/codeql-bundle-v2.21.2</li>
<li>Additional commits viewable in <a href=""https://github.com/github/codeql-action/compare/28deaeda66b76a05916b6923827895f2b14ab387...60168efe1c415ce0f5521ea06d5c2062adbeed1b"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=3.28.16&new-version=3.28.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore <dependency name> major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself)
- `@dependabot ignore <dependency name> minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself)
- `@dependabot ignore <dependency name>` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself)
- `@dependabot unignore <dependency name>` will remove all of the ignore conditions of the specified dependency
- `@dependabot unignore <dependency name> <ignore condition>` will remove the ignore condition of the specified dependency and ignore conditions


</details>",dependabot[bot],49699333,closed,False,0,2025-05-05T19:29:38+00:00,2025-05-06T09:05:41+00:00,2025-05-06T08:58:48+00:00,dependencies;github_actions,0,0,0,0,0,0,0
matplotlib/matplotlib,3040282076,30015,Expire deprecation of nth_coord arguments,"<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
Deprecated in 3.9, so time to expire in 3.11.
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",dstansby,6197628,closed,False,0,2025-05-05T17:12:22+00:00,2025-05-06T20:07:12+00:00,2025-05-06T20:07:12+00:00,topic: mpl_toolkit,0,0,0,0,0,0,0
matplotlib/matplotlib,3040270647,30014,Remove deprecated get_tick_iterator(),"<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary

Deprecated in 3.9, so time to remove in 3.11.
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",dstansby,6197628,closed,False,5,2025-05-05T17:07:05+00:00,2025-05-06T21:12:35+00:00,2025-05-06T21:12:34+00:00,topic: mpl_toolkit,0,0,0,0,0,0,0
matplotlib/matplotlib,3040246133,30013,Backport PR #29992 on v3.10.1-doc: Update pinned oldest win image on azure,"

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->
Backport of #29992 for the v3.10.1-doc branch.  I diverged from the instructions and cherry-picked the commit from #30010 since that produced no conflict.

(cherry picked from commit acb736158fe77f8512a853f0d9790cabd104669e)

## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",rcomer,10599679,closed,False,2,2025-05-05T16:56:26+00:00,2025-05-05T17:36:00+00:00,2025-05-05T17:28:28+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3039496885,30012,[Bug]: Constrained layout causes two windows to appear instead of one,"### Bug summary

When calling `pyplot.subplots( layout = ""constrained"" )` after creating a figure causes matplotlib to display two windows instead of one. See minimal code below.

### Code for reproduction

```Python
#!/usr/bin/env python3

import matplotlib.pyplot as pyplot

figure = pyplot.figure( figsize = ( 6, 4 ) )
pyplot.subplots( layout = ""constrained"" )
pyplot.show()
```

### Actual outcome


![Image](https://github.com/user-attachments/assets/80c22f57-c6e2-498e-80b2-ad0bf0f0f7a8)

### Expected outcome

<img width=""712"" alt=""Image"" src=""https://github.com/user-attachments/assets/bdb72b27-b621-4e4f-afd5-4429ab289efe"" />

### Additional information

Commenting out the line with `pyplot.subplots( layout = ""constrained"" )`  will display only one window as expected.

### Operating system

macOS

### Matplotlib Version

3.10.1

### Matplotlib Backend

macosx

### Python version

Python 3.13.2

### Jupyter version

_No response_

### Installation

pip",DominikDeak,1121604,closed,False,1,2025-05-05T12:20:42+00:00,2025-05-05T12:29:13+00:00,2025-05-05T12:28:09+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3039260395,30011,"Feature Implementation for ""setting spine default location displacement rcParams"" - DRAFT PR","** DRAFT PULL REQUEST **

closes #13930 

Implementing feature to set default spine positions (outward) for top, left, right and bottom using rcParams. Feature implementation involves the addition of four new rcParams: 

- axes.spines.left_outward
- axes.spines.right_outward
- axes.spines.bottom_outward
- axes.spines.top_outward

Below is a screenshot showing the feature in action.

![image](https://github.com/user-attachments/assets/681bf3ef-3130-46ca-a0a2-6e977b8ee9a9)
",ebubekir-pulat,83969385,closed,False,3,2025-05-05T10:35:51+00:00,2025-05-07T07:39:08+00:00,2025-05-07T07:39:08+00:00,topic: rcparams;topic: styles,0,0,0,0,0,0,0
matplotlib/matplotlib,3039170869,30010,Backport PR #29992 on v3.10.x: Update pinned oldest win image on azure,"Manual backport of #29992.  Conflicts were because we have more runners on the v3.10.x branch:

* We still support python 3.10 here so the minimum image is used for that instead of python 3.11
* #29171 was not backported so we have multiple platforms and so the modified if-loop is more nested

(cherry picked from commit ab102c079ae0474861bbb1dcc64da436d1a84f8b)
",rcomer,10599679,closed,False,0,2025-05-05T09:56:11+00:00,2025-05-05T22:05:09+00:00,2025-05-05T16:38:00+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3038306939,30009,ENH: Add tick label alignment parameters to tick_params,"## PR summary
This PR adds support for horizontal and vertical alignment of tick labels through the `tick_params` method, addressing issues #13774 and #20644. The implementation allows users to control the alignment of tick labels directly through `tick_params`, making it more consistent with other tick label properties and easier to use.

### Changes Made
1. Added new parameters to `tick_params`:
   - `labelhorizontalalignment`: Controls the horizontal alignment of tick labels
   - `labelverticalalignment`: Controls the vertical alignment of tick labels

2. Added validation for alignment parameters:
   - For x-axis: `labelhorizontalalignment` accepts 'left', 'center', 'right'
   - For y-axis: `labelverticalalignment` accepts 'top', 'center', 'bottom', 'baseline', 'center_baseline'

3. Added tests in `test_axis.py` to verify the functionality:
   - Testing horizontal and vertical alignment for both x and y axes
   - Testing parameter validation

4. Updated documentation:
   - Added new parameters to `tick_params` docstring
   - Added documentation in `axis_api.rst`
   - Added a ""What's New"" entry in `tick_label_alignment.rst`

### Example Usage
```python
import matplotlib.pyplot as plt

fig, ax = plt.subplots()
# Set horizontal alignment for x-axis labels
ax.tick_params(axis='x', labelhorizontalalignment='right')
# Set vertical alignment for y-axis labels
ax.tick_params(axis='y', labelverticalalignment='top')
```

### Why is this change necessary?
Currently, users need to iterate over tick labels to set their alignment, which is less convenient than using `tick_params`. This change makes the API more consistent and user-friendly by:
1. Providing a more intuitive way to set tick label alignment
2. Making the API more consistent with other tick label properties
3. Reducing the need for manual iteration over tick labels
4. Following the principle of least astonishment - if a user specifies `ax.tick_params(axis=""y"", horizontalalignment=""left"")`, they would expect it to apply to the y-axis labels

### Implementation Details
The implementation:
1. Adds the new parameters to the `_translate_tick_params` method in `Axis` class
2. Adds parameter validation in `set_tick_params` method
3. Implements the alignment setting in the `_apply_params` method of the `Tick` class
4. Maintains consistency with existing tick parameter translation system

## PR checklist
- [x] ""closes #13774"" and ""closes #20644"" are in the body of the PR description
- [x] New and changed code is tested
  - Added `test_tick_label_alignment` in `test_axis.py`
- [x] Plotting related features are demonstrated in an example
  - Added example in PR summary
- [x] New Features and API Changes are noted with a directive and release note
  - Added new parameters to `tick_params` docstring
  - Added documentation for new parameters
- [x] Documentation complies with general and docstring guidelines
  - Updated docstrings in `axes/_base.py` and `axis.py`
  - Added clear descriptions of new parameters
",aydengemz,17396450,open,False,1,2025-05-04T23:24:14+00:00,2025-05-05T13:54:04+00:00,,status: needs revision;topic: ticks axis labels;topic: axes;Documentation: API,0,0,0,0,0,0,0
matplotlib/matplotlib,3037976620,30008,Update colorbar with new colorizer API,"Updates colorbar.colorbar to accept a colorizer.Colorizer object, in addition to colorizer.ColorizingArtist. This commit also changes the docs from referencing cm.ScalarMappable to referencing colorizer.ColorizingArtist.

## PR summary
With the introduction of `colorizer.Colorizer` and `colorizer.ColorizingArtist` (#28658) we have separated the norm→color pipeline from the artist. However, the colorbar API has not been updated since these changes took effect. 

Consider [this example](https://matplotlib.org/stable/users/explain/colors/colorbar_only.html#basic-continuous-colorbar):
```
fig, ax = plt.subplots(figsize=(6, 1), layout='constrained')

norm = mpl.colors.Normalize(vmin=5, vmax=10)

fig.colorbar(mpl.cm.ScalarMappable(norm=norm, cmap='cool'),
             cax=ax, orientation='horizontal', label='Some Units')
```
![image](https://github.com/user-attachments/assets/a99ec444-1f7c-48e7-8fe3-b2c5dc83b24a)

With the new colorizer API, one would expect be able to replace `cm.ScalarMappable` above with `colorizer.Colorizer`, however, this is currently not possible, and one must instead replace `cm.ScalarMappable` above with `colorizer.ColorizingArtist`, which requires a `colorizer.Colorizer` as input.

```py 
fig.colorbar(mpl.colorizer.ColorizingArtist(mpl.colorizer.Colorizer(norm=norm, cmap='cool')),
             cax=ax, orientation='horizontal', label='Some Units')
```
This is despite the fact that the norm→color pipeline is entirely contained in the colorizer, and it fails only because of a single call to `self.mappable.get_array()` within `colorbar.Colorbar()`.

This PR updates `colorbar.colorbar()` so that it can accept a `colorizer.Colorizer` as an alternative to `colorizer.ColorizingArtist`.

```py
fig.colorbar(mpl.colorizer.Colorizer(norm=norm, cmap='cool'),
             cax=ax, orientation='horizontal', label='Some Units')
```

The following additional changes are included in this PR:
* Changes the docs from referencing `cm.ScalarMappable` to `colorizer.ColorizingArtist`.
* Updates `colorbar.Colorbar` to the new colorizer API by adding `.colorizer` as a mutable property on a `colorbar.Colorbar` [this must be mutable as it is mutable for `ColorizingArtist` and when it changes on the artist it must change on the colorbar]
* makes the `.norm` and `.cmap` of a colorbar properties that get the relevant property from the colorizer. This also makes the explicitly immutable.
* makes the `.mappable` on a `colorbar.Colorbar` explicitly immutable.




## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [¹] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [x] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

 ¹ I would like to update https://matplotlib.org/stable/users/explain/colors/colorbar_only.html and https://matplotlib.org/stable/gallery/images_contours_and_fields/multi_image.html but I think that would benefit from having this PR be implemented first.",trygvrad,2361452,open,False,0,2025-05-04T12:23:24+00:00,2025-05-04T12:23:35+00:00,,topic: color/color & colormaps;topic: figures and subfigures,0,0,0,0,0,0,0
matplotlib/matplotlib,3037792841,30007,"Axes.pie([0, 0]) crashes with “cannot convert float NaN to integer” when all slice sizes are zero","Calling ax.pie() with all-zero data leads to an internal NaN→int conversion failure, rather than a clean “all zero input” error or an empty plot.


Reproducible example

```
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
fig, ax = plt.subplots()
ax.pie([0, 0], labels=[""A"", ""B""])
fig.savefig(""out.png"")`
```

Traceback


```
RuntimeWarning: invalid value encountered in divide
  x = x / sx
...
  File "".../matplotlib/axes/_axes.py"", line 3409, in pie
    w = mpatches.Wedge((x, y), radius, 360. * min(theta1, theta2),
      ...
  File "".../matplotlib/patches.py"", line 1264, in _recompute_path
    arc = Path.arc(theta1, theta2)
  File "".../matplotlib/path.py"", line 961, in arc
    n = int(2 ** np.ceil((eta2 - eta1) / halfpi))
ValueError: cannot convert float NaN to integer
```


Expected behavior

Either:

Render an empty/placeholder pie when slice‐sizes sum to zero

Or raise a clear ValueError(""All wedge sizes zero"") before entering the NaN conversion",PouyaSA96,199009469,closed,False,4,2025-05-04T05:39:33+00:00,2025-05-06T21:21:19+00:00,2025-05-06T09:46:55+00:00,status: confirmed bug;Good first issue,0,0,0,0,0,0,0
matplotlib/matplotlib,3037611618,30006,Enable linting of .pyi files,"Enables linting of .pyi files. Most of the fixes here are line length, other fixes are:

- Fix `__all__` in `__init__.pyi`
- Remove unused imports",dstansby,6197628,closed,False,6,2025-05-03T21:00:32+00:00,2025-05-10T08:52:02+00:00,2025-05-09T21:14:44+00:00,topic: text;topic: color/color & colormaps;topic: contour;topic: table,0,0,0,0,0,0,0
matplotlib/matplotlib,3037562601,30005,Remove cm.get_cmap,See https://github.com/matplotlib/matplotlib/pull/28355 for discussion/history behind this. The last decision (https://github.com/matplotlib/matplotlib/pull/28355#issuecomment-2168467619) was to remove this in 3.11. ,dstansby,6197628,open,False,0,2025-05-03T18:59:28+00:00,2025-05-05T11:39:58+00:00,,topic: color/color & colormaps,0,0,0,0,0,0,0
matplotlib/matplotlib,3037559832,30004,Remove apply_theta_transforms argument,This removes the deprecation that was introduced in https://github.com/matplotlib/matplotlib/pull/24834.,dstansby,6197628,open,False,0,2025-05-03T18:52:53+00:00,2025-05-06T09:05:24+00:00,,topic: text;topic: mpl_toolkit;topic: polar;Documentation: examples,0,0,0,0,0,0,0
matplotlib/matplotlib,3036860745,30003,DOC: missing word + add latex dep section,"<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->

Accidentally lost `be` in #29764 and figured if I was opening up a PR to fix it, I may as well put the latex dependencies in a linkable subsection. 


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",story645,1300499,closed,False,0,2025-05-02T21:26:33+00:00,2025-05-03T03:34:45+00:00,2025-05-03T03:34:43+00:00,Documentation,0,0,0,0,0,0,0
matplotlib/matplotlib,3036641295,30002,Backport PR #29673 on branch v3.10.x (DOC: document the issues with overlaying new mpl on old mpl),Backport PR #29673: DOC: document the issues with overlaying new mpl on old mpl,meeseeksmachine,39504233,closed,False,0,2025-05-02T18:58:16+00:00,2025-05-02T19:15:19+00:00,2025-05-02T19:15:19+00:00,Documentation: API,0,0,0,0,0,0,0
matplotlib/matplotlib,3036606938,30001,Include close matches in error message when key not found,"This is an attempt to resurrect https://github.com/matplotlib/matplotlib/pull/28115, but make it more general so we can emit helpful error messages when keys aren't found.",dstansby,6197628,open,False,1,2025-05-02T18:35:30+00:00,2025-05-05T17:18:56+00:00,,topic: color/color & colormaps,0,0,0,0,0,0,0
matplotlib/matplotlib,3035715788,30000,Implement text shaping with libraqm,"## PR summary

This is based on #29816 but doesn't yet include #29794 and #29695. I'm mostly opening it to see how CI will cope.

## PR checklist

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines",QuLogic,302469,open,False,1,2025-05-02T10:43:58+00:00,2025-05-10T09:11:29+00:00,,topic: mplot3d;backend: agg;topic: path handling;backend: pdf;status: needs rebase;status: waiting for other PR;topic: text/fonts;topic: text/mathtext;status: needs documentation;topic: styles,0,0,0,0,0,0,0
matplotlib/matplotlib,3035514385,29999,Backport PR #29997 on branch v3.10.x (BLD: Ensure meson.build has the right version of Python),"## PR summary

With correction to the Python version, that should be 3.10 for this branch.

## PR checklist

- [n/a] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [n/a] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [n/a] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [n/a] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines",QuLogic,302469,closed,False,0,2025-05-02T08:51:43+00:00,2025-05-02T10:07:25+00:00,2025-05-02T09:54:49+00:00,Build;CI: Run cibuildwheel,0,0,0,0,0,0,0
matplotlib/matplotlib,3034836460,29998,Implement head resizing (and reversal) for larrow/rarrow/darrow,"<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->
When creating an annotation using boxed text in an arrow shape (`patches.BoxStyle.LArrow`/`RArrow`/`DArrow`), `head_width` and `head_angle` arguments may now be passed to adjust the size of the arrow head(s), and (via the use of negative angles) generate 'reversed' arrow heads. Addresses #24618 and is a direct continuation of @Abitamim's work in #24744.

This solves both the issue initially mentioned in #24618 (creating a pentagonal 'road-sign' annotation box), as well as allowing for many other customisation options for arrows; for example, a reversed-head `DArrow` could act as a way to bring attention to a certain region on an axis.

```
import matplotlib.pyplot as plt

fig, ax = plt.subplots(figsize=(4, 3))

t1 = ax.text(0.5, 0.75, ""Road-sign"",
            ha=""center"", va=""center"", size=15,
            bbox=dict(boxstyle=""rarrow,pad=0.3,head_width=1,head_angle=45"",
                      fc=""lightblue"", ec=""steelblue"", lw=2))

t2 = ax.text(0.5, 0.25, ""  Reversed heads   "",
            ha=""center"", va=""center"", size=15,
            bbox=dict(boxstyle=""darrow,pad=0.3,head_width=1.5,head_angle=-45"",
                      fc=""lightblue"", ec=""steelblue"", lw=2))

plt.show()
```
![pr_example](https://github.com/user-attachments/assets/8a8ff7d5-c275-4bd6-8bfe-4fe6c14c3129)

A new test, `test_boxarrow_adjustment`, has been added to test these options.

## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [x] ""closes #24618"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [x] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [x] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",CharlieThornton33,150299532,open,False,5,2025-05-01T22:30:51+00:00,2025-05-10T14:26:00+00:00,,,0,0,0,0,0,0,0
matplotlib/matplotlib,3034625883,29997,BLD: Ensure meson.build has the right version of Python,"## PR summary

If `python3` is in the path, it might be picked up instead of the one used to build. This is the case on GitHub actions, where cibuildwheel seems to explicitly call the Python (3.11+) it wants, but `python3` is in the hosted tool cache as an older version (3.9) that gets picked by Meson. This matters because we need to run `setuptools_scm` to produce the version, and it may not be installed in the `PATH`-based copy.

By specifying the version, Meson should skip the `PATH` option, and choose its final fallback, the interpreter that it is itself running on. While still not guaranteed to be correct everywhere, this should at least work for CI.

## PR checklist

- [n/a] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [n/a] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [n/a] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [n/a] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines",QuLogic,302469,closed,False,3,2025-05-01T20:12:06+00:00,2025-05-02T08:57:45+00:00,2025-05-02T06:35:04+00:00,Build;CI: Run cibuildwheel,0,0,0,0,0,0,0
matplotlib/matplotlib,3034070651,29996,Backport PR #29995 on branch v3.10.x (Fix typo: missing singlequote in unrecognized backend exception),Backport PR #29995: Fix typo: missing singlequote in unrecognized backend exception,meeseeksmachine,39504233,closed,False,0,2025-05-01T15:10:15+00:00,2025-05-01T17:54:05+00:00,2025-05-01T17:54:04+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3033848329,29995,Fix typo: missing singlequote in unrecognized backend exception,"## PR summary
I hope I don't bother you with this _tiny_ PR, but I'd like to have typos addressed eventually. :)
Using some crude RegEx searches (`f""'\{.+""` etc.), I made sure that no similar typos exist.

This is the code in question:
https://github.com/matplotlib/matplotlib/blob/6378dd0277f2900eb9ad5843b674f7fbe77719bf/lib/matplotlib/backends/registry.py#L405-L410

I cross-checked the code style with similar messages in the same file:
https://github.com/matplotlib/matplotlib/blob/6378dd0277f2900eb9ad5843b674f7fbe77719bf/lib/matplotlib/backends/registry.py#L368-L369

## PR checklist
- [N/A] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [N/A] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [N/A] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [N/A] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [N/A] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines",NicoWeio,12870528,closed,False,0,2025-05-01T13:14:37+00:00,2025-05-01T15:18:31+00:00,2025-05-01T15:09:49+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3033745300,29994,Missing type hints for `matplotlib.dates.DateFormatter`,"Using this code:

```py
from matplotlib.dates import DateFormatter

date_fmt = ""%H:%M:%S""
date_formatter = DateFormatter(date_fmt)
```

Running Mypy in `strict` mode results in an erorr:

```
$ mypy --strict main.py 
main.py:4: error: Call to untyped function ""DateFormatter"" in typed context  [no-untyped-call]
Found 1 error in 1 file (checked 1 source file)
```

We'd run Mypy in `strict` mode across all of our code base to catch programming errors and would like to use it with matplotlib without the need to suppress errors like this.

### Environment

- Python 3.11.11
- matplotlib 3.10.1
- mypy 1.15.0

### Related References

- #20504
- #24976",johnthagen,10340167,open,False,2,2025-05-01T12:28:43+00:00,2025-05-01T14:40:13+00:00,,topic: date handling;topic: typing,0,0,0,0,0,0,0
matplotlib/matplotlib,3033692462,29993,Trigger events via standard callbacks in widget testing.,"Sending actual events through the whole event processing pipeline is a more complete test, reveals a few minor issues (see changes below), and avoids being linked to the rather nonstandard widget method names (""press"" or ""_click""?).

The coordinates in the ""move first vertex after completing the polygon"" subtest of test_polygon_selector(draw_bounding_box=True) were altered because the original coordinates would actually not work in a real case, as the mouse-drag would actually also trigger the polygon-rescaling behavior.

The coordinates in test_rectangle_{drag,resize} were altered because for the original coordinates, the click_and_drag would actually be ignore()d due to starting (just) outside of the axes.

Closes #22720.

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",anntzer,1322974,open,False,2,2025-05-01T11:47:26+00:00,2025-05-05T20:51:10+00:00,,topic: mplot3d;topic: testing;Maintenance;topic: canvas and figure manager,0,0,0,0,0,0,0
matplotlib/matplotlib,3033283500,29992,Update pinned oldest win image on azure,"The windows-2019 image will be deprecated on 1.6.2025 (https://github.com/matplotlib/matplotlib/issues/29797#issuecomment-2843052409). Also, this is a test whether the timeouts #29797 are related to the windows-2019 image.

",timhoffm,2836374,closed,False,8,2025-05-01T06:48:37+00:00,2025-05-09T21:13:30+00:00,2025-05-05T09:04:18+00:00,,1,1,0,0,0,0,0
matplotlib/matplotlib,3030723746,29991,Backport PR #29789 on branch v3.10.1-doc (Improve layout of cheatsheets in sidebar),Backport PR #29789: Improve layout of cheatsheets in sidebar,meeseeksmachine,39504233,closed,False,0,2025-04-30T09:36:49+00:00,2025-04-30T09:50:43+00:00,2025-04-30T09:50:42+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3030723405,29990,Backport PR #29789 on branch v3.10.x (Improve layout of cheatsheets in sidebar),Backport PR #29789: Improve layout of cheatsheets in sidebar,meeseeksmachine,39504233,closed,False,0,2025-04-30T09:36:40+00:00,2025-04-30T23:00:49+00:00,2025-04-30T09:50:38+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3030212664,29989,fix: Fix unstable tkagg small plot size.,"<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->

Closes #28330 .

![image](https://github.com/user-attachments/assets/ac92de07-888b-45df-8977-92f9d549ff6a)
Before: Left After: Right

![417524558-869502a2-fd5e-4343-b741-2a7f237e5c1c](https://github.com/user-attachments/assets/1ee416d4-cffc-4089-abc6-9a092ce89aa0)


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [x] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",sandyowlet,62306835,open,False,5,2025-04-30T05:53:58+00:00,2025-05-10T05:52:12+00:00,,GUI: tk,0,0,0,0,0,0,0
matplotlib/matplotlib,3029402340,29988,Refactoring: Removing axis parameter from scales,"This PR addresses [issue #29349](https://github.com/matplotlib/matplotlib/issues/29349) by refactoring built-in scale classes to make the axis parameter optional. The goal is to support future removal of axis while maintaining backward compatibility with current usage.

To achieve this, a decorator was introduced to allow constructors to accept or ignore axis. This was applied across all built-in scales. The scale_factory() function was updated to handle scale classes that do or do not use axis, and register_scale() now issues a deprecation warning if the constructor still expects it.

These changes prepare the codebase for eventual deprecation of axis in scale initializers, while avoiding any breaking changes in current usage.

My only doubt is which initializers for the scales should have the parameter as ""axis = None"". If all of them should have it, then i have to change the way my decorator works because axis could change position in parameters index",vagnermcj,32200525,open,False,0,2025-04-29T20:01:11+00:00,2025-04-30T13:12:44+00:00,,topic: transforms and scales,0,0,0,0,0,0,0
matplotlib/matplotlib,3028615304,29987,Backport PR #29370 on branch v3.10.x (DOC: Improve NonUniformImage docs),Backport PR #29370: DOC: Improve NonUniformImage docs,meeseeksmachine,39504233,closed,False,0,2025-04-29T14:40:29+00:00,2025-04-29T19:28:56+00:00,2025-04-29T19:28:55+00:00,topic: images;Documentation: examples,0,0,0,0,0,0,0
matplotlib/matplotlib,3027622696,29986,WIP: Try running windows tests with a single worker,"Alternative approach on narrowing down the subprocess failures. Assumption is that no timeout will occour if all tests are run sequentially.

See https://github.com/matplotlib/matplotlib/issues/29797#issuecomment-2833795708

*Note:* This is not intended to be merged. It's only a test PR to narrow down the issue and confirm above assumption.",timhoffm,2836374,closed,False,3,2025-04-29T09:15:50+00:00,2025-04-29T15:37:47+00:00,2025-04-29T15:37:39+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3026399154,29985,[Bug]: Setting the edgecolor when using `ax.hist` raises `Invalid RGBA argument` in >=3.10,"### Bug summary

An error is raised when using the `edgecolor` argument with `ax.hist`.

### Code for reproduction

```Python
import matplotlib.pyplot as plt
import numpy as np

x = np.random.normal(10000)

fig, ax = plt.subplots()
ax.hist(
    x,
    edgecolor=(0.5, 0, 0.5, 0.8),
    facecolor=""None"",
)
```

### Actual outcome

```
Traceback (most recent call last):
  File ""/home/nvaytet/code/mpltoolbox/jupyter/example.py"", line 7, in <module>
    ax.hist(
  File ""/home/nvaytet/miniforge3/lib/python3.12/site-packages/matplotlib/_api/deprecation.py"", line 453, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File ""/home/nvaytet/miniforge3/lib/python3.12/site-packages/matplotlib/__init__.py"", line 1521, in inner
    return func(
           ^^^^^
  File ""/home/nvaytet/miniforge3/lib/python3.12/site-packages/matplotlib/axes/_axes.py"", line 7266, in hist
    p._internal_update(kwargs)
  File ""/home/nvaytet/miniforge3/lib/python3.12/site-packages/matplotlib/artist.py"", line 1233, in _internal_update
    return self._update_props(
           ^^^^^^^^^^^^^^^^^^^
  File ""/home/nvaytet/miniforge3/lib/python3.12/site-packages/matplotlib/artist.py"", line 1209, in _update_props
    ret.append(func(v))
               ^^^^^^^
  File ""/home/nvaytet/miniforge3/lib/python3.12/site-packages/matplotlib/patches.py"", line 386, in set_edgecolor
    self._set_edgecolor(color)
  File ""/home/nvaytet/miniforge3/lib/python3.12/site-packages/matplotlib/patches.py"", line 372, in _set_edgecolor
    self._edgecolor = colors.to_rgba(color, self._alpha)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/nvaytet/miniforge3/lib/python3.12/site-packages/matplotlib/colors.py"", line 316, in to_rgba
    rgba = _to_rgba_no_colorcycle(c, alpha)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/nvaytet/miniforge3/lib/python3.12/site-packages/matplotlib/colors.py"", line 400, in _to_rgba_no_colorcycle
    raise ValueError(f""Invalid RGBA argument: {orig_c!r}"")
ValueError: Invalid RGBA argument: np.float64(0.5)
```

### Expected outcome

Should not raise.

### Additional information

This raises with matplotlib 3.10.0 & 3.10.1.
No error is raised with 3.9.4.

### Operating system

Ubuntu 24.04

### Matplotlib Version

3.10.*

### Matplotlib Backend

_No response_

### Python version

3.12

### Jupyter version

_No response_

### Installation

conda",nvaytet,39047984,closed,False,1,2025-04-28T22:27:18+00:00,2025-04-29T19:17:49+00:00,2025-04-29T19:17:47+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3026386528,29984,FIX: Typing of FuncAnimation,"`func` and `init_func` may return None (which is ok if `blit=False`). Since gating the allowed signature on the state of `blit` is not feasible, we err on the side on being too permissive in the type definition: Rather not flag a type error and only raise on runtime than complain on an actually working signature.

Closes #29960.

",timhoffm,2836374,closed,False,4,2025-04-28T22:22:36+00:00,2025-04-29T17:59:19+00:00,2025-04-29T13:51:54+00:00,topic: animation;topic: typing,0,0,0,0,0,0,0
matplotlib/matplotlib,3026291672,29983,Backport PR #29975 on branch v3.10.x (DOC: correct signature for animation update function in rain example),Backport PR #29975: DOC: correct signature for animation update function in rain example,meeseeksmachine,39504233,closed,False,0,2025-04-28T21:33:42+00:00,2025-04-28T22:54:13+00:00,2025-04-28T22:54:13+00:00,Documentation: examples,0,0,0,0,0,0,0
matplotlib/matplotlib,3026127399,29982,Bump the actions group with 5 updates,"Bumps the actions group with 5 updates:

| Package | From | To |
| --- | --- | --- |
| [actions/setup-python](https://github.com/actions/setup-python) | `5.5.0` | `5.6.0` |
| [actions/download-artifact](https://github.com/actions/download-artifact) | `4.2.1` | `4.3.0` |
| [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) | `2.23.2` | `2.23.3` |
| [actions/attest-build-provenance](https://github.com/actions/attest-build-provenance) | `2.2.3` | `2.3.0` |
| [github/codeql-action](https://github.com/github/codeql-action) | `3.28.15` | `3.28.16` |

Updates `actions/setup-python` from 5.5.0 to 5.6.0
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/actions/setup-python/releases"">actions/setup-python's releases</a>.</em></p>
<blockquote>
<h2>v5.6.0</h2>
<h2>What's Changed</h2>
<ul>
<li>Workflow updates related to Ubuntu 20.04 by <a href=""https://github.com/aparnajyothi-y""><code>@​aparnajyothi-y</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/1065"">actions/setup-python#1065</a></li>
<li>Fix for Candidate Not Iterable Error by <a href=""https://github.com/aparnajyothi-y""><code>@​aparnajyothi-y</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/1082"">actions/setup-python#1082</a></li>
<li>Upgrade semver and <code>@​types/semver</code> by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/1091"">actions/setup-python#1091</a></li>
<li>Upgrade prettier from 2.8.8 to 3.5.3 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/1046"">actions/setup-python#1046</a></li>
<li>Upgrade ts-jest from 29.1.2 to 29.3.2 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/1081"">actions/setup-python#1081</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v5...v5.6.0"">https://github.com/actions/setup-python/compare/v5...v5.6.0</a></p>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/actions/setup-python/commit/a26af69be951a213d495a4c3e4e4022e16d87065""><code>a26af69</code></a> Bump ts-jest from 29.1.2 to 29.3.2 (<a href=""https://redirect.github.com/actions/setup-python/issues/1081"">#1081</a>)</li>
<li><a href=""https://github.com/actions/setup-python/commit/30eafe95483bd95135b7eda0c66a0369af9afdf1""><code>30eafe9</code></a> Bump prettier from 2.8.8 to 3.5.3 (<a href=""https://redirect.github.com/actions/setup-python/issues/1046"">#1046</a>)</li>
<li><a href=""https://github.com/actions/setup-python/commit/5d95bc16d4bc83bb56202da9630d84c6f8a2d8f5""><code>5d95bc1</code></a> Bump semver and <code>@​types/semver</code> (<a href=""https://redirect.github.com/actions/setup-python/issues/1091"">#1091</a>)</li>
<li><a href=""https://github.com/actions/setup-python/commit/6ed2c67c8abe7646815dbd50364eea862d396fd9""><code>6ed2c67</code></a> Fix for Candidate Not Iterable Error (<a href=""https://redirect.github.com/actions/setup-python/issues/1082"">#1082</a>)</li>
<li><a href=""https://github.com/actions/setup-python/commit/e348410e00f449ece8581cb8e88be8f0e7712da6""><code>e348410</code></a> Remove Ubuntu 20.04 from workflows due to deprecation from 2025-04-15 (<a href=""https://redirect.github.com/actions/setup-python/issues/1065"">#1065</a>)</li>
<li>See full diff in <a href=""https://github.com/actions/setup-python/compare/8d9ed9ac5c53483de85588cdf95a591a75ab9f55...a26af69be951a213d495a4c3e4e4022e16d87065"">compare view</a></li>
</ul>
</details>
<br />

Updates `actions/download-artifact` from 4.2.1 to 4.3.0
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/actions/download-artifact/releases"">actions/download-artifact's releases</a>.</em></p>
<blockquote>
<h2>v4.3.0</h2>
<h2>What's Changed</h2>
<ul>
<li>feat: implement new <code>artifact-ids</code> input by <a href=""https://github.com/GrantBirki""><code>@​GrantBirki</code></a> in <a href=""https://redirect.github.com/actions/download-artifact/pull/401"">actions/download-artifact#401</a></li>
<li>Fix workflow example for downloading by artifact ID by <a href=""https://github.com/joshmgross""><code>@​joshmgross</code></a> in <a href=""https://redirect.github.com/actions/download-artifact/pull/402"">actions/download-artifact#402</a></li>
<li>Prep for v4.3.0 release by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/download-artifact/pull/404"">actions/download-artifact#404</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/GrantBirki""><code>@​GrantBirki</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/download-artifact/pull/401"">actions/download-artifact#401</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/download-artifact/compare/v4.2.1...v4.3.0"">https://github.com/actions/download-artifact/compare/v4.2.1...v4.3.0</a></p>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/actions/download-artifact/commit/d3f86a106a0bac45b974a628896c90dbdf5c8093""><code>d3f86a1</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/404"">#404</a> from actions/robherley/v4.3.0</li>
<li><a href=""https://github.com/actions/download-artifact/commit/fc02353415da80201a0da48ab47022efd7725d11""><code>fc02353</code></a> prep for v4.3.0 release</li>
<li><a href=""https://github.com/actions/download-artifact/commit/77454371a433f370a16d329ef7db197f700a7a8f""><code>7745437</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/402"">#402</a> from actions/joshmgross/download-by-id-example</li>
<li><a href=""https://github.com/actions/download-artifact/commit/84fc7a0a358aabc7f97f7f590cbfc25f57e26c6a""><code>84fc7a0</code></a> Remove path filters from Check dist workflow</li>
<li><a href=""https://github.com/actions/download-artifact/commit/67f2bc382f6ba5ba75812a05909e8c25a366b5fb""><code>67f2bc3</code></a> Fix workflow example for downloading by artifact ID</li>
<li><a href=""https://github.com/actions/download-artifact/commit/8ea3c2c174f79a56792e9fdd9baad75d27c5d369""><code>8ea3c2c</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/401"">#401</a> from actions/download-by-id</li>
<li><a href=""https://github.com/actions/download-artifact/commit/d219c630f65d8bd14366a9e2f731cbf854f62258""><code>d219c63</code></a> add supporting unit tests for artifact downloads with ids</li>
<li><a href=""https://github.com/actions/download-artifact/commit/54124fbd881f8ce794405a06896c93c49c17463e""><code>54124fb</code></a> revert <code>getArtifact()</code> changes - for now we have to list and filter by artifa...</li>
<li><a href=""https://github.com/actions/download-artifact/commit/b83057b90d3e218abf5c7b1906579eb6c598ae85""><code>b83057b</code></a> bundle</li>
<li><a href=""https://github.com/actions/download-artifact/commit/171183c7dce98c3cf8a1fc842429d0a38ed21d33""><code>171183c</code></a> use the same <code>artifactClient.getArtifact</code> structure as seen above in `isSingl...</li>
<li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/95815c38cf2ff2164869cbab79da8d1f422bc89e...d3f86a106a0bac45b974a628896c90dbdf5c8093"">compare view</a></li>
</ul>
</details>
<br />

Updates `pypa/cibuildwheel` from 2.23.2 to 2.23.3
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/pypa/cibuildwheel/releases"">pypa/cibuildwheel's releases</a>.</em></p>
<blockquote>
<h2>v2.23.3</h2>
<ul>
<li>🛠 Dependency updates, including Python 3.13.3 (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2371"">#2371</a>)</li>
</ul>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md"">pypa/cibuildwheel's changelog</a>.</em></p>
<blockquote>
<hr />
<h2>title: Changelog</h2>
<h1>Changelog</h1>
<h3>v2.23.3</h3>
<p><em>26 April 2025</em></p>
<ul>
<li>🛠 Dependency updates, including Python 3.13.3 (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2371"">#2371</a>)</li>
</ul>
<h3>v2.23.2</h3>
<p><em>24 March 2025</em></p>
<ul>
<li>🐛 Workaround an issue with pyodide builds when running cibuildwheel with a Python that was installed via UV (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2328"">#2328</a> via <a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2331"">#2331</a>)</li>
<li>🛠 Dependency updates, including a manylinux update that fixes an <a href=""https://redirect.github.com/pypa/manylinux/issues/1760"">'undefined symbol' error</a> in gcc-toolset (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2334"">#2334</a>)</li>
</ul>
<h3>v2.23.1</h3>
<p><em>15 March 2025</em></p>
<ul>
<li>⚠️ Added warnings when the shorthand values <code>manylinux1</code>, <code>manylinux2010</code>, <code>manylinux_2_24</code>, and <code>musllinux_1_1</code> are used to specify the images in linux builds. The shorthand to these (unmaintainted) images will be removed in v3.0. If you want to keep using these images, explicitly opt-in using the full image URL, which can be found in <a href=""https://github.com/pypa/cibuildwheel/blob/v2.23.1/cibuildwheel/resources/pinned_docker_images.cfg"">this file</a>. (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2312"">#2312</a>)</li>
<li>🛠 Dependency updates, including a manylinux update which fixes an <a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2303"">issue with rustup</a>. (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2315"">#2315</a>)</li>
</ul>
<h3>v2.23.0</h3>
<p><em>1 March 2025</em></p>
<ul>
<li>✨ Adds official support for the new GitHub Actions Arm runners. In fact these worked out-of-the-box, now we include them in our tests and example configs. (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2135"">#2135</a> via <a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2281"">#2281</a>)</li>
<li>✨ Adds support for building PyPy 3.11 wheels (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2268"">#2268</a> via <a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2281"">#2281</a>)</li>
<li>🛠 Adopts the beta pypa/manylinux image for armv7l builds (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2269"">#2269</a> via <a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2281"">#2281</a>)</li>
<li>🛠 Dependency updates, including Pyodide 0.27 (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2117"">#2117</a> and <a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2281"">#2281</a>)</li>
</ul>
<h3>v2.22.0</h3>
<p><em>23 November 2024</em></p>
<ul>
<li>🌟 Added a new <code>CIBW_ENABLE</code>/<code>enable</code> feature that replaces <code>CIBW_FREETHREADED_SUPPORT</code>/<code>free-threaded-support</code> and <code>CIBW_PRERELEASE_PYTHONS</code> with a system that supports both. In cibuildwheel 3, this will also include a PyPy setting and the deprecated options will be removed. (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2048"">#2048</a>)</li>
<li>🌟 <a href=""https://peps.python.org/pep-0735/"">Dependency groups</a> are now supported for tests. Use <code>CIBW_TEST_GROUPS</code>/<code>test-groups</code> to specify groups in <code>[dependency-groups]</code> for testing. (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2063"">#2063</a>)</li>
<li>🌟 Support for the experimental Ubuntu-based ARMv7l manylinux image (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2052"">#2052</a>)</li>
<li>✨ Show a warning when cibuildwheel is run from Python 3.10 or older; cibuildwheel 3.0 will require Python 3.11 or newer as host (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2050"">#2050</a>)</li>
<li>🐛 Fix issue with stderr interfering with checking the docker version (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2074"">#2074</a>)</li>
<li>🛠 Python 3.9 is now used in <code>CIBW_BEFORE_ALL</code>/<code>before-all</code> on linux, replacing 3.8, which is now EoL (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2043"">#2043</a>)</li>
<li>🛠 Error messages for producing a pure-Python wheel are slightly more informative (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2044"">#2044</a>)</li>
<li>🛠 Better error when <code>uname -m</code> fails on ARM (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2049"">#2049</a>)</li>
<li>🛠 Better error when repair fails and docs for abi3audit on Windows (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2058"">#2058</a>)</li>
<li>🛠 Better error when <code>manylinux-interpreters ensure</code> fails (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2066"">#2066</a>)</li>
<li>🛠 Update Pyodide to 0.26.4, and adapt to the unbundled pyodide-build (now 0.29) (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2090"">#2090</a>)</li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/pypa/cibuildwheel/commit/faf86a6ed7efa889faf6996aa23820831055001a""><code>faf86a6</code></a> Bump version: v2.23.3</li>
<li><a href=""https://github.com/pypa/cibuildwheel/commit/4241f37b2c5be7f7ed96214b83f8cfbe1496cc28""><code>4241f37</code></a> [2.x] Update dependencies (<a href=""https://redirect.github.com/pypa/cibuildwheel/issues/2371"">#2371</a>)</li>
<li>See full diff in <a href=""https://github.com/pypa/cibuildwheel/compare/d04cacbc9866d432033b1d09142936e6a0e2121a...faf86a6ed7efa889faf6996aa23820831055001a"">compare view</a></li>
</ul>
</details>
<br />

Updates `actions/attest-build-provenance` from 2.2.3 to 2.3.0
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/actions/attest-build-provenance/releases"">actions/attest-build-provenance's releases</a>.</em></p>
<blockquote>
<h2>v2.3.0</h2>
<h2>What's Changed</h2>
<ul>
<li>Bump <code>actions/attest</code> from 2.2.1 to 2.3.0 by <a href=""https://github.com/bdehamer""><code>@​bdehamer</code></a> in <a href=""https://redirect.github.com/actions/attest-build-provenance/pull/615"">actions/attest-build-provenance#615</a>
<ul>
<li>Updates <code>@sigstore/oci</code> from 0.4.0 to 0.5.0</li>
</ul>
</li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/attest-build-provenance/compare/v2.2.3...v2.3.0"">https://github.com/actions/attest-build-provenance/compare/v2.2.3...v2.3.0</a></p>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/actions/attest-build-provenance/commit/db473fddc028af60658334401dc6fa3ffd8669fd""><code>db473fd</code></a> bump actions/attest from 2.2.1 to 2.3.0 (<a href=""https://redirect.github.com/actions/attest-build-provenance/issues/615"">#615</a>)</li>
<li><a href=""https://github.com/actions/attest-build-provenance/commit/d3b713ade6128010830a9be91a036ed11e065550""><code>d3b713a</code></a> Bump the actions-minor group with 2 updates (<a href=""https://redirect.github.com/actions/attest-build-provenance/issues/566"">#566</a>)</li>
<li><a href=""https://github.com/actions/attest-build-provenance/commit/e042adb3340da975a8e67c7633c90c38a3b731a3""><code>e042adb</code></a> Bump the npm-development group with 4 updates (<a href=""https://redirect.github.com/actions/attest-build-provenance/issues/567"">#567</a>)</li>
<li><a href=""https://github.com/actions/attest-build-provenance/commit/9d3beef6515cb82652d066f999b94affc15acfac""><code>9d3beef</code></a> Bump the npm-development group with 4 updates (<a href=""https://redirect.github.com/actions/attest-build-provenance/issues/554"">#554</a>)</li>
<li><a href=""https://github.com/actions/attest-build-provenance/commit/877f50d98cebe5a52282b5e1da711c99c7860b66""><code>877f50d</code></a> Bump typescript-eslint in the npm-development group (<a href=""https://redirect.github.com/actions/attest-build-provenance/issues/516"">#516</a>)</li>
<li><a href=""https://github.com/actions/attest-build-provenance/commit/b7ab74091b8e849c9b5a937eebfd372e685467ce""><code>b7ab740</code></a> Bump the npm-development group across 1 directory with 6 updates (<a href=""https://redirect.github.com/actions/attest-build-provenance/issues/506"">#506</a>)</li>
<li>See full diff in <a href=""https://github.com/actions/attest-build-provenance/compare/c074443f1aee8d4aeeae555aebba3282517141b2...db473fddc028af60658334401dc6fa3ffd8669fd"">compare view</a></li>
</ul>
</details>
<br />

Updates `github/codeql-action` from 3.28.15 to 3.28.16
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/github/codeql-action/releases"">github/codeql-action's releases</a>.</em></p>
<blockquote>
<h2>v3.28.16</h2>
<h1>CodeQL Action Changelog</h1>
<p>See the <a href=""https://github.com/github/codeql-action/releases"">releases page</a> for the relevant changes to the CodeQL CLI and language packs.</p>
<h2>3.28.16 - 23 Apr 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.21.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2863"">#2863</a></li>
</ul>
<p>See the full <a href=""https://github.com/github/codeql-action/blob/v3.28.16/CHANGELOG.md"">CHANGELOG.md</a> for more information.</p>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/github/codeql-action/blob/main/CHANGELOG.md"">github/codeql-action's changelog</a>.</em></p>
<blockquote>
<h1>CodeQL Action Changelog</h1>
<p>See the <a href=""https://github.com/github/codeql-action/releases"">releases page</a> for the relevant changes to the CodeQL CLI and language packs.</p>
<h2>[UNRELEASED]</h2>
<p>No user facing changes.</p>
<h2>3.28.16 - 23 Apr 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.21.1. <a href=""https://redirect.github.com/github/codeql-action/pull/2863"">#2863</a></li>
</ul>
<h2>3.28.15 - 07 Apr 2025</h2>
<ul>
<li>Fix bug where the action would fail if it tried to produce a debug artifact with more than 65535 files. <a href=""https://redirect.github.com/github/codeql-action/pull/2842"">#2842</a></li>
</ul>
<h2>3.28.14 - 07 Apr 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.21.0. <a href=""https://redirect.github.com/github/codeql-action/pull/2838"">#2838</a></li>
</ul>
<h2>3.28.13 - 24 Mar 2025</h2>
<p>No user facing changes.</p>
<h2>3.28.12 - 19 Mar 2025</h2>
<ul>
<li>Dependency caching should now cache more dependencies for Java <code>build-mode: none</code> extractions. This should speed up workflows and avoid inconsistent alerts in some cases.</li>
<li>Update default CodeQL bundle version to 2.20.7. <a href=""https://redirect.github.com/github/codeql-action/pull/2810"">#2810</a></li>
</ul>
<h2>3.28.11 - 07 Mar 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.20.6. <a href=""https://redirect.github.com/github/codeql-action/pull/2793"">#2793</a></li>
</ul>
<h2>3.28.10 - 21 Feb 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.20.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2772"">#2772</a></li>
<li>Address an issue where the CodeQL Bundle would occasionally fail to decompress on macOS. <a href=""https://redirect.github.com/github/codeql-action/pull/2768"">#2768</a></li>
</ul>
<h2>3.28.9 - 07 Feb 2025</h2>
<ul>
<li>Update default CodeQL bundle version to 2.20.4. <a href=""https://redirect.github.com/github/codeql-action/pull/2753"">#2753</a></li>
</ul>
<h2>3.28.8 - 29 Jan 2025</h2>
<ul>
<li>Enable support for Kotlin 2.1.10 when running with CodeQL CLI v2.20.3. <a href=""https://redirect.github.com/github/codeql-action/pull/2744"">#2744</a></li>
</ul>
<h2>3.28.7 - 29 Jan 2025</h2>
<p>No user facing changes.</p>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/github/codeql-action/commit/28deaeda66b76a05916b6923827895f2b14ab387""><code>28deaed</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2865"">#2865</a> from github/update-v3.28.16-2a8cbadc0</li>
<li><a href=""https://github.com/github/codeql-action/commit/03c5d71c11f6cb2c5ba7eef371219a862be30193""><code>03c5d71</code></a> Update changelog for v3.28.16</li>
<li><a href=""https://github.com/github/codeql-action/commit/2a8cbadc02bb64a7fd15d37c977acbad02496c80""><code>2a8cbad</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2863"">#2863</a> from github/update-bundle/codeql-bundle-v2.21.1</li>
<li><a href=""https://github.com/github/codeql-action/commit/f76eaf51a636a5c1d927998267d92d6475363ace""><code>f76eaf5</code></a> Add changelog note</li>
<li><a href=""https://github.com/github/codeql-action/commit/e63b3f5166c15fda4eb17886f01abe9445dd13f5""><code>e63b3f5</code></a> Update default bundle to codeql-bundle-v2.21.1</li>
<li><a href=""https://github.com/github/codeql-action/commit/4c3e5362829f0b0bb62ff5f6c938d7f95574c306""><code>4c3e536</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2853"">#2853</a> from github/dependabot/npm_and_yarn/npm-7d84c66b66</li>
<li><a href=""https://github.com/github/codeql-action/commit/56dd02f26d99811d607284494ff84b7d862fe837""><code>56dd02f</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2852"">#2852</a> from github/dependabot/github_actions/actions-457587...</li>
<li><a href=""https://github.com/github/codeql-action/commit/192406dd845fb2228fcea74898b98df2a6cdcef6""><code>192406d</code></a> Merge branch 'main' into dependabot/github_actions/actions-4575878e06</li>
<li><a href=""https://github.com/github/codeql-action/commit/c7dbb2084ed1bb623fbbb3976cd6dbae6daaf1fe""><code>c7dbb20</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2857"">#2857</a> from github/nickfyson/address-vulns</li>
<li><a href=""https://github.com/github/codeql-action/commit/9a45cd8c5025281c30bbb652197ace083c291e49""><code>9a45cd8</code></a> move use of input variables into env vars</li>
<li>Additional commits viewable in <a href=""https://github.com/github/codeql-action/compare/45775bd8235c68ba998cffa5171334d58593da47...28deaeda66b76a05916b6923827895f2b14ab387"">compare view</a></li>
</ul>
</details>
<br />


Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore <dependency name> major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself)
- `@dependabot ignore <dependency name> minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself)
- `@dependabot ignore <dependency name>` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself)
- `@dependabot unignore <dependency name>` will remove all of the ignore conditions of the specified dependency
- `@dependabot unignore <dependency name> <ignore condition>` will remove the ignore condition of the specified dependency and ignore conditions


</details>",dependabot[bot],49699333,closed,False,0,2025-04-28T20:36:57+00:00,2025-04-29T02:50:25+00:00,2025-04-28T22:57:14+00:00,CI: Run cibuildwheel;dependencies;github_actions,0,0,0,0,0,0,0
matplotlib/matplotlib,3026088979,29981,FIX: Move all tests using subprocess to the same worker on windows,"This is a somewhat wild guess based on https://github.com/matplotlib/matplotlib/issues/29797#issuecomment-2833795708

> which makes me think we are somehow crossing state what launching the subprocesses.

Using the `xdist_group` with `--dist=loadgroup` should put all tests of that group to the same worker according to https://pytest-xdist.readthedocs.io/en/stable/distribution.html. I've only added `--dist=loadgroup` to the windows pipelines, so tests on other systems are not affected at all.

The first step is to see whether this works in the PR. - But to be sure, it think we would need to put this on master and monitor whether the timeouts disappear.
",timhoffm,2836374,closed,False,19,2025-04-28T20:26:05+00:00,2025-05-06T07:57:18+00:00,2025-05-05T10:03:20+00:00,status: superseded,0,0,0,0,0,0,0
matplotlib/matplotlib,3025422075,29980,Backport PR #29979 on branch v3.10.x (Fix typos: horizonatal -> horizontal),Backport PR #29979: Fix typos: horizonatal -> horizontal,meeseeksmachine,39504233,closed,False,0,2025-04-28T15:56:29+00:00,2025-04-28T18:00:10+00:00,2025-04-28T18:00:09+00:00,topic: pyplot API,0,0,0,0,0,0,0
matplotlib/matplotlib,3025136638,29979,Fix typos: horizonatal -> horizontal,,martincornejo,53337152,closed,False,1,2025-04-28T14:29:21+00:00,2025-04-28T15:56:06+00:00,2025-04-28T15:56:06+00:00,topic: pyplot API,0,0,0,0,0,0,0
matplotlib/matplotlib,3024591623,29978,[Bug]: PGF file produces incorrect whitespace in the legend when using certain documentclass.,"### Bug summary

When using Matplotlib to generate PGF files with the `IEEEtran` document class, I noticed that if the legend font size is smaller than 5, extra whitespace appears on the right side. Currently, my workaround is to forcibly override the default `article` document class, which avoids this issue.  

Would it be possible to provide an interface allowing users to directly modify the documentclass used by Matplotlib? Below is the reproducible code and a screenshot demonstrating the issue.  

```latex
\documentclass{IEEEtran}
\usepackage{pgf}
\begin{document}
\input{main.pgf}
\end{document}
```

Overriding the default definition can resolve this issue.

```python
import matplotlib
import matplotlib.pyplot as plt
import matplotlib.backends.backend_pgf
matplotlib.backends.backend_pgf._DOCUMENTCLASS = r""\documentclass{IEEEtran}""
if __name__ == '__main__':
    matplotlib.rcParams['pgf.texsystem'] = 'pdflatex'
    fig, ax = plt.subplots(figsize=(2, 2),constrained_layout=True)
    ax.plot([1, 2, 3, 4, 5], [5, 5, 5, 5, 5], label='legend')
    ax.plot([1, 2, 3, 4, 5], [5, 5, 5, 5, 5], label='test legend')
    legend=ax.legend(fontsize=2)
    pfg_file = 'main.pgf'
    plt.savefig(pfg_file, transparent=True)
    plt.close()
```



### Code for reproduction

```Python
import matplotlib
import matplotlib.pyplot as plt
if __name__ == '__main__':
    matplotlib.rcParams['pgf.texsystem'] = 'pdflatex'
    fig, ax = plt.subplots(figsize=(2, 2),constrained_layout=True)
    ax.plot([1, 2, 3, 4, 5], [5, 5, 5, 5, 5], label='legend')
    ax.plot([1, 2, 3, 4, 5], [5, 5, 5, 5, 5], label='test legend')
    legend=ax.legend(fontsize=2)
    pfg_file = 'main.pgf'
    plt.savefig(pfg_file, transparent=True)
    plt.close()
```

### Actual outcome

![Image](https://github.com/user-attachments/assets/1d1aaec8-cb3c-4668-80fc-2f9cd55e3d3d)

### Expected outcome

![Image](https://github.com/user-attachments/assets/8ea52ae5-70e0-420a-ba0d-7256bb20ce27)

### Additional information

_No response_

### Operating system

_No response_

### Matplotlib Version

3.10.0

### Matplotlib Backend

_No response_

### Python version

3.12.4

### Jupyter version

_No response_

### Installation

pip",note286,16207292,open,False,0,2025-04-28T11:12:13+00:00,2025-04-28T14:49:28+00:00,,backend: pgf,0,0,0,0,0,0,0
matplotlib/matplotlib,3024393674,29977,"[Bug]: Histogram ignores `lw` argument, no warning or error","### Bug summary

`ax.hist` ignores `lw` argument. Must use `linewidth` in order to change the thickness of the lines.

### Code for reproduction

```Python
# Test of lw vs linewidth in histograms

histogram1 = [1]
histogram2 = [3]
histogram3 = [5]

fig, ax = plt.subplots(figsize=(8, 8))
ax.hist(histogram1, bins=1, density=True, histtype='step', color='tab:blue', lw=1, label='lw=1')
ax.hist(histogram2, bins=1, density=True, histtype='step', color='tab:orange', lw=3, label='lw=3')
ax.hist(histogram3, bins=1, density=True, histtype='step', color='tab:green', linewidth=3, label='linewidth=3')
ax.legend()

plt.show()

print(matplotlib.__version__)
```

### Actual outcome

![Image](https://github.com/user-attachments/assets/9e0e6351-b0a3-48b2-b4b2-53f9407d543c)

### Expected outcome

Using `lw` and `linewidth` produce same output.

### Additional information

This was not a problem with an earlier version of Matplotlib (don't remember the version unfortunately, but definitely 3.x something).

### Operating system

Ubuntu 24.04.2 LTS

### Matplotlib Version

3.10.0

### Matplotlib Backend

agg

### Python version

3.12.3

### Jupyter version

4.2.5

### Installation

pip",gullbrekken,65549701,closed,False,1,2025-04-28T09:58:17+00:00,2025-04-28T10:12:21+00:00,2025-04-28T10:12:19+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3023538402,29976,[Bug]: SIGSEGV in ft2font component when run with pytest-cov,"### Bug summary

Running ft2font import through pytest with pytest-cov plugin causes Python to crash. 

### Code for reproduction

MRE:
```python
from matplotlib import ft2font

def test_dummy():
	pass

print('unreachable')
```

Env:
```console
python3 -m venv ./venv
source ./venv/bin/activate.fish
pip install matplotlib pytest pytest-cov
pytest ./segft2.py
```

### Actual outcome

```
====================================== test session starts =======================================
platform linux -- Python 3.13.3, pytest-8.3.5, pluggy-1.5.0
rootdir: /home/mmatous/playground/segft2
plugins: cov-6.1.1
collecting ... fish: Job 1, 'pytest ./segft2.py' terminated by signal SIGSEGV (Address boundary error)
```

### Expected outcome

```
====================================== test session starts =======================================
platform linux -- Python 3.13.3, pytest-8.3.5, pluggy-1.5.0
rootdir: /home/mmatous/playground/segft2
collected 1 item

segft2.py .                                                                                [100%]

======================================= 1 passed in 0.09s ========================================
```

### Additional information

- Uninstalling pytest-cov makes dummy test pass.
- matplotlib-3.9.4 is unaffected.
- matplotlib-3.10.0 is affected.
- main HEAD (828ec6ffbff345976b674c823aebd09c67100986) is affected.
- Persists even after copying system ft2font.*.so into venv (so not simply broken wheels). 
- ~Possibly not related to pytest specifically, but being run as subprocess or being loaded multiple times in general?~ I encounter the same problem when trying to build doc. with `tox run -e docs-dev` while setting up https://pydata-sphinx-theme.readthedocs.io/en/latest/community/setup.html#build-the-documentation where MPL is a dependency.
- ~CPU: AMD Ryzen 9 7950X (in case it's some weird hw/simd/optimization thing)~
- Feel free to ask for more info, I don't know much about debugging C/Python boundary, so for now here's an LLDB backtrace:

```
(lldb) bt
* thread #1, name = 'pytest', stop reason = SIGSEGV: address not mapped to object (fault address=0x0)
  * frame #0: 0x0000000000000000
    frame #1: 0x00007f211fd9dc00 libunwind.so.8`_ULx86_64_dwarf_find_proc_info(as=0x00007ffd900eb900, ip=140727020337416, pi=0x00007ffd900eb958, need_unwind_info=1, arg=<unavailable>) at Gfind_proc_info-lsb.c:807:9
    frame #2: 0x00007f211fd9e817 libunwind.so.8`fetch_proc_info(c=0x00007ffd900eb800, ip=<unavailable>) at Gparser.c:473:18
    frame #3: 0x00007f211fd96e73 libunwind.so.8`_Unwind_GetLanguageSpecificData [inlined] _ULx86_64_dwarf_make_proc_info(c=<unavailable>) at Gparser.c:1089:9
    frame #4: 0x00007f211fd96e61 libunwind.so.8`_Unwind_GetLanguageSpecificData [inlined] _ULx86_64_get_proc_info(cursor=<unavailable>, pi=<unavailable>) at Gget_proc_info.c:35:7
    frame #5: 0x00007f211fd96e61 libunwind.so.8`_Unwind_GetLanguageSpecificData(context=<unavailable>) at GetLanguageSpecificData.c:34:3
    frame #6: 0x00007f211eee32dd libstdc++.so.6`__gxx_personality_v0 + 285
    frame #7: 0x00007f211fd7f6dc libgcc_s.so.1`___lldb_unnamed_symbol337 + 156
    frame #8: 0x00007f211fd80001 libgcc_s.so.1`_Unwind_Resume + 161
    frame #9: 0x00007f20ca1fb720 ft2font.cpython-313-x86_64-linux-gnu.so`ft2font__getattr__(std::string) (.lto_priv.0.cold) + 81
    frame #10: 0x00007f20ca2351c6 ft2font.cpython-313-x86_64-linux-gnu.so`void pybind11::cpp_function::initialize<pybind11::object (*&)(std::string), pybind11::object, std::string, pybind11::name, pybind11::scope, pybind11::sibling>(pybind11::object (*&)(std::string), pybind11::object (*)(std::string), pybind11::name const&, pybind11::scope const&, pybind11::sibling const&)::'lambda1'(pybind11::detail::function_call&)::_FUN(pybind11::detail::function_call&) + 454
    frame #11: 0x00007f20ca20ba3d ft2font.cpython-313-x86_64-linux-gnu.so`pybind11::cpp_function::dispatcher(_object*, _object*, _object*) + 3373
    frame #12: 0x00007f21219587f7 libpython3.13.so.1.0`cfunction_call(func=0x00007f20ca3c3880, args=0x0000000000000000, kwargs=0x0000000000000000) at methodobject.c:540:18
```

### Operating system

Gentoo

### Matplotlib Version

3.10.1

### Matplotlib Backend

tkagg

### Python version

Python 3.13.3

### Jupyter version

_No response_

### Installation

pip",mmatous,18654729,closed,False,8,2025-04-28T02:33:16+00:00,2025-04-30T00:56:54+00:00,2025-04-30T00:56:52+00:00,status: needs confirmation,0,0,0,0,0,0,0
matplotlib/matplotlib,3023484955,29975,DOC: correct signature for animation update function in rain example,Identified in #29960 by @vnmabus that we had examples with incorrect signatures.,tacaswell,199813,closed,False,0,2025-04-28T01:39:52+00:00,2025-04-28T21:33:32+00:00,2025-04-28T21:33:31+00:00,Documentation: examples,0,0,0,0,0,0,0
matplotlib/matplotlib,3023475859,29974,Backport PR #29970 on branch v3.10.x (TST: Make refcount tests more resilient to Python changes),Backport PR #29970: TST: Make refcount tests more resilient to Python changes,meeseeksmachine,39504233,closed,False,1,2025-04-28T01:30:04+00:00,2025-04-28T21:34:23+00:00,2025-04-28T21:34:23+00:00,topic: testing,0,0,0,0,0,0,0
matplotlib/matplotlib,3023355550,29973,Use inline lambdas to define most FT2Font properties.,"This is shorter and more readable than defining them with single-use static functions positioned quite far away from the def_property_readonly calls.

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",anntzer,1322974,closed,False,0,2025-04-27T22:19:29+00:00,2025-04-29T13:12:16+00:00,2025-04-29T10:05:22+00:00,topic: text/fonts;Maintenance,0,0,0,0,0,0,0
matplotlib/matplotlib,3022329270,29972,Improve repr of mathtext internal structures; minor cleanup.,"- Improve the repr of mathtext boxes (see test_box_repr; previously the entire repr would be in a single line).  Boxes are internal objects not exposed by any public API so the change is purely for debugging purposes.
- In ship, off_h and off_v are never modified, so there's no need to declare them as nonlocal in the nested functions.

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",anntzer,1322974,closed,False,0,2025-04-26T21:26:03+00:00,2025-04-29T05:51:16+00:00,2025-04-28T22:29:45+00:00,topic: text/mathtext;Maintenance,0,0,0,0,0,0,0
matplotlib/matplotlib,3022225369,29971,Fix Cursor widget drawing behavior with blitting support,"<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".


If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->
In class cursor,when the mouse moves out of the ax, redrawing takes a long time, 
it solves the issue with the redrawing method, which takes too long when the mouse moves out of the ax, after fixing it should be more efficient

closes #29731 
Summarising changes : 
""Fix Cursor widget drawing behavior with blitting support""


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [x] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [x] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [x] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [x] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",livlutz,108961867,open,False,4,2025-04-26T19:01:44+00:00,2025-05-11T12:52:49+00:00,,topic: widgets/UI,0,0,0,0,0,0,0
matplotlib/matplotlib,3021423517,29970,TST: Make refcount tests more resilient to Python changes,"## PR summary

Check the change of the refcount, instead of the absolute value, as suggested by @ngoldbaum in https://github.com/matplotlib/matplotlib/issues/29959#issuecomment-2824739314.

I did not test against Python 3.14, but perhaps @befeleme could.

## PR checklist
- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [n/a] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [n/a] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [n/a] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines",QuLogic,302469,closed,False,2,2025-04-26T03:14:21+00:00,2025-04-29T05:10:57+00:00,2025-04-28T01:29:39+00:00,topic: testing,0,0,0,0,0,0,0
matplotlib/matplotlib,3021244173,29969,Backport PR #29965 on branch v3.10.x (Document Axes.spines),Backport PR #29965: Document Axes.spines,meeseeksmachine,39504233,closed,False,0,2025-04-25T23:51:37+00:00,2025-04-26T02:02:02+00:00,2025-04-26T02:02:02+00:00,topic: axes;Documentation: API,0,0,0,0,0,0,0
matplotlib/matplotlib,3021007490,29968,fix FuncAnimation class,"
## PR summary

- Why is this change necessary?
- To ensure the update function passed to FuncAnimation matches expected signatures and avoids runtime errors.

- What problem does it solve?
- It prevents type errors and ensures the animation updates frames correctly without freezing or crashing.

- What is the reasoning for this implementation?
- FuncAnimation requires different update function return types depending on blit, typing must reflect this to satisfy static checkers and runtime behavior.

Closes #29960
# pre-commit.ci autofix 


## PR checklist

- [ x] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ x] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ x] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ x] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines


",Lynsoo,157243525,closed,False,5,2025-04-25T20:50:00+00:00,2025-04-30T18:56:19+00:00,2025-04-29T08:48:26+00:00,topic: animation;topic: typing,0,0,0,0,0,0,0
matplotlib/matplotlib,3020906106,29967,fix FuncAnimation class,"
## PR summary

- Why is this change necessary? 
- To ensure the update function passed to FuncAnimation matches expected signatures and avoids runtime errors.

- What problem does it solve?
- It prevents type errors and ensures the animation updates frames correctly without freezing or crashing.

- What is the reasoning for this implementation?
- FuncAnimation requires different update function return types depending on blit, typing must reflect this to satisfy static checkers and runtime behavior.

Closes #29960

## PR checklist

- [x ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ x] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ x] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ x] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ x] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines


",Lynsoo,157243525,closed,False,0,2025-04-25T19:48:09+00:00,2025-04-25T20:39:51+00:00,2025-04-25T20:39:50+00:00,topic: animation,0,0,0,0,0,0,0
matplotlib/matplotlib,3020568631,29966,Fix AxesWidgets on inset_axes that are outside their parent.,"When axes are overlapping, LocationEvent.inaxes can point not to the axes we care about, but to another one.  Widgets currently recompute location event axes coordinates relative to the axes to which the widget is assigned (#25555), but this recomputation code was previously brittle wrt. events that are outside the axes they wrongly believe they belong to (so x/ydata is None), even though they are indeed within the axes they actually belong to.  This can occur when a widget is associated with an ""inset_axes"" that's actually outside the parent axes.  A practical case is given by
```python
from pylab import *
ax = figure(layout=""constrained"").add_subplot()
ax1 = ax.inset_axes([0, 1, 1, .25], sharex=ax)
ss = mpl.widgets.SpanSelector(ax1, print, ""horizontal"")
show()  # try to trigger the spanselector
```
which would raise an exception prior to this patch.

Improve the recomputation logic by fully reparenting the event passed to the widget to the correct parent axes from the onset.

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",anntzer,1322974,open,False,0,2025-04-25T16:55:30+00:00,2025-04-25T17:25:23+00:00,,topic: widgets/UI,0,0,0,0,0,0,0
matplotlib/matplotlib,3020456757,29965,Document Axes.spines,"<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->
Closes #29964, by hanging a docstring from a class level type hint.  I did not know you could do this - so thanks to @timhoffm for the pointer.

## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [ ] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [ ] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",rcomer,10599679,closed,False,1,2025-04-25T16:02:37+00:00,2025-04-26T09:40:40+00:00,2025-04-25T23:51:16+00:00,topic: axes;Documentation: API,0,0,0,0,0,0,0
matplotlib/matplotlib,3019675129,29964,"[Doc]: object description for ""spines""of matplot.axes.Axes not found","### Documentation Link

https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.html#

### Problem

I found the documentation of object ""spines"" of matplot.axes.Axes not clear enough. On the homepage of matplot.axes.Axes there is no link to this description.

### Suggested improvement

_No response_",mai0503,154379241,closed,False,2,2025-04-25T10:38:10+00:00,2025-04-26T00:31:30+00:00,2025-04-25T23:51:17+00:00,Documentation,0,0,0,0,0,0,0
matplotlib/matplotlib,3019435191,29963,[Bug]: Histogram plots with logarithmic scale using float32 precision,"### Bug summary

Histogram plot of float32 data with logarithmic scale _misses_ small data points. This could be connected to:

> I suspect that it may be an effect of the limited precision. float32 can only store 7-8 significant digits, but the log scale is set to 10 decades...

 _Originally posted by @timhoffm in [#28731](https://github.com/matplotlib/matplotlib/issues/28731#issuecomment-2291885830)_

However, – interestingly – the data is plotted correctly, if the small value is on the particular position within the dataset.

### Code for reproduction

```Python
import numpy             as np
import matplotlib.pyplot as pl


DTYPE = 'float32' # ['float32' | 'float64']
ORDER = +1        # [-1 | +1]


dat = np.zeros(10, dtype=DTYPE)
dat[2] = 1
dat[7] = 1e-10
dat = dat[::ORDER]

fig, axe = pl.subplots(1, 1, layout='constrained')
axs = np.linspace(0, 1, dat.shape[0]+1)
axe.hist(axs[:-1], axs, weights=dat, log=True)
axe.plot(axs[:-1], dat, 'x')
pl.show()
```

### Actual outcome

Such code generates following figure:

![Image](https://github.com/user-attachments/assets/67b3b5e3-701d-4e7f-baf3-49989742b04e)


### Expected outcome


However, if the ORDER is changed (or the DTYPE obviously), the output looks like this:

![Image](https://github.com/user-attachments/assets/7439a24d-9c13-447c-9b75-e570206687d2)

### Additional information

_No response_

### Operating system

Arch

### Matplotlib Version

3.10.1

### Matplotlib Backend

qtagg

### Python version

Python 3.13.3

### Jupyter version

None

### Installation

Linux package manager",rad83,15859701,closed,False,1,2025-04-25T08:58:53+00:00,2025-04-25T11:03:54+00:00,2025-04-25T11:03:53+00:00,status: upstream fix required,0,0,0,0,0,0,0
matplotlib/matplotlib,3015542595,29962,FIX: update arc to do better rounding and allow wrap,"closes #29953

This actually fixes the numerical instability at least as in #29953.  Also added the option, `*wrap*` for larger arcs, but is optional, and the original behaviour is still default.  Updated the docstring to be Numpy compatible.  

The new test shows that the new algorithm is a bit less fragile to numerical slop (presumably because `np.mod` is better with this, or at least we are standard compliant.

Note that some tests tested that if theta2 < theta1 it stayed that way.  So theta1=-90 and theta2=-110 has an arc that goes 320 degrees from -90 to +250, rather than one that goes from -90 to -110. eg the arc always goes counter clockwise.  I've updated the docs to make this clear.  




",jklymak,1562854,open,False,0,2025-04-24T00:25:57+00:00,2025-04-30T15:19:40+00:00,,topic: path handling,0,0,0,0,0,0,0
matplotlib/matplotlib,3014674885,29961,[Bug]: pip install matplotlib failed due to kiwisolver whl build error on Win10 x86,"### Bug summary

On latest version of Python 3.13.3 and pip version pip 25.0.1
command ""python -m pip install matplotlib"" error ""Building wheel for kiwisolver (pyproject.toml) ... error"".

OS: Windows 10 x86 Version	10.0.19042 Build 19042
Visual Studio Build Tools 2022 - 17.13.6
    MSVC v143 - VS 2022 C++ x64/x86 build tools (latest)
    C++ CMake tools for Windows
    Testing tools core features - Build Tools
    C++ AddressSanitizer
    vcpkg package manager
    Windows 10 SDK (10.0.20348.0)

### Code for reproduction

```Python
python -m pip install matplotlib
```

### Actual outcome

Windows\System32>python -m pip install matplotlib
Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple
Collecting matplotlib
  Using cached matplotlib-3.10.1-cp313-cp313-win32.whl
Collecting contourpy>=1.0.1 (from matplotlib)
  Using cached https://pypi.tuna.tsinghua.edu.cn/packages/19/ba/b227c3886d120e60e41b28740ac3617b2f2b971b9f601c835661194579f1/contourpy-1.3.2-cp313-cp313-win32.whl (178 kB)
Collecting cycler>=0.10 (from matplotlib)
  Using cached https://pypi.tuna.tsinghua.edu.cn/packages/e7/05/c19819d5e3d95294a6f5947fb9b9629efb316b96de511b418c53d245aae6/cycler-0.12.1-py3-none-any.whl (8.3 kB)
Collecting fonttools>=4.22.0 (from matplotlib)
  Using cached https://pypi.tuna.tsinghua.edu.cn/packages/4c/e4/6934513ec2c4d3d69ca1bc3bd34d5c69dafcbf68c15388dd3bb062daf345/fonttools-4.57.0-cp313-cp313-win32.whl (2.1 MB)
Collecting kiwisolver>=1.3.1 (from matplotlib)
  Using cached https://pypi.tuna.tsinghua.edu.cn/packages/82/59/7c91426a8ac292e1cdd53a63b6d9439abd573c875c3f92c146767dd33faf/kiwisolver-1.4.8.tar.gz (97 kB)
  Installing build dependencies ... done
  Getting requirements to build wheel ... done
  Preparing metadata (pyproject.toml) ... done
Requirement already satisfied: numpy>=1.23 in c:\users\zhouyunwen\appdata\local\programs\python\python313-32\lib\site-packages (from matplotlib) (2.2.5)
Requirement already satisfied: packaging>=20.0 in c:\users\zhouyunwen\appdata\local\programs\python\python313-32\lib\site-packages (from matplotlib) (25.0)
Collecting pillow>=8 (from matplotlib)
  Using cached https://pypi.tuna.tsinghua.edu.cn/packages/94/86/8f2e9d2dc3d308dfd137a07fe1cc478df0a23d42a6c4093b087e738e4827/pillow-11.2.1-cp313-cp313-win32.whl (2.3 MB)
Collecting pyparsing>=2.3.1 (from matplotlib)
  Using cached https://pypi.tuna.tsinghua.edu.cn/packages/05/e7/df2285f3d08fee213f2d041540fa4fc9ca6c2d44cf36d3a035bf2a8d2bcc/pyparsing-3.2.3-py3-none-any.whl (111 kB)
Requirement already satisfied: python-dateutil>=2.7 in c:\users\zhouyunwen\appdata\local\programs\python\python313-32\lib\site-packages (from matplotlib) (2.9.0.post0)
Requirement already satisfied: six>=1.5 in c:\users\zhouyunwen\appdata\local\programs\python\python313-32\lib\site-packages (from python-dateutil>=2.7->matplotlib) (1.17.0)
Building wheels for collected packages: kiwisolver
  Building wheel for kiwisolver (pyproject.toml) ... error
  error: subprocess-exited-with-error

  × Building wheel for kiwisolver (pyproject.toml) did not run successfully.
  │ exit code: 1
  ╰─> [79 lines of output]
      C:\Users\zhouyunwen\AppData\Local\Temp\pip-build-env-sqceeljf\overlay\Lib\site-packages\setuptools\config\_apply_pyprojecttoml.py:82: SetuptoolsDeprecationWarning: `project.license` as a TOML table is deprecated
      !!

              ********************************************************************************
              Please use a simple string containing a SPDX expression for `project.license`. You can also use `project.license-files`. (Both options available on setuptools>=77.0.0).

              By 2026-Feb-18, you need to update your project and remove deprecated calls
              or your builds will no longer be supported.

              See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.
              ********************************************************************************

      !!
        corresp(dist, value, root_dir)
      C:\Users\zhouyunwen\AppData\Local\Temp\pip-build-env-sqceeljf\overlay\Lib\site-packages\setuptools\config\_apply_pyprojecttoml.py:61: SetuptoolsDeprecationWarning: License classifiers are deprecated.
      !!

              ********************************************************************************
              Please consider removing the following classifiers in favor of a SPDX license expression:

              License :: OSI Approved :: BSD License

              See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.
              ********************************************************************************

      !!
        dist._finalize_license_expression()
      C:\Users\zhouyunwen\AppData\Local\Temp\pip-build-env-sqceeljf\overlay\Lib\site-packages\setuptools\dist.py:759: SetuptoolsDeprecationWarning: License classifiers are deprecated.
      !!

              ********************************************************************************
              Please consider removing the following classifiers in favor of a SPDX license expression:

              License :: OSI Approved :: BSD License

              See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.
              ********************************************************************************

      !!
        self._finalize_license_expression()
      running bdist_wheel
      running build
      running build_py
      creating build\lib.win32-cpython-313\kiwisolver
      copying py\kiwisolver\exceptions.py -> build\lib.win32-cpython-313\kiwisolver
      copying py\kiwisolver\__init__.py -> build\lib.win32-cpython-313\kiwisolver
      copying py\kiwisolver\_cext.pyi -> build\lib.win32-cpython-313\kiwisolver
      copying py\kiwisolver\py.typed -> build\lib.win32-cpython-313\kiwisolver
      running build_ext
      building 'kiwisolver._cext' extension
      creating build\temp.win32-cpython-313\Release\py\src
      ""C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\bin\HostX86\x86\cl.exe"" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -IC:\Users\zhouyunwen\AppData\Local\Temp\pip-build-env-sqceeljf\overlay\Lib\site-packages\cppy\include -I. -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\include -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\Include ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" /EHsc /Tppy/src/constraint.cpp /Fobuild\temp.win32-cpython-313\Release\py\src\constraint.obj /EHsc /MT
      cl : Command line warning D9025 : overriding '/MD' with '/MT'
      constraint.cpp
      ""C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\bin\HostX86\x86\cl.exe"" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -IC:\Users\zhouyunwen\AppData\Local\Temp\pip-build-env-sqceeljf\overlay\Lib\site-packages\cppy\include -I. -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\include -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\Include ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" /EHsc /Tppy/src/expression.cpp /Fobuild\temp.win32-cpython-313\Release\py\src\expression.obj /EHsc /MT
      cl : Command line warning D9025 : overriding '/MD' with '/MT'
      expression.cpp
      ""C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\bin\HostX86\x86\cl.exe"" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -IC:\Users\zhouyunwen\AppData\Local\Temp\pip-build-env-sqceeljf\overlay\Lib\site-packages\cppy\include -I. -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\include -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\Include ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" /EHsc /Tppy/src/kiwisolver.cpp /Fobuild\temp.win32-cpython-313\Release\py\src\kiwisolver.obj /EHsc /MT
      cl : Command line warning D9025 : overriding '/MD' with '/MT'
      kiwisolver.cpp
      ""C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\bin\HostX86\x86\cl.exe"" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -IC:\Users\zhouyunwen\AppData\Local\Temp\pip-build-env-sqceeljf\overlay\Lib\site-packages\cppy\include -I. -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\include -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\Include ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" /EHsc /Tppy/src/solver.cpp /Fobuild\temp.win32-cpython-313\Release\py\src\solver.obj /EHsc /MT
      cl : Command line warning D9025 : overriding '/MD' with '/MT'
      solver.cpp
      ""C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\bin\HostX86\x86\cl.exe"" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -IC:\Users\zhouyunwen\AppData\Local\Temp\pip-build-env-sqceeljf\overlay\Lib\site-packages\cppy\include -I. -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\include -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\Include ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" /EHsc /Tppy/src/strength.cpp /Fobuild\temp.win32-cpython-313\Release\py\src\strength.obj /EHsc /MT
      cl : Command line warning D9025 : overriding '/MD' with '/MT'
      strength.cpp
      ""C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\bin\HostX86\x86\cl.exe"" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -IC:\Users\zhouyunwen\AppData\Local\Temp\pip-build-env-sqceeljf\overlay\Lib\site-packages\cppy\include -I. -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\include -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\Include ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" /EHsc /Tppy/src/term.cpp /Fobuild\temp.win32-cpython-313\Release\py\src\term.obj /EHsc /MT
      cl : Command line warning D9025 : overriding '/MD' with '/MT'
      term.cpp
      ""C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\bin\HostX86\x86\cl.exe"" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -IC:\Users\zhouyunwen\AppData\Local\Temp\pip-build-env-sqceeljf\overlay\Lib\site-packages\cppy\include -I. -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\include -IC:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\Include ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\include"" ""-IC:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\VS\include"" ""-IC:\Program Files\Windows Kits\10\include\10.0.20348.0\ucrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\um"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\shared"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\winrt"" ""-IC:\Program Files\Windows Kits\10\\include\10.0.20348.0\\cppwinrt"" /EHsc /Tppy/src/variable.cpp /Fobuild\temp.win32-cpython-313\Release\py\src\variable.obj /EHsc /MT
      cl : Command line warning D9025 : overriding '/MD' with '/MT'
      variable.cpp
      ""C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\bin\HostX86\x86\link.exe"" /nologo /INCREMENTAL:NO /LTCG /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO /LIBPATH:C:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\libs /LIBPATH:C:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32 /LIBPATH:C:\Users\zhouyunwen\AppData\Local\Programs\Python\Python313-32\PCbuild\win32 ""/LIBPATH:C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\lib\x86"" ""/LIBPATH:C:\Program Files\Windows Kits\10\lib\10.0.20348.0\ucrt\x86"" ""/LIBPATH:C:\Program Files\Windows Kits\10\\lib\10.0.20348.0\\um\x86"" ""/LIBPATH:C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\14.43.34808\lib\x86"" ""/LIBPATH:C:\Program Files\Windows Kits\10\lib\10.0.20348.0\ucrt\x86"" ""/LIBPATH:C:\Program Files\Windows Kits\10\\lib\10.0.20348.0\\um\x86"" /EXPORT:PyInit__cext build\temp.win32-cpython-313\Release\py\src\constraint.obj build\temp.win32-cpython-313\Release\py\src\expression.obj build\temp.win32-cpython-313\Release\py\src\kiwisolver.obj build\temp.win32-cpython-313\Release\py\src\solver.obj build\temp.win32-cpython-313\Release\py\src\strength.obj build\temp.win32-cpython-313\Release\py\src\term.obj build\temp.win32-cpython-313\Release\py\src\variable.obj /OUT:build\lib.win32-cpython-313\kiwisolver\_cext.cp313-win32.pyd /IMPLIB:build\temp.win32-cpython-313\Release\py\src\_cext.cp313-win32.lib ucrt.lib vcruntime.lib /nodefaultlib:libucrt.lib /nodefaultlib:libvcruntime.lib
         Creating library build\temp.win32-cpython-313\Release\py\src\_cext.cp313-win32.lib and object build\temp.win32-cpython-313\Release\py\src\_cext.cp313-win32.exp
      LIBCMT.lib(dll_dllmain.obj) : error LNK2001: unresolved external symbol __except_handler4
      LIBCMT.lib(utility.obj) : error LNK2001: unresolved external symbol __except_handler4
      LIBCMT.lib(sehprolg4.obj) : error LNK2001: unresolved external symbol __except_handler4
      build\lib.win32-cpython-313\kiwisolver\_cext.cp313-win32.pyd : fatal error LNK1120: 1 unresolved externals
      error: command 'C:\\Program Files\\Microsoft Visual Studio\\2022\\BuildTools\\VC\\Tools\\MSVC\\14.43.34808\\bin\\HostX86\\x86\\link.exe' failed with exit code 1120
      [end of output]

  note: This error originates from a subprocess, and is likely not a problem with pip.
  ERROR: Failed building wheel for kiwisolver
Failed to build kiwisolver
ERROR: Failed to build installable wheels for some pyproject.toml based projects (kiwisolver)

### Expected outcome

Successfully installed matplotlib 

### Additional information

Found this hint related to the whl building error:
""cl : Command line warning D9025 : overriding '/MD' with '/MT'""
""LIBCMT.lib(dll_dllmain.obj) : error LNK2001: unresolved external symbol __except_handler4""

But don't know how this happened nor how to fix

Other whl building on same machine and software environment works correctly

### Operating system

Windows 10 32-bit (10.0.19042 Build 19042)

### Matplotlib Version

3.10.1

### Matplotlib Backend

_No response_

### Python version

Python 3.13.3

### Jupyter version

_No response_

### Installation

pip",Uohzhcim,130462095,closed,False,3,2025-04-23T16:49:52+00:00,2025-04-25T17:28:54+00:00,2025-04-23T19:44:01+00:00,Community support,0,0,0,0,0,0,0
matplotlib/matplotlib,3011823117,29960,[Bug]: FuncAnimation function not typed properly,"### Bug summary

Type checkers complain when one uses a function that returns `None` as the parameter of `FuncAnimation`. However, when `blit=False`, the return value of the function is ignored.

### Code for reproduction

```Python
import matplotlib.pyplot as plt
from matplotlib import rc
from matplotlib.animation import FuncAnimation

rc(""animation"", html=""jshtml"")

fig, ax = plt.subplots()

def update(frame: int) -> None:
    ax.plot([0, 1], [frame, frame])

FuncAnimation(fig, update, range(10))
```

### Actual outcome

MyPy says `Argument 2 to ""FuncAnimation"" has incompatible type ""Callable[[int], None]""; expected ""Callable[..., Iterable[Artist]]""`, but the code executes without problems.

### Expected outcome

No MyPy error.

### Additional information

I think is possible to allow functions that return arbitrary `object` by combining `overload` and `Literal[True]` / `Literal[False]` for the `blit` argument.

### Operating system

Any

### Matplotlib Version

3.10.0

### Matplotlib Backend

_No response_

### Python version

_No response_

### Jupyter version

_No response_

### Installation

pip",vnmabus,2364173,closed,False,12,2025-04-22T18:29:38+00:00,2025-04-29T13:51:55+00:00,2025-04-29T13:51:55+00:00,topic: typing,0,0,0,0,0,0,0
matplotlib/matplotlib,3011164035,29959,[MNT]: Python 3.14.0a7 test failures,"### Summary

I ran tox on the main branch of matplotlib with the fix from https://github.com/matplotlib/matplotlib/pull/29393 applied on top. I ran the same set of tests which we run during the Fedora matplotlib build, so invocation looked like this:
```
tox -e py314 -- -k 'not test_invisible_Line_rendering and not test_form_widget_get_with_datetime_and_date_fields' --pyargs matplotlib mpl_toolkits.axes_grid1 mpl_toolkits.axisartist mpl_toolkits.mplot3d
```

And the results:

```
________________________________________________ test_hexbin_log[png] _________________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_hexbin_log[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 35.934):
E           	result_images/test_axes/hexbin_log.png
E           	result_images/test_axes/hexbin_log-expected.png
E           	result_images/test_axes/hexbin_log-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure
_______________________________________________ test_hexbin_linear[png] _______________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_hexbin_linear[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 20.427):
E           	result_images/test_axes/hexbin_linear.png
E           	result_images/test_axes/hexbin_linear-expected.png
E           	result_images/test_axes/hexbin_linear-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure
__________________________________________________ test_symlog2[pdf] __________________________________________________

args = (), kwds = {'extension': 'pdf', 'request': <FixtureRequest for <Function test_symlog2[pdf]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 12.445):
E           	result_images/test_axes/symlog2_pdf.png
E           	result_images/test_axes/symlog2-expected_pdf.png
E           	result_images/test_axes/symlog2_pdf-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure
_______________________________________ test_mollweide_forward_inverse_closure ________________________________________

    def test_mollweide_forward_inverse_closure():
        # test that the round-trip Mollweide forward->inverse transformation is an
        # approximate identity
        fig = plt.figure()
        ax = fig.add_subplot(projection='mollweide')
    
        # set up 1-degree grid in longitude, latitude
        lon = np.linspace(-np.pi, np.pi, 360)
        # The poles are degenerate and thus sensitive to floating point precision errors
        lat = np.linspace(-np.pi / 2.0, np.pi / 2.0, 180)[1:-1]
        lon, lat = np.meshgrid(lon, lat)
        ll = np.vstack((lon.flatten(), lat.flatten())).T
    
        # perform forward transform
>       xy = ax.transProjection.transform(ll)

/home/ksurma/dev/matplotlib/lib/matplotlib/tests/test_axes.py:5021: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/home/ksurma/dev/matplotlib/lib/matplotlib/transforms.py:1523: in transform
    res = self.transform_affine(self.transform_non_affine(values))
/home/ksurma/dev/matplotlib/lib/matplotlib/projections/geo.py:372: in transform_non_affine
    delta, large_delta = d(theta)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

theta = array([ 3.22129331e+27,  3.22129331e+27,  3.22129331e+27, ...,
       -3.22129331e+27, -3.22129331e+27, -3.22129331e+27], shape=(61200,))

    def d(theta):
>       delta = (-(theta + np.sin(theta) - pi_sin_l)
                 / (1 + np.cos(theta)))
E       RuntimeWarning: overflow encountered in divide

/home/ksurma/dev/matplotlib/lib/matplotlib/projections/geo.py:355: RuntimeWarning
_______________________________________ test_mollweide_inverse_forward_closure ________________________________________

    def test_mollweide_inverse_forward_closure():
        # test that the round-trip Mollweide inverse->forward transformation is an
        # approximate identity
        fig = plt.figure()
        ax = fig.add_subplot(projection='mollweide')
    
        # set up grid in x, y
        x = np.linspace(0, 1, 500)
        x, y = np.meshgrid(x, x)
        xy = np.vstack((x.flatten(), y.flatten())).T
    
        # perform inverse transform
        ll = ax.transProjection.inverted().transform(xy)
    
        # perform forward transform
>       xy2 = ax.transProjection.transform(ll)

/home/ksurma/dev/matplotlib/lib/matplotlib/tests/test_axes.py:5045: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
/home/ksurma/dev/matplotlib/lib/matplotlib/transforms.py:1523: in transform
    res = self.transform_affine(self.transform_non_affine(values))
/home/ksurma/dev/matplotlib/lib/matplotlib/projections/geo.py:372: in transform_non_affine
    delta, large_delta = d(theta)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

theta = array([ 0.        ,  0.        ,  0.        , ..., -3.14323857,
       -3.14323857, -3.14323857], shape=(250000,))

    def d(theta):
>       delta = (-(theta + np.sin(theta) - pi_sin_l)
                 / (1 + np.cos(theta)))
E       RuntimeWarning: divide by zero encountered in divide

/home/ksurma/dev/matplotlib/lib/matplotlib/projections/geo.py:355: RuntimeWarning
______________________________________________ test_specgram_angle[png] _______________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_specgram_angle[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 23.460):
E           	result_images/test_axes/specgram_phase_freqs.png
E           	result_images/test_axes/specgram_phase_freqs-expected.png
E           	result_images/test_axes/specgram_phase_freqs-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure
__________________________________________ test_proportional_colorbars[png] ___________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_proportional_colorbars[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 47.976):
E           	result_images/test_colorbar/proportional_colorbars.png
E           	result_images/test_colorbar/proportional_colorbars-expected.png
E           	result_images/test_colorbar/proportional_colorbars-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure
_______________________________________________ test_rgb_hsv_round_trip _______________________________________________

x = array([0.5488135 , 0.71518937, 0.60276338, ..., 0.31486942, 0.95593047,
       0.76646949], shape=(750000,))
y = array([], dtype=float64)

    def compare(x, y):
        try:
            if npany(isinf(x)) or npany(isinf(y)):
                xinfid = isinf(x)
                yinfid = isinf(y)
                if not (xinfid == yinfid).all():
                    return False
                # if one item, x and y is +- inf
                if x.size == y.size == 1:
                    return x == y
                x = x[~xinfid]
                y = y[~yinfid]
        except (TypeError, NotImplementedError):
            pass
    
        # make sure y is an inexact type to avoid abs(MIN_INT); will cause
        # casting of x later.
        dtype = result_type(y, 1.)
        y = np.asanyarray(y, dtype)
>       z = abs(x - y)
E       ValueError: operands could not be broadcast together with shapes (750000,) (0,)

/home/ksurma/dev/matplotlib/.tox/py314/lib64/python3.14/site-packages/numpy/testing/_private/utils.py:1165: ValueError

During handling of the above exception, another exception occurred:

    def test_rgb_hsv_round_trip():
        for a_shape in [(500, 500, 3), (500, 3), (1, 3), (3,)]:
            np.random.seed(0)
            tt = np.random.random(a_shape)
>           assert_array_almost_equal(
                tt, mcolors.hsv_to_rgb(mcolors.rgb_to_hsv(tt)))
E           ValueError: 
E           error during assertion:
E           
E           Traceback (most recent call last):
E             File ""/home/ksurma/dev/matplotlib/.tox/py314/lib64/python3.14/site-packages/numpy/testing/_private/utils.py"", line 851, in assert_array_compare
E               val = comparison(x, y)
E             File ""/home/ksurma/dev/matplotlib/.tox/py314/lib64/python3.14/site-packages/numpy/testing/_private/utils.py"", line 1165, in compare
E               z = abs(x - y)
E                       ~~^~~
E           ValueError: operands could not be broadcast together with shapes (750000,) (0,) 
E           
E           
E           Arrays are not almost equal to 6 decimals
E            ACTUAL: array([0.548814, 0.715189, 0.602763, ..., 0.314869, 0.95593 , 0.766469],
E                 shape=(750000,))
E            DESIRED: array([], dtype=float64)

/home/ksurma/dev/matplotlib/lib/matplotlib/tests/test_colors.py:947: ValueError
_________________________________________ test_light_source_topo_surface[png] _________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_light_source_topo_surface[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 31.976):
E           	result_images/test_colors/light_source_shading_topo.png
E           	result_images/test_colors/light_source_shading_topo-expected.png
E           	result_images/test_colors/light_source_shading_topo-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure
__________________________________________________ test_labels[png] ___________________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_labels[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 30.608):
E           	result_images/test_contour/contour_test_label_transforms.png
E           	result_images/test_contour/contour_test_label_transforms-expected.png
E           	result_images/test_contour/contour_test_label_transforms-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure
___________________________________________ test_mask_image_over_under[png] ___________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_mask_image_over_under[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 41.585):
E           	result_images/test_image/mask_image_over_under.png
E           	result_images/test_image/mask_image_over_under-expected.png
E           	result_images/test_image/mask_image_over_under-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure
______________________________________________ test_rgba_antialias[png] _______________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_rgba_antialias[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 59.938):
E           	result_images/test_image/rgba_antialias.png
E           	result_images/test_image/rgba_antialias-expected.png
E           	result_images/test_image/rgba_antialias-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure
_______________________________________________ test_downsampling[png] ________________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_downsampling[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 71.138):
E           	result_images/test_image/downsampling.png
E           	result_images/test_image/downsampling-expected.png
E           	result_images/test_image/downsampling-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure
_______________________________________________ test_quiver_memory_leak _______________________________________________

    @pytest.mark.skipif(platform.python_implementation() != 'CPython',
                        reason='Requires CPython')
    def test_quiver_memory_leak():
        fig, ax = plt.subplots()
    
        Q = draw_quiver(ax)
        ttX = Q.X
        Q.remove()
    
        del Q
    
>       assert sys.getrefcount(ttX) == 2
E       AssertionError

/home/ksurma/dev/matplotlib/lib/matplotlib/tests/test_quiver.py:33: AssertionError
_____________________________________________ test_quiver_key_memory_leak _____________________________________________

    @pytest.mark.skipif(platform.python_implementation() != 'CPython',
                        reason='Requires CPython')
    def test_quiver_key_memory_leak():
        fig, ax = plt.subplots()
    
        Q = draw_quiver(ax)
    
        qk = ax.quiverkey(Q, 0.5, 0.92, 2, r'$2 \frac{m}{s}$',
                          labelpos='W',
                          fontproperties={'weight': 'bold'})
>       assert sys.getrefcount(qk) == 3
E       AssertionError

/home/ksurma/dev/matplotlib/lib/matplotlib/tests/test_quiver.py:46: AssertionError
_________________________________________________ test_fft_peaks[png] _________________________________________________

    @image_comparison(['fft_peaks'], remove_text=True)
    def test_fft_peaks():
        fig, ax = plt.subplots()
        t = np.arange(65536)
        p1 = ax.plot(abs(np.fft.fft(np.sin(2*np.pi*.01*t)*np.blackman(len(t)))))
    
        # Ensure that the path's transform takes the new axes limits into account.
        fig.canvas.draw()
        path = p1[0].get_path()
        transform = p1[0].get_transform()
        path = transform.transform_path(path)
        simplified = path.cleaned(simplify=True)
    
>       assert simplified.vertices.size == 36
E       AssertionError

/home/ksurma/dev/matplotlib/lib/matplotlib/tests/test_simplification.py:421: AssertionError
_________________________________________________ test_fft_peaks[pdf] _________________________________________________

    @image_comparison(['fft_peaks'], remove_text=True)
    def test_fft_peaks():
        fig, ax = plt.subplots()
        t = np.arange(65536)
        p1 = ax.plot(abs(np.fft.fft(np.sin(2*np.pi*.01*t)*np.blackman(len(t)))))
    
        # Ensure that the path's transform takes the new axes limits into account.
        fig.canvas.draw()
        path = p1[0].get_path()
        transform = p1[0].get_transform()
        path = transform.transform_path(path)
        simplified = path.cleaned(simplify=True)
    
>       assert simplified.vertices.size == 36
E       AssertionError

/home/ksurma/dev/matplotlib/lib/matplotlib/tests/test_simplification.py:421: AssertionError
_________________________________________________ test_fft_peaks[svg] _________________________________________________

    @image_comparison(['fft_peaks'], remove_text=True)
    def test_fft_peaks():
        fig, ax = plt.subplots()
        t = np.arange(65536)
        p1 = ax.plot(abs(np.fft.fft(np.sin(2*np.pi*.01*t)*np.blackman(len(t)))))
    
        # Ensure that the path's transform takes the new axes limits into account.
        fig.canvas.draw()
        path = p1[0].get_path()
        transform = p1[0].get_transform()
        path = transform.transform_path(path)
        simplified = path.cleaned(simplify=True)
    
>       assert simplified.vertices.size == 36
E       AssertionError

/home/ksurma/dev/matplotlib/lib/matplotlib/tests/test_simplification.py:421: AssertionError
___________________________________________ test_tri_smooth_contouring[png] ___________________________________________

args = (), kwds = {'extension': 'png', 'request': <FixtureRequest for <Function test_tri_smooth_contouring[png]>>}

    @wraps(func)
    def inner(*args, **kwds):
        with self._recreate_cm():
>           return func(*args, **kwds)
E           matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 123.603):
E           	result_images/test_triangulation/tri_smooth_contouring.png
E           	result_images/test_triangulation/tri_smooth_contouring-expected.png
E           	result_images/test_triangulation/tri_smooth_contouring-failed-diff.png

/usr/lib64/python3.14/contextlib.py:85: ImageComparisonFailure

FAILED tests/test_axes.py::test_hexbin_log[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 35.934):
FAILED tests/test_axes.py::test_hexbin_linear[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 20.427):
FAILED tests/test_axes.py::test_symlog2[pdf] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 12.445):
FAILED tests/test_axes.py::test_mollweide_forward_inverse_closure - RuntimeWarning: overflow encountered in divide
FAILED tests/test_axes.py::test_mollweide_inverse_forward_closure - RuntimeWarning: divide by zero encountered in divide
FAILED tests/test_axes.py::test_specgram_angle[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 23.460):
FAILED tests/test_colorbar.py::test_proportional_colorbars[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 47.976):
FAILED tests/test_colors.py::test_rgb_hsv_round_trip - ValueError: 
FAILED tests/test_colors.py::test_light_source_topo_surface[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 31.976):
FAILED tests/test_contour.py::test_labels[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 30.608):
FAILED tests/test_image.py::test_mask_image_over_under[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 41.585):
FAILED tests/test_image.py::test_rgba_antialias[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 59.938):
FAILED tests/test_image.py::test_downsampling[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 71.138):
FAILED tests/test_quiver.py::test_quiver_memory_leak - AssertionError
FAILED tests/test_quiver.py::test_quiver_key_memory_leak - AssertionError
FAILED tests/test_simplification.py::test_fft_peaks[png] - AssertionError
FAILED tests/test_simplification.py::test_fft_peaks[pdf] - AssertionError
FAILED tests/test_simplification.py::test_fft_peaks[svg] - AssertionError
FAILED tests/test_triangulation.py::test_tri_smooth_contouring[png] - matplotlib.testing.exceptions.ImageComparisonFailure: images not close (RMS 123.603):
================= 19 failed, 9423 passed, 507 skipped, 2 deselected, 30 xfailed in 330.41s (0:05:30) ==================

```

### Proposed fix

_No response_",befeleme,33810531,open,False,4,2025-04-22T13:51:01+00:00,2025-04-23T15:43:05+00:00,,Maintenance,0,0,0,0,0,0,0
matplotlib/matplotlib,3010582464,29958,"ENH: ax.add_collection(..., autolim=True) updates view limits","This makes explicit calls to `autoscale_view()` or `_request_autoscale_view()` unnecessary.

3D Axes have a special `auto_scale_xyz()`, also there's a mixture of `add_collection()` and `add_collection3d()`. This needs separate sorting . I've added a private value `autolim=""_datalim_only""` to keep the behavior for 3D Axes unchanged for now. That will be resolved by a follow-up PR. I believe it's getting too complicated if we fold this into the 2D change.

Also for follow-ups:
- There are some usages in tests and examples, where  set_xlim/set_ylim pins the limits, which seems to be used as an alternative to `autoscale_view` it may be that we can now remove the explicit limits for some cases since the autoscaled view is good enough.
- We have a number of places that explicitly use `autolim=True`, which is the default. We may remove these, but it seems they are sometimes used as explicit communication of intent. Also the comment in https://github.com/matplotlib/matplotlib/blob/492a478bfef08a2db3787b6b11c518a890bbaf91/galleries/examples/shapes_and_collections/collections.py#L62 suggests that `autolim=False` may have been the default a long time ago. - This should be investigated (*Edit:* Indeed, the default was changed in 2007 by 0df13d79).


Closes #29957.
",timhoffm,2836374,open,False,0,2025-04-22T09:59:35+00:00,2025-05-06T19:18:07+00:00,,topic: mplot3d;topic: color/color & colormaps;topic: axes;topic: tri;Documentation: examples;Documentation: user guide,0,0,0,0,0,0,0
matplotlib/matplotlib,3010466060,29957,"[ENH]: add_collection(..., autolim=True) should update view limits as well","### Problem

`Axes.add_collection()` has the parameter `autolim`, which updates `Axes.dataLim`, however it does not update `Axes.viewLim`. This requires an explicit `ax.autoscale_view()` - or when using it internally, we use the lazy `ax._request_autoscale_view`.

### Proposed solution

`Axes.add_collection(..., autolim=True)` should itself call `ax._request_autoscale_view()`. If we opt into limits handling, this should possibly include the view limits as well. Requireing an extra call from users is cumbersome. Also since  `ax._request_autoscale_view()` is private, users can only call the eager `ax.autoscale_view()`.

Todo: Investigate how to make this work correctly for 3D, which seems to use a dedicated `auto_scale_xyz()`.",timhoffm,2836374,open,False,2,2025-04-22T09:14:05+00:00,2025-04-22T15:33:14+00:00,,New feature;topic: mplot3d,0,0,0,0,0,0,0
matplotlib/matplotlib,3009413798,29956,MNT: make signature of GridSpec.update explicit,"Previously, it used **kwargs, because it needs to distinguish between ""value not given"" and given value is None. A while ago, we have introduced the UNSET sentinel for these cases (in the context of Artist .set()). The PR moves this sentinel to `matplotlib._api` to make it usable also for gridspec.

Technically, there's an API change here, because the old code raised an AttibuteError for invalid keys. This is now a TypeError by the standards when an invalid keyword argument is used. I consider the old behavior suboptimal as it was not adhereing to standards. I will let the change go without notice because I assume nobody will explicitly catch the exception of an invalid parameter name passed to `GridSpec.update()`.

",timhoffm,2836374,closed,False,0,2025-04-21T22:25:33+00:00,2025-04-22T15:38:01+00:00,2025-04-22T15:23:34+00:00,topic: geometry manager;API: consistency;Maintenance,0,0,0,0,0,0,0
matplotlib/matplotlib,3009109621,29955,"[Bug]: when using histtype, linestyle is not carried through to plot","### Bug summary

Prior to the current matplotlib version, when using histtype='step' in pyplot.hist you could customize the linestyle with that command.  Now, linestyle is not being used and all lines are coming out as 'solid' 

### Code for reproduction

```Python
import matplotlib.pyplot as plt
dat=[0,1,2,3,4,5,2,3,4,5,4,5,5]
plt.figure()
plt.hist(dat,bins=3,ls='solid',color='k',histtype='step')
plt.show()
plt.figure()
plt.hist(dat,bins=3,ls='dotted',color='k',histtype='step')
plt.show()
```

### Actual outcome

two plots, both showing the same graphic

### Expected outcome

the second plot should have a dotted line, not a solid line

### Additional information

_No response_

### Operating system

OS/X

### Matplotlib Version

3.10.0

### Matplotlib Backend

macosx

### Python version

Python 3.11.9

### Jupyter version

n/a

### Installation

pip",joemasiero,26937071,closed,False,1,2025-04-21T19:13:40+00:00,2025-04-21T21:22:42+00:00,2025-04-21T19:37:26+00:00,status: duplicate,0,0,0,0,0,0,0
matplotlib/matplotlib,3008304330,29954,Simplify `colored_line()` implementation in Multicolored lines example,"<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary

- Reduces the number of lines.
- Stops using Numpy functions which is not array-api compatible (`hstack`, `column_stack`, etc.), which improves readability.
- Calls `autoscale_view`, thus `set_xlim`, etc. need not to be called manually.
- Adds `stacklevel=2` in `warnings.warn`.
- (Note: I have created a dedicated package for this function: https://github.com/34j/matplotlib-multicolored-line)

<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:

- Why is this change necessary?
- What problem does it solve?
- What is the reasoning for this implementation?

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [N/A] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [N/A] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [x] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [N/A] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [x] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->
",34j,55338215,closed,False,2,2025-04-21T12:21:00+00:00,2025-04-23T14:21:20+00:00,2025-04-22T15:49:41+00:00,Documentation: examples,0,0,0,0,0,0,0
matplotlib/matplotlib,3007579163,29953,[Bug]: numerical instability of Path.arc for 0 degree or 360 degree arc,"### Bug summary

Trying to create an arc path of 0/360 degrees sometimes results in one of 360/0 degrees due to floating point weirdness.

### Code for reproduction

```Python
from matplotlib import patches, path, pyplot

fig, ax = pyplot.subplots(ncols=3)
ax[0].add_patch(patches.PathPatch(path.Path.arc(theta1=-90 - 1e-14, theta2=270)))
ax[0].set_title(""arc(-90-1e-14, 270), should be a circle"")
ax[1].add_patch(patches.PathPatch(path.Path.arc(theta1=-90, theta2=270)))
ax[1].set_title(""arc(-90, 270), is a circle"")
ax[2].add_patch(patches.PathPatch(path.Path.arc(theta1=-90, theta2=-90 - 1e-14)))
ax[2].set_title(""arc(-90, -90-1e-14), should not be a circle"")
for a in ax:
    a.set_xlim(-1, 1)
    a.set_ylim(-1, 1)
    a.set_aspect(""equal"")
pyplot.show()
```

### Actual outcome

![Image](https://github.com/user-attachments/assets/2108d052-c1fe-4df1-a54e-ffe5d59d1cc5)

### Expected outcome

I expect the first plot to be a circle, identical to the second.
I expect the third plot to be empty

### Additional information

The location of the bug is not hard to find:
https://github.com/matplotlib/matplotlib/blob/6fc8169112a42e3f6f55793a6b56159cd8ff69d7/lib/matplotlib/path.py#L951-L956

At runtime the first example becomes `(-90 <= -90 - 1e-14) == False`, which therefore skips the `+360` bump.

What is much harder is to understand is what the intention is here.
If you can help me to understand what behaviour you'd like, I'd be happy to put together a PR for it.

I think `theta2 < theta1` always gives an unexpected result:
- The docstring does not clarify what should happen, therefore my assumption is that it should return an anti-clockwise arc
- The `np.floor` will mean it becomes the angle range [theta1, theta2+360], which gives the third plot which I believe should not be a circle
- The special casing only treats `eta2 += 360`, not `eta2 -= 360`

It would be great if either the docstring could be clarified or a `ValueError` raised on unexpected inputs here.

### Operating system

_No response_

### Matplotlib Version

3.10.0

### Matplotlib Backend

_No response_

### Python version

_No response_

### Jupyter version

_No response_

### Installation

pip",robtovey,39965511,open,False,12,2025-04-21T05:13:04+00:00,2025-04-24T15:34:28+00:00,,,0,0,0,0,0,0,0
matplotlib/matplotlib,3007438641,29952,Add HandlerPatchCollection to support legends for PatchCollection,"### Summary

This PR adds a default legend handler for `matplotlib.collections.PatchCollection`, enabling automatic legend support without the need for manual proxy artists.

### Motivation

As discussed in issue #23998, currently `PatchCollection` objects do not appear in legends because they lack a registered legend handler. This change introduces a `HandlerPatchCollection` that extracts visual properties from the first patch in the collection and uses them to generate a representative patch for the legend.

### Implementation

- Introduced `HandlerPatchCollection` (subclassing `HandlerPatch`) that mirrors `HandlerPolyCollection`.
- Registered the handler in `_default_handler_map` to enable automatic use.

### Related Issues

Fixes #23998  
Closes #24028

### Example

```python
from matplotlib.patches import Polygon
from matplotlib.collections import PatchCollection
import matplotlib.pyplot as plt

fig, ax = plt.subplots()
p1 = Polygon([[0, 0], [1, 1], [2, 0]])
p2 = Polygon([[3, 0], [4, 1], [5, 0]])
coll = PatchCollection([p1, p2], label='Polygons', facecolor='cyan')
ax.add_collection(coll)
ax.set_xlim(0, 6)
ax.set_ylim(0, 2)
ax.legend()
plt.show()",anika3943,147451593,closed,False,0,2025-04-21T02:54:10+00:00,2025-04-21T11:07:59+00:00,2025-04-21T11:04:41+00:00,topic: legend,0,0,0,0,0,0,0
matplotlib/matplotlib,3007148278,29951,Fix doc build on 3.10.1-doc,"Cherry-picked the commit from #29943 to also fix the v3.10.1-doc branch.

(cherry picked from commit 09bea955b84937ae177ded93d6384b233de6c707)
",rcomer,10599679,closed,False,0,2025-04-20T18:00:27+00:00,2025-04-21T21:20:52+00:00,2025-04-20T20:09:53+00:00,Documentation: user guide,0,0,0,0,0,0,0
matplotlib/matplotlib,3007137185,29950,Backport PR #29796 on branch v3.10.1-doc: ci: rotate soon-to-be-unsupported GitHub Actions ubuntu-20.04 runner out of roster,"Manual backport of https://github.com/matplotlib/matplotlib/pull/29796. The conflict was because main has some extra lines from https://github.com/matplotlib/matplotlib/pull/29171 right before the if-loop we're removing here.

(cherry picked from commit 0d11978c9f933a9fc7a585891b350c09958e034b)


",rcomer,10599679,closed,False,1,2025-04-20T17:33:24+00:00,2025-05-05T17:37:23+00:00,2025-04-24T06:07:35+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3007135039,29949,Backport PR #29796 on branch v3.10.x: ci: rotate soon-to-be-unsupported GitHub Actions ubuntu-20.04 runner out of roster,"Manual backport of #29796.  The conflict was because `main` has some extra lines from #29171 right before the if-loop we're removing here.

cherry picked from commit 0d11978c9f933a9fc7a585891b350c09958e034b

",rcomer,10599679,closed,False,0,2025-04-20T17:28:07+00:00,2025-04-23T08:49:38+00:00,2025-04-23T08:03:05+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3005833000,29948,Check Axes/Figure import paths in boilerplate.py,"Before this PR, if the Matplotlib installed in the current environment is not the same as the source tree `boilerplate.py` is from, the `Axes`/`Figure` classes not taken from the correct source tree. This adds a guard to make sure this isn't the case.

I have confirmed locally this prevents situations like those described in https://github.com/matplotlib/matplotlib/issues/29921

I can't think of a situation where one wants to deliberately generate `pyplot.py` from another source tree, but if there is manually specifying the other source tree as an argument to `boilerplate.py` should still work.

Fixes https://github.com/matplotlib/matplotlib/issues/29921.",dstansby,6197628,closed,False,0,2025-04-18T21:59:23+00:00,2025-04-21T19:27:40+00:00,2025-04-19T15:24:43+00:00,,0,0,0,0,0,0,0
matplotlib/matplotlib,3005572061,29947,Restore OS-level signal handler after changing it in plt.pause(),"Previously, `cysignals` signal handlers are broken after `plt.pause()` is called. More explanation can be found in https://github.com/sagemath/sage/issues/39601 and https://github.com/sagemath/cysignals/pull/228

The change was adapted from https://github.com/prompt-toolkit/python-prompt-toolkit/pull/1822 

## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [N/A] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [N/A] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [N/A] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

",user202729,25191436,open,False,1,2025-04-18T19:00:46+00:00,2025-04-18T21:15:01+00:00,,topic: canvas and figure manager,0,0,0,0,0,0,0
matplotlib/matplotlib,3005500258,29946,"Changed ""Autoscaling axes"" to ""Autoscaling axes on user guide page for issue & closes #29906","Closes #29906

<!--
Thank you so much for your PR!  To help us review your contribution, please check
out the development guide https://matplotlib.org/devdocs/devel/index.html
-->

## PR summary
<!-- Please describe the pull request, using the questions below as guidance, and link to any relevant issues and PRs:
This is a small grammatical error on the ""https://matplotlib.org/stable/users/index.html"" page. Under the Axes & Subplots section, the ""Autoscaling Axes"" is to be changed to ""Axis Autoscaling"" (as recommended by @timhoffm)  that closes #29906. I didn't check many things on the checklist since it's just a text change, which I tested and is working locally.

- Why is this change necessary?
- It is a grammatical error that clears confusion.

- What problem does it solve?
- It just resolves a grammatical error in the documentation

- What is the reasoning for this implementation?
- The rst file generates all the necessary documentation 

Additionally, please summarize the changes in the title, for example ""Raise ValueError on
non-numeric input to set_xlim"" and avoid non-descriptive titles such as ""Addresses
issue #8576"".

If possible, please provide a minimum self-contained example.  If you have used
generative AI as an aid in preparing this PR, see

https://matplotlib.org/devdocs/devel/contribute.html#restrictions-on-generative-ai-usage
-->


## PR checklist
<!-- Please mark any checkboxes that do not apply to this PR as [N/A].-->

- [x] ""closes #0000"" is in the body of the PR description to [link the related issue](https://docs.github.com/en/issues/tracking-your-work-with-issues/linking-a-pull-request-to-an-issue)
- [ ] new and changed code is [tested](https://matplotlib.org/devdocs/devel/testing.html)
- [ ] *Plotting related* features are demonstrated in an [example](https://matplotlib.org/devdocs/devel/document.html#write-examples-and-tutorials)
- [ ] *New Features* and *API Changes* are noted with a [directive and release note](https://matplotlib.org/devdocs/devel/api_changes.html#announce-changes-deprecations-and-new-features)
- [x] Documentation complies with [general](https://matplotlib.org/devdocs/devel/document.html#write-rest-pages) and [docstring](https://matplotlib.org/devdocs/devel/document.html#write-docstrings) guidelines

<!--We understand that PRs can sometimes be overwhelming, especially as the
reviews start coming in.  Please let us know if the reviews are unclear or
the recommended next step seems overly demanding, if you would like help in
addressing a reviewer's comments, or if you have been waiting too long to hear
back on your PR.-->

Current webpage:
![Screenshot 2025-04-13 at 9 46 56 PM](https://github.com/user-attachments/assets/acc17f7a-01f1-4ed5-9c21-ab45e607d5c9)

After change:
<img width=""1440"" alt=""Screenshot 2025-04-18 at 11 17 05 AM"" src=""https://github.com/user-attachments/assets/d89ba22f-1977-4ccd-a3b0-07ef735e97fe"" />
",Vraj1234,53624234,closed,False,2,2025-04-18T18:17:23+00:00,2025-04-20T01:30:43+00:00,2025-04-20T01:29:17+00:00,Documentation: user guide,0,0,0,0,0,0,0
matplotlib/matplotlib,3005390855,29945,Doc fixed aspect colorbar,"Closes #29938

Adds text to placing colorbars and constrained layout guide that points out the role of compressed layout in making colorbars match the size of the parent axes.  

The colorbar placement example in this section was pretty complex, and I'm not sure it was necessary so I just replaced with the simpler one-axes example.



",jklymak,1562854,closed,False,0,2025-04-18T17:11:52+00:00,2025-04-18T18:07:04+00:00,2025-04-18T18:00:12+00:00,Documentation;Documentation: user guide,0,0,0,0,0,0,0
matplotlib/matplotlib,3005161104,29944,DEV: have ruff check blank-line counts,This turn 302 (blank lines) back on.,tacaswell,199813,closed,False,0,2025-04-18T15:13:31+00:00,2025-04-18T16:03:47+00:00,2025-04-18T16:03:46+00:00,,0,0,0,0,0,0,0
