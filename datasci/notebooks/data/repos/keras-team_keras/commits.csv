repo_full_name,sha,html_url,author_login,author_id,author_type,authored_date,committer_login,committed_date,message,additions,deletions,total_changes,files_changed_count,parent_shas
keras-team/keras,cbb3682cab33ae3f97e1a3b7da3e6cbeae07b83b,https://github.com/keras-team/keras/commit/cbb3682cab33ae3f97e1a3b7da3e6cbeae07b83b,cantonios,2538739,User,2025-05-08T20:27:05+00:00,web-flow,2025-05-08T20:27:05+00:00,"Allow variable layout to be set on construction. (#21264)

If a variable has a particular layout (e.g. is sharded across
multiple devices/hosts), then any corresponding auxiliary variables,
like optimizer gradient accumulators, need to have the same layout.
This requires use to set the variable layout prior to initialization
so that it is initialized correctly and efficiently across devices.

Added optional `kwargs` to the base `Variable` class so they can
handle (and ignore) any backend-specific options.  Modified
`JaxVariable` to allow setting the layout parameter on construction.
Modified `add_variable_from_reference` to copy the layout from
the reference variable.",22,5,27,3,583306d25b632fad608d625723d9d7426698daa0
keras-team/keras,583306d25b632fad608d625723d9d7426698daa0,https://github.com/keras-team/keras/commit/583306d25b632fad608d625723d9d7426698daa0,cantonios,2538739,User,2025-05-08T20:26:21+00:00,web-flow,2025-05-08T20:26:21+00:00,"Add support for jax.experimental.layout layouts. (#21263)

In some cases we need to explicitly specify the layout in JAX
(e.g. for sparse-core tables).  The previous distribution lib
was hard-coded to expect `jax.sharding.Sharding`.  Generalized
to support explicit Layouts.

The previous `distribute_variable`/`distribute_tensor` code
also used explicit device placement calls.  JAX should be
able to handle all this automatically.  See [Making process-spanning arrays from external data](https://docs.jax.dev/en/latest/multi_process.html#making-process-spanning-arrays-from-external-data).",103,107,210,2,44c2f831daed1a2f3413c8886e105f9ad8fcc9d4
