repo_full_name,issue_id,number,title,body,user_login,user_id,state,locked,comments_count,created_at,updated_at,closed_at,labels,reactions_total,reactions_plus1,reactions_minus1,reactions_laugh,reactions_hooray,reactions_confused,reactions_heart
gradio-app/gradio,3054703357,11167,Error: Queue is stopped.,"### Describe the bug

I noticed that if several people are using the Gradio API (gradio_client) the queue is down after a while. 
 
- The error occurs when using different spaces. 
- The error occurs in all 4.x.x and 5.x.x versions of gradio.

### Have you searched existing issues?  ðŸ”Ž

- [x] I have searched and found no existing issues

### Reproduction

```python
from gradio_client import Client
....
```


### Screenshot

![Image](https://github.com/user-attachments/assets/53677081-f41a-4269-9eee-dd57c4430ca6)

![Image](https://github.com/user-attachments/assets/8cfa2ab8-2c89-4e39-aeb4-729974fff0b6)

### Logs

```shell
4.x.x
5.x.x
```

### System Info

```shell
5.29.0
```

### Severity

I can work around it",doevent,61069711,open,False,0,2025-05-11T04:38:40+00:00,2025-05-11T04:38:40+00:00,,bug,0,0,0,0,0,0,0
gradio-app/gradio,3049796526,11166,`gr.update()` Does Not Persist Updated Component Properties,"### Describe the bug

Hi Gradio team,

I recently encountered an issue where gr.update() appears to update a component's value visually, but the underlying property does not seem to persist, leading to issues in subsequent logic.

To illustrate, I have a script that uses a timer to monitor the value of an output_box. When I directly `return process(input_text)`, the `output_box` value updates correctly. However, when using `gr.update(value=process(input_text))`, the visible output updates, but the actual component state doesn't reflect the change, which causes problems downstream.

### Have you searched existing issues?  ðŸ”Ž

- [x] I have searched and found no existing issues

### Reproduction

```python
import gradio as gr
import time

def process(input_text, progress=gr.Progress(track_tqdm=True)):
    time.sleep(1)
    return f""result: {input_text}""

with gr.Blocks() as demo:
    input_box = gr.Textbox(label=""input"")
    submit_btn = gr.Button(""submit"")
    output_box = gr.Textbox(label=""result"")
    
    @submit_btn.click(inputs=[input_box],outputs=[output_box])
    def on_click(input_text):
        # return gr.update(value=process(input_text))
        return process(input_text)

    timer = gr.Timer(value=1)
    @timer.tick()
    def time_debug():
            print(output_box.value)


demo.launch()
```


### Screenshot

_No response_

### Logs

```shell

```

### System Info

```shell
gradio 5.27.0
```",qqandy0120,63918752,closed,False,3,2025-05-08T18:36:51+00:00,2025-05-10T17:18:50+00:00,2025-05-09T18:47:29+00:00,bug,0,0,0,0,0,0,0
