repo_full_name,pr_id,comment_id,user_login,user_id,created_at,updated_at,body,is_review_comment,path,position,diff_hunk,reactions_total,reactions_plus1,reactions_minus1,reactions_laugh,reactions_hooray,reactions_confused,reactions_heart
microsoft/ML-For-Beginners,874488054,821976688,jlooper,1450004,2022-03-08T19:00:44+00:00,2022-03-08T19:02:42+00:00,all of these links need to be turned to relative paths so they won't 404,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,821977229,jlooper,1450004,2022-03-08T19:01:23+00:00,2022-03-08T19:02:42+00:00,"this will 404, fix link ",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,821977401,jlooper,1450004,2022-03-08T19:01:37+00:00,2022-03-08T19:02:42+00:00,malformed markdown,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,821977537,jlooper,1450004,2022-03-08T19:01:49+00:00,2022-03-08T19:02:42+00:00,this will 404,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,821977987,jlooper,1450004,2022-03-08T19:02:28+00:00,2022-03-08T19:02:42+00:00,this is broken,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,829092830,jlooper,1450004,2022-03-17T13:03:54+00:00,2022-03-17T13:05:11+00:00,not sure why the links here are going to the Italian translation?,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,829093189,jlooper,1450004,2022-03-17T13:04:12+00:00,2022-03-17T13:05:11+00:00,This is linking to the Italian translation,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,829094136,jlooper,1450004,2022-03-17T13:05:02+00:00,2022-03-17T13:05:11+00:00,This should link to an animated gif,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,821976688,jlooper,1450004,2022-03-08T19:00:44+00:00,2022-03-08T19:02:42+00:00,all of these links need to be turned to relative paths so they won't 404,True,translations/README.hi.md,,"@@ -0,0 +1,127 @@
+[![GitHub license](https://img.shields.io/github/license/microsoft/ML-For-Beginners.svg)](https://github.com/microsoft/ML-For-Beginners/blob/master/LICENSE)
+[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/)
+[![GitHub issues](https://img.shields.io/github/issues/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/issues/)
+[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/pulls/)
+[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)
+
+[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/ML-For-Beginners.svg?style=social&label=Watch)](https://GitHub.com/microsoft/ML-For-Beginners/watchers/)
+[![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
+[![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
+
+# ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó - ‡§è‡§ï ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ
+
+> üåç‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§µ‡§ø‡§∂‡•ç‡§µ ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§§‡•á ‡§π‡•à‡§Ç üåç
+
+‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§ï‡•á ‡§è‡§ú‡§º‡•ç‡§Ø‡•ã‡§∞ ‡§ï‡•ç‡§≤‡§æ‡§â‡§° ‡§è‡§°‡§µ‡•ã‡§ï‡•á‡§ü‡•ç‡§∏ ‡§ï‡•ã 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§®‡§§‡§æ ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à **‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§® ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç, ‡§Ü‡§™   ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡•ç‡§ï‡§ø‡§ï‡§ø‡§ü-‡§≤‡§∞‡•ç‡§® ‡§ï‡•ã ‡§è‡§ï ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•Å‡§è ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Ü‡§ó‡§æ‡§Æ‡•Ä '‡§è‡§Ü‡§à ‡§´‡•â‡§∞ ‡§¨‡§ø‡§ó‡§ø‡§®‡§∞‡•ç‡§∏' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ó‡§π‡§® ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡•á ‡§¨‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ú‡§ø‡§∏‡•á ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä **‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡§ó‡•á‡•§ ‡§á‡§® ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•ã‡§°‡§º‡•á‡§Ç ['‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ](https://aka.ms/datascience-beginners), ‡§≠‡•Ä!
+
+‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§á‡§® ‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï‡•ã‡§Ç ‡§ï‡•ã ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§ï‡§à ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§™‡§∞ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§† ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§î‡§∞ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä, ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂, ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®, ‡§è‡§ï ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü, ‡§î‡§∞ ‡§¨‡§π‡•Å‡§§ ‡§ï‡•Å‡§õ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§®‡§è ‡§ï‡•å‡§∂‡§≤ ‡§ï‡•ã '‡§õ‡§°‡§º‡•Ä' ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§è‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à‡•§
+
+**‚úçÔ∏è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç ** ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞, ‡§∏‡•ç‡§ü‡•Ä‡§´‡§® ‡§π‡•â‡§µ‡•á‡§≤, ‡§´‡•ç‡§∞‡§æ‡§Ç‡§∏‡•á‡§∏‡•ç‡§ï‡§æ ‡§≤‡§æ‡§ú‡§º‡•á‡§∞‡•Ä, ‡§ü‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§ï‡•à‡§∏‡•Ä ‡§¨‡•ç‡§∞‡•á‡§µ‡§ø‡§Ø‡•Ç, ‡§¶‡§ø‡§Æ‡§ø‡§§‡•ç‡§∞‡•Ä ‡§∏‡•ã‡§∂‡§®‡§ø‡§ï‡•ã‡§µ, ‡§ï‡•ç‡§∞‡§ø‡§∏ ‡§®‡•ã‡§∞‡§ø‡§Ç‡§ó, ‡§Ö‡§®‡§ø‡§∞‡•ç‡§¨‡§æ‡§® ‡§Æ‡•Å‡§ñ‡§∞‡•ç‡§ú‡•Ä, ‡§ì‡§∞‡§®‡•á‡§≤‡§æ ‡§Ö‡§≤‡•ç‡§ü‡•Å‡§®‡§ø‡§Ø‡§® ‡§î‡§∞ ‡§è‡§Æ‡•Ä ‡§¨‡•â‡§Ø‡§° ‡§ï‡•ã ‡§π‡§æ‡§∞‡•ç‡§¶‡§ø‡§ï ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§
+
+**üé® ‡§π‡§Æ‡§æ‡§∞‡•á ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§æ‡§∞‡•ã‡§Ç ** ‡§§‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§¶‡§æ‡§∏‡§æ‡§®‡•Ä ‡§Æ‡§¶‡§ø‡§™‡§≤‡•ç‡§≤‡•Ä ‡§î‡§∞ ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞ ‡§ï‡•ã ‡§≠‡•Ä ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶
+
+**üôè ‡§π‡§Æ‡§æ‡§∞‡•á Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç, ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§ï‡•ã‡§Ç ‡§î‡§∞ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®‡§ï‡§∞‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶ **, ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∞‡§ø‡§∑‡§ø‡§§ ‡§°‡§æ‡§ó‡§≤‡•Ä, ‡§Æ‡•Å‡§π‡§Æ‡•ç‡§Æ‡§¶ ‡§∏‡§æ‡§ï‡§ø‡§¨ ‡§ñ‡§æ‡§® ‡§á‡§®‡§æ‡§®, ‡§∞‡•ã‡§π‡§® ‡§∞‡§æ‡§ú, ‡§Ö‡§≤‡•á‡§ï‡•ç‡§ú‡•á‡§Ç‡§°‡•ç‡§∞‡•Ç ‡§™‡•á‡§ü‡•ç‡§∞‡•á‡§∏‡•ç‡§ï‡•Å, ‡§Ö‡§≠‡§ø‡§∑‡•á‡§ï ‡§ú‡§æ‡§Ø‡§∏‡§µ‡§æ‡§≤, ‡§®‡§µ‡§∞‡•Ä‡§® ‡§§‡§¨‡§∏‡•ç‡§∏‡•Å‡§Æ, ‡§á‡§ì‡§® ‡§∏‡§Æ‡•Å‡§á‡§≤‡§æ, ‡§î‡§∞ ‡§∏‡•ç‡§®‡§ø‡§ó‡•ç‡§ß‡§æ ‡§Ö‡§ó‡•ç‡§∞‡§µ‡§æ‡§≤
+
+**ü§© ‡§π‡§Æ‡§æ‡§∞‡•á R ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§è‡§∞‡§ø‡§ï ‡§µ‡§Ç‡§ú‡§æ‡§â ‡§ï‡§æ ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§Ü‡§≠‡§æ‡§∞!**
+
+---
+
+# ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡§æ
+
+**‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä**, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∞‡•á‡§™‡•ã ‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§ï‡•á ‡§ó‡§ø‡§ü‡§π‡§¨ ‡§ñ‡§æ‡§§‡•á ‡§Æ‡•á‡§Ç ‡§´‡•ã‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§Ø‡§æ ‡§∏‡§Æ‡•Ç‡§π ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç:
+
+- ‡§™‡•ç‡§∞‡•Ä-‡§≤‡•á‡§ï‡•ç‡§ö‡§∞ ‡§ï‡•ç‡§µ‡§ø‡§ú ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§™‡§¢‡§º‡•á‡§Ç ‡§î‡§∞ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§ú‡•ç‡§û‡§æ‡§® ‡§ú‡§æ‡§Ç‡§ö ‡§™‡§∞ ‡§∞‡•Å‡§ï‡•á‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§ø‡§Ç‡§¨‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§ï‡•ã‡§° ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§ú‡§æ‡§Ø ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§ï‡§∞ ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç; ‡§π‡§æ‡§≤‡§æ‡§Ç‡§ï‡§ø ‡§µ‡§π ‡§ï‡•ã‡§° ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§â‡§®‡•ç‡§Æ‡•Å‡§ñ ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç `/ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§≤‡•á‡§Ç‡•§
+- ‡§ö‡•Å‡§®‡•å‡§§‡•Ä ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§è‡§ï ‡§™‡§æ‡§† ‡§∏‡§Æ‡•Ç‡§π ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶, [‡§ö‡§∞‡•ç‡§ö‡§æ ‡§¨‡•ã‡§∞‡•ç‡§°](https://github.com/microsoft/ML-For-Beginners/discussions) ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å ‡§î‡§∞ ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ PAT ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§≠‡§∞‡§ï‡§∞ ""‡§ú‡§º‡•ã‡§∞ ‡§∏‡•á ‡§∏‡•Ä‡§ñ‡•á‡§Ç""‡•§ ‡§è‡§ï '‡§™‡•Ä‡§è‡§ü‡•Ä' ‡§è‡§ï ‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Ü‡§ï‡§≤‡§® ‡§â‡§™‡§ï‡§∞‡§£ ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§π‡•à ‡§ú‡§ø‡§∏‡•á ‡§Ü‡§™ ‡§Ö‡§™‡§®‡•á ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≠‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§Ö‡§®‡•ç‡§Ø ‡§™‡•Ä‡§è‡§ü‡•Ä ‡§™‡§∞ ‡§≠‡•Ä ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§π‡§Æ ‡§è‡§ï ‡§∏‡§æ‡§• ‡§∏‡•Ä‡§ñ ‡§∏‡§ï‡•á‡§Ç‡•§
+
+> ‡§Ü‡§ó‡•á ‡§ï‡•á ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§π‡§Æ ‡§á‡§® [‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§≤‡§∞‡•ç‡§®](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa) ‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§î‡§∞ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§∞‡§æ‡§∏‡•ç‡§§‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§∏‡§∞‡§£ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§.
+
+**‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï**, ‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡§æ‡§∏ [‡§ï‡•Å‡§õ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç] (for-teachers.md) ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç‡•§
+---
+
+## ‡§ü‡•Ä‡§Æ ‡§∏‡•á ‡§Æ‡§ø‡§≤‡•ã
+
+[![‡§™‡•ç‡§∞‡•ã‡§Æ‡•ã ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã](ml.gif)](https://youtu.be/Tj1XWrDSYJU ""Promo video"")
+
+**Gif by** [‡§Æ‡•ã‡§π‡§ø‡§§ ‡§ú‡•à‡§∏‡§≤](https://linkedin.com/in/mohitjaisal)
+
+> üé• ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ ‡§î‡§∞ ‡§á‡§∏‡•á ‡§¨‡§®‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§≤‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ä‡§™‡§∞ ‡§ï‡•Ä ‡§õ‡§µ‡§ø ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç!
+---
+
+## ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞
+
+‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§π‡§Æ‡§®‡•á ‡§¶‡•ã ‡§∂‡•à‡§ï‡•ç‡§∑‡§£‡§ø‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß‡§æ‡§Ç‡§§‡•ã‡§Ç ‡§ï‡•ã ‡§ö‡•Å‡§®‡§æ ‡§π‡•à: ‡§Ø‡§π ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§®‡§æ ‡§ï‡§ø ‡§Ø‡§π ‡§µ‡•ç‡§Ø‡§æ‡§µ‡§π‡§æ‡§∞‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á **‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§** ‡§π‡•à ‡§î‡§∞ ‡§á‡§∏‡§Æ‡•á‡§Ç **‡§≤‡§ó‡§æ‡§§‡§æ‡§∞ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä** ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§® **‡§•‡•Ä‡§Æ** ‡§π‡•à ‡§ú‡•ã ‡§á‡§∏‡•á ‡§è‡§ï‡§§‡§æ ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§
+
+‡§Ø‡§π ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§ï‡•á ‡§ï‡§ø ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§Ç‡§∞‡•á‡§ñ‡§ø‡§§ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à, ‡§õ‡§æ‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡•ã ‡§î‡§∞ ‡§Ö‡§ß‡§ø‡§ï ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§™‡•ç‡§∞‡§§‡§ø‡§ß‡§æ‡§∞‡§£ ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§ï‡§ï‡•ç‡§∑‡§æ ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§è‡§ï ‡§ï‡§Æ-‡§¶‡§æ‡§Ç‡§µ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§ï‡•á ‡§µ‡§ø‡§∑‡§Ø ‡§ï‡•ã ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§á‡§∞‡§æ‡§¶‡•á ‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à, ‡§ú‡§¨‡§ï‡§ø ‡§ï‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§Ü‡§ó‡•á ‡§™‡•ç‡§∞‡§§‡§ø‡§ß‡§æ‡§∞‡§£ ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•ã ‡§≤‡§ö‡•Ä‡§≤‡§æ ‡§î‡§∞ ‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§•‡§æ ‡§î‡§∞ ‡§á‡§∏‡•á ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§Ø‡§æ ‡§Ü‡§Ç‡§∂‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§≤‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§ ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç ‡§õ‡•ã‡§ü‡•Ä ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç ‡§î‡§∞ 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§ï‡•á ‡§ö‡§ï‡•ç‡§∞ ‡§ï‡•á ‡§Ö‡§Ç‡§§ ‡§§‡§ï ‡§§‡•á‡§ú‡•Ä ‡§∏‡•á ‡§ú‡§ü‡§ø‡§≤ ‡§π‡•ã ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§è‡§Æ‡§è‡§≤ ‡§ï‡•á ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï-‡§µ‡§ø‡§∂‡•ç‡§µ ‡§Ö‡§®‡•Å‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡•ã‡§Ç ‡§™‡§∞ ‡§è‡§ï ‡§™‡•ã‡§∏‡•ç‡§ü‡§∏‡•ç‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§ü ‡§≠‡•Ä ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§ï‡•ç‡§∞‡•á‡§°‡§ø‡§ü ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ ‡§ö‡§∞‡•ç‡§ö‡§æ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
+
+> ‡§π‡§Æ‡§æ‡§∞‡•Ä [‡§Ü‡§ö‡§æ‡§∞ ‡§∏‡§Ç‡§π‡§ø‡§§‡§æ](CODE_OF_CONDUCT.md), [‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®](CONTRIBUTING.md), ‡§î‡§∞ [‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶](TRANSLATIONS.md) ‡§¶‡§ø‡§∂‡§æ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂ ‡§ñ‡•ã‡§ú‡•á‡§Ç‡•§ ‡§π‡§Æ ‡§Ü‡§™‡§ï‡•Ä ‡§∞‡§ö‡§®‡§æ‡§§‡•ç‡§Æ‡§ï ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç!
+
+## ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç:
+
+- ‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï ‡§∏‡•ç‡§ï‡•á‡§ö‡§®‡•ã‡§ü
+- ‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï ‡§™‡•Ç‡§∞‡§ï ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã
+- ‡§™‡•Ç‡§∞‡•ç‡§µ ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§µ‡§æ‡§∞‡•ç‡§Æ‡§Ö‡§™ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä
+- ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§™‡§æ‡§†
+- ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§§‡§∞‡•Ä‡§ï‡•á ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ö‡§∞‡§£-‡§¶‡§∞-‡§ö‡§∞‡§£ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§ø‡§ï‡§æ
+- ‡§ú‡•ç‡§û‡§æ‡§® ‡§ú‡§æ‡§Ç‡§ö
+- ‡§è‡§ï ‡§ö‡•Å‡§®‡•å‡§§‡•Ä
+- ‡§™‡•Ç‡§∞‡§ï ‡§™‡§†‡§®
+- ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§≠‡§æ‡§∞
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä
+
+> **‡§≠‡§æ‡§∑‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§®‡•ã‡§ü**: ‡§Ø‡•á ‡§™‡§æ‡§† ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§™‡§æ‡§Ø‡§•‡§® ‡§Æ‡•á‡§Ç ‡§≤‡§ø‡§ñ‡•á ‡§ó‡§è ‡§π‡•à‡§Ç, ‡§≤‡•á‡§ï‡§ø‡§® ‡§ï‡§à ‡§Ü‡§∞ ‡§Æ‡•á‡§Ç ‡§≠‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡§Ç‡•§ ‡§è‡§ï ‡§Ü‡§∞ ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, `/ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§è‡§Ç ‡§î‡§∞ ‡§Ü‡§∞ ‡§™‡§æ‡§† ‡§¶‡•á‡§ñ‡•á‡§Ç‡•§ ‡§â‡§®‡§Æ‡•á‡§Ç ‡§è‡§ï .rmd ‡§è‡§ï‡•ç‡§∏‡§ü‡•á‡§Ç‡§∂‡§® ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï **R ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§®** ‡§´‡§º‡§æ‡§á‡§≤ ‡§ï‡§æ ‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø‡§§‡•ç‡§µ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ú‡§ø‡§∏‡•á ‡§ï‡•á‡§µ‡§≤ `‡§ï‡•ã‡§° ‡§ö‡§Ç‡§ï‡•ç‡§∏` (‡§Ü‡§∞ ‡§Ø‡§æ ‡§Ö‡§®‡•ç‡§Ø ‡§≠‡§æ‡§∑‡§æ‡§ì‡§Ç ‡§ï‡•á) ‡§ï‡•á ‡§è‡§Æ‡•ç‡§¨‡•á‡§°‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§™‡§∞‡§ø‡§≠‡§æ‡§∑‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§è‡§ï `‡§µ‡§æ‡§à‡§è‡§è‡§Æ‡§è‡§≤ ‡§π‡•á‡§°‡§∞` (‡§ú‡•ã ‡§á‡§∏ ‡§§‡§∞‡§π ‡§ï‡•á ‡§Ü‡§â‡§ü‡§™‡•Å‡§ü ‡§ï‡•ã ‡§™‡•ç‡§∞‡§æ‡§∞‡•Ç‡§™‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à) ‡§™‡•Ä‡§°‡•Ä‡§è‡§´ ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç) ‡§è‡§ï `‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º` ‡§Æ‡•á‡§Ç‡•§ ‡§ú‡•à‡§∏‡•á, ‡§Ø‡§π ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§Ö‡§®‡•Å‡§ï‡§∞‡§£‡•Ä‡§Ø ‡§∏‡§Ç‡§≤‡•á‡§ñ‡§® ‡§¢‡§æ‡§Ç‡§ö‡•á ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§Ø‡§π ‡§Ü‡§™‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§ï‡•ã‡§°, ‡§á‡§∏‡§ï‡•á ‡§Ü‡§â‡§ü‡§™‡•Å‡§ü ‡§î‡§∞ ‡§Ü‡§™‡§ï‡•á ‡§µ‡§ø‡§ö‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§Æ‡•á‡§Ç ‡§≤‡§ø‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§ï‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§∏‡§Ç‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§Ü‡§∞ ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Ä‡§°‡•Ä‡§è‡§´, ‡§è‡§ö‡§ü‡•Ä‡§è‡§Æ‡§è‡§≤ ‡§Ø‡§æ ‡§µ‡§∞‡•ç‡§° ‡§ú‡•à‡§∏‡•á ‡§Ü‡§â‡§ü‡§™‡•Å‡§ü ‡§∏‡•ç‡§µ‡§∞‡•Ç‡§™‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡•Å‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
+
+> **‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§®‡•ã‡§ü**: ‡§∏‡§≠‡•Ä ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç [‡§á‡§∏ ‡§ê‡§™ ‡§Æ‡•á‡§Ç](https://white-water-09ec41f0f.azurestaticapps.net/), ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§§‡•Ä‡§® ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§Ç ‡§ï‡•á ‡§ï‡•Å‡§≤ 52 ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§ï‡•á ‡§≤‡§ø‡§è‡•§ ‡§µ‡•á ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≠‡•Ä‡§§‡§∞ ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á ‡§π‡•Å‡§è ‡§π‡•à‡§Ç ‡§≤‡•á‡§ï‡§ø‡§® ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§ê‡§™ ‡§ï‡•ã ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§ö‡§≤‡§æ‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à; `‡§ï‡•ç‡§µ‡§ø‡§ú‡§º-‡§ê‡§™` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§è ‡§ó‡§è ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂‡•ã‡§Ç ‡§ï‡§æ ‡§™‡§æ‡§≤‡§® ‡§ï‡§∞‡•á‡§Ç‡•§
+
+| ‡§™‡§æ‡§† ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ |                             ‡§µ‡§ø‡§∑‡§Ø                             |                  ‡§™‡§æ‡§† ‡§∏‡§Æ‡•Ç‡§π‡§®                  | ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§Æ‡§ï‡§∏‡§¶                                                                                                            |                                                             ‡§ú‡•Å‡§°‡§º‡§æ ‡§π‡•Å‡§Ü ‡§™‡§æ‡§†                                                              |                        ‡§≤‡•á‡§ñ‡§ï                        |
+| :-----------: | :------------------------------------------------------------: | :-------------------------------------------------: | ------------------------------------------------------------------------------------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------: | :--------------------------------------------------: |
+| 01 | ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§∞‡§ø‡§ö‡§Ø | [‡§™‡§∞‡§ø‡§ö‡§Ø](1-Introduction/README.md)  | ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§™‡•Ä‡§õ‡•á ‡§ï‡•Ä ‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§ú‡§æ‡§®‡•á‡§Ç | [‡§™‡§æ‡§†](1-Introduction/1-intro-to-ML/README.md)   | ‡§Æ‡•Å‡§π‡§Æ‡•ç‡§Æ‡§¶ |",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,821977229,jlooper,1450004,2022-03-08T19:01:23+00:00,2022-03-08T19:02:42+00:00,"this will 404, fix link ",True,translations/README.hi.md,,"@@ -0,0 +1,127 @@
+[![GitHub license](https://img.shields.io/github/license/microsoft/ML-For-Beginners.svg)](https://github.com/microsoft/ML-For-Beginners/blob/master/LICENSE)
+[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/)
+[![GitHub issues](https://img.shields.io/github/issues/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/issues/)
+[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/pulls/)
+[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)
+
+[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/ML-For-Beginners.svg?style=social&label=Watch)](https://GitHub.com/microsoft/ML-For-Beginners/watchers/)
+[![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
+[![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
+
+# ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó - ‡§è‡§ï ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ
+
+> üåç‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§µ‡§ø‡§∂‡•ç‡§µ ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§§‡•á ‡§π‡•à‡§Ç üåç
+
+‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§ï‡•á ‡§è‡§ú‡§º‡•ç‡§Ø‡•ã‡§∞ ‡§ï‡•ç‡§≤‡§æ‡§â‡§° ‡§è‡§°‡§µ‡•ã‡§ï‡•á‡§ü‡•ç‡§∏ ‡§ï‡•ã 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§®‡§§‡§æ ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à **‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§® ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç, ‡§Ü‡§™   ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡•ç‡§ï‡§ø‡§ï‡§ø‡§ü-‡§≤‡§∞‡•ç‡§® ‡§ï‡•ã ‡§è‡§ï ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•Å‡§è ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Ü‡§ó‡§æ‡§Æ‡•Ä '‡§è‡§Ü‡§à ‡§´‡•â‡§∞ ‡§¨‡§ø‡§ó‡§ø‡§®‡§∞‡•ç‡§∏' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ó‡§π‡§® ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡•á ‡§¨‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ú‡§ø‡§∏‡•á ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä **‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡§ó‡•á‡•§ ‡§á‡§® ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•ã‡§°‡§º‡•á‡§Ç ['‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ](https://aka.ms/datascience-beginners), ‡§≠‡•Ä!
+
+‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§á‡§® ‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï‡•ã‡§Ç ‡§ï‡•ã ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§ï‡§à ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§™‡§∞ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§† ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§î‡§∞ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä, ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂, ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®, ‡§è‡§ï ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü, ‡§î‡§∞ ‡§¨‡§π‡•Å‡§§ ‡§ï‡•Å‡§õ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§®‡§è ‡§ï‡•å‡§∂‡§≤ ‡§ï‡•ã '‡§õ‡§°‡§º‡•Ä' ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§è‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à‡•§
+
+**‚úçÔ∏è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç ** ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞, ‡§∏‡•ç‡§ü‡•Ä‡§´‡§® ‡§π‡•â‡§µ‡•á‡§≤, ‡§´‡•ç‡§∞‡§æ‡§Ç‡§∏‡•á‡§∏‡•ç‡§ï‡§æ ‡§≤‡§æ‡§ú‡§º‡•á‡§∞‡•Ä, ‡§ü‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§ï‡•à‡§∏‡•Ä ‡§¨‡•ç‡§∞‡•á‡§µ‡§ø‡§Ø‡•Ç, ‡§¶‡§ø‡§Æ‡§ø‡§§‡•ç‡§∞‡•Ä ‡§∏‡•ã‡§∂‡§®‡§ø‡§ï‡•ã‡§µ, ‡§ï‡•ç‡§∞‡§ø‡§∏ ‡§®‡•ã‡§∞‡§ø‡§Ç‡§ó, ‡§Ö‡§®‡§ø‡§∞‡•ç‡§¨‡§æ‡§® ‡§Æ‡•Å‡§ñ‡§∞‡•ç‡§ú‡•Ä, ‡§ì‡§∞‡§®‡•á‡§≤‡§æ ‡§Ö‡§≤‡•ç‡§ü‡•Å‡§®‡§ø‡§Ø‡§® ‡§î‡§∞ ‡§è‡§Æ‡•Ä ‡§¨‡•â‡§Ø‡§° ‡§ï‡•ã ‡§π‡§æ‡§∞‡•ç‡§¶‡§ø‡§ï ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§
+
+**üé® ‡§π‡§Æ‡§æ‡§∞‡•á ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§æ‡§∞‡•ã‡§Ç ** ‡§§‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§¶‡§æ‡§∏‡§æ‡§®‡•Ä ‡§Æ‡§¶‡§ø‡§™‡§≤‡•ç‡§≤‡•Ä ‡§î‡§∞ ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞ ‡§ï‡•ã ‡§≠‡•Ä ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶
+
+**üôè ‡§π‡§Æ‡§æ‡§∞‡•á Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç, ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§ï‡•ã‡§Ç ‡§î‡§∞ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®‡§ï‡§∞‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶ **, ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∞‡§ø‡§∑‡§ø‡§§ ‡§°‡§æ‡§ó‡§≤‡•Ä, ‡§Æ‡•Å‡§π‡§Æ‡•ç‡§Æ‡§¶ ‡§∏‡§æ‡§ï‡§ø‡§¨ ‡§ñ‡§æ‡§® ‡§á‡§®‡§æ‡§®, ‡§∞‡•ã‡§π‡§® ‡§∞‡§æ‡§ú, ‡§Ö‡§≤‡•á‡§ï‡•ç‡§ú‡•á‡§Ç‡§°‡•ç‡§∞‡•Ç ‡§™‡•á‡§ü‡•ç‡§∞‡•á‡§∏‡•ç‡§ï‡•Å, ‡§Ö‡§≠‡§ø‡§∑‡•á‡§ï ‡§ú‡§æ‡§Ø‡§∏‡§µ‡§æ‡§≤, ‡§®‡§µ‡§∞‡•Ä‡§® ‡§§‡§¨‡§∏‡•ç‡§∏‡•Å‡§Æ, ‡§á‡§ì‡§® ‡§∏‡§Æ‡•Å‡§á‡§≤‡§æ, ‡§î‡§∞ ‡§∏‡•ç‡§®‡§ø‡§ó‡•ç‡§ß‡§æ ‡§Ö‡§ó‡•ç‡§∞‡§µ‡§æ‡§≤
+
+**ü§© ‡§π‡§Æ‡§æ‡§∞‡•á R ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§è‡§∞‡§ø‡§ï ‡§µ‡§Ç‡§ú‡§æ‡§â ‡§ï‡§æ ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§Ü‡§≠‡§æ‡§∞!**
+
+---
+
+# ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡§æ
+
+**‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä**, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∞‡•á‡§™‡•ã ‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§ï‡•á ‡§ó‡§ø‡§ü‡§π‡§¨ ‡§ñ‡§æ‡§§‡•á ‡§Æ‡•á‡§Ç ‡§´‡•ã‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§Ø‡§æ ‡§∏‡§Æ‡•Ç‡§π ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç:
+
+- ‡§™‡•ç‡§∞‡•Ä-‡§≤‡•á‡§ï‡•ç‡§ö‡§∞ ‡§ï‡•ç‡§µ‡§ø‡§ú ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§™‡§¢‡§º‡•á‡§Ç ‡§î‡§∞ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§ú‡•ç‡§û‡§æ‡§® ‡§ú‡§æ‡§Ç‡§ö ‡§™‡§∞ ‡§∞‡•Å‡§ï‡•á‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§ø‡§Ç‡§¨‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§ï‡•ã‡§° ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§ú‡§æ‡§Ø ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§ï‡§∞ ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç; ‡§π‡§æ‡§≤‡§æ‡§Ç‡§ï‡§ø ‡§µ‡§π ‡§ï‡•ã‡§° ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§â‡§®‡•ç‡§Æ‡•Å‡§ñ ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç `/ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§≤‡•á‡§Ç‡•§
+- ‡§ö‡•Å‡§®‡•å‡§§‡•Ä ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§è‡§ï ‡§™‡§æ‡§† ‡§∏‡§Æ‡•Ç‡§π ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶, [‡§ö‡§∞‡•ç‡§ö‡§æ ‡§¨‡•ã‡§∞‡•ç‡§°](https://github.com/microsoft/ML-For-Beginners/discussions) ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å ‡§î‡§∞ ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ PAT ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§≠‡§∞‡§ï‡§∞ ""‡§ú‡§º‡•ã‡§∞ ‡§∏‡•á ‡§∏‡•Ä‡§ñ‡•á‡§Ç""‡•§ ‡§è‡§ï '‡§™‡•Ä‡§è‡§ü‡•Ä' ‡§è‡§ï ‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Ü‡§ï‡§≤‡§® ‡§â‡§™‡§ï‡§∞‡§£ ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§π‡•à ‡§ú‡§ø‡§∏‡•á ‡§Ü‡§™ ‡§Ö‡§™‡§®‡•á ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≠‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§Ö‡§®‡•ç‡§Ø ‡§™‡•Ä‡§è‡§ü‡•Ä ‡§™‡§∞ ‡§≠‡•Ä ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§π‡§Æ ‡§è‡§ï ‡§∏‡§æ‡§• ‡§∏‡•Ä‡§ñ ‡§∏‡§ï‡•á‡§Ç‡•§
+
+> ‡§Ü‡§ó‡•á ‡§ï‡•á ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§π‡§Æ ‡§á‡§® [‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§≤‡§∞‡•ç‡§®](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa) ‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§î‡§∞ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§∞‡§æ‡§∏‡•ç‡§§‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§∏‡§∞‡§£ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§.
+
+**‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï**, ‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡§æ‡§∏ [‡§ï‡•Å‡§õ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç] (for-teachers.md) ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç‡•§
+---
+
+## ‡§ü‡•Ä‡§Æ ‡§∏‡•á ‡§Æ‡§ø‡§≤‡•ã
+
+[![‡§™‡•ç‡§∞‡•ã‡§Æ‡•ã ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã](ml.gif)](https://youtu.be/Tj1XWrDSYJU ""Promo video"")
+
+**Gif by** [‡§Æ‡•ã‡§π‡§ø‡§§ ‡§ú‡•à‡§∏‡§≤](https://linkedin.com/in/mohitjaisal)
+
+> üé• ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ ‡§î‡§∞ ‡§á‡§∏‡•á ‡§¨‡§®‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§≤‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ä‡§™‡§∞ ‡§ï‡•Ä ‡§õ‡§µ‡§ø ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç!
+---
+
+## ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞
+
+‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§π‡§Æ‡§®‡•á ‡§¶‡•ã ‡§∂‡•à‡§ï‡•ç‡§∑‡§£‡§ø‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß‡§æ‡§Ç‡§§‡•ã‡§Ç ‡§ï‡•ã ‡§ö‡•Å‡§®‡§æ ‡§π‡•à: ‡§Ø‡§π ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§®‡§æ ‡§ï‡§ø ‡§Ø‡§π ‡§µ‡•ç‡§Ø‡§æ‡§µ‡§π‡§æ‡§∞‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á **‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§** ‡§π‡•à ‡§î‡§∞ ‡§á‡§∏‡§Æ‡•á‡§Ç **‡§≤‡§ó‡§æ‡§§‡§æ‡§∞ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä** ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§® **‡§•‡•Ä‡§Æ** ‡§π‡•à ‡§ú‡•ã ‡§á‡§∏‡•á ‡§è‡§ï‡§§‡§æ ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§
+
+‡§Ø‡§π ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§ï‡•á ‡§ï‡§ø ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§Ç‡§∞‡•á‡§ñ‡§ø‡§§ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à, ‡§õ‡§æ‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡•ã ‡§î‡§∞ ‡§Ö‡§ß‡§ø‡§ï ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§™‡•ç‡§∞‡§§‡§ø‡§ß‡§æ‡§∞‡§£ ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§ï‡§ï‡•ç‡§∑‡§æ ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§è‡§ï ‡§ï‡§Æ-‡§¶‡§æ‡§Ç‡§µ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§ï‡•á ‡§µ‡§ø‡§∑‡§Ø ‡§ï‡•ã ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§á‡§∞‡§æ‡§¶‡•á ‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à, ‡§ú‡§¨‡§ï‡§ø ‡§ï‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§Ü‡§ó‡•á ‡§™‡•ç‡§∞‡§§‡§ø‡§ß‡§æ‡§∞‡§£ ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•ã ‡§≤‡§ö‡•Ä‡§≤‡§æ ‡§î‡§∞ ‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§•‡§æ ‡§î‡§∞ ‡§á‡§∏‡•á ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§Ø‡§æ ‡§Ü‡§Ç‡§∂‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§≤‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§ ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç ‡§õ‡•ã‡§ü‡•Ä ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç ‡§î‡§∞ 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§ï‡•á ‡§ö‡§ï‡•ç‡§∞ ‡§ï‡•á ‡§Ö‡§Ç‡§§ ‡§§‡§ï ‡§§‡•á‡§ú‡•Ä ‡§∏‡•á ‡§ú‡§ü‡§ø‡§≤ ‡§π‡•ã ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§è‡§Æ‡§è‡§≤ ‡§ï‡•á ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï-‡§µ‡§ø‡§∂‡•ç‡§µ ‡§Ö‡§®‡•Å‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡•ã‡§Ç ‡§™‡§∞ ‡§è‡§ï ‡§™‡•ã‡§∏‡•ç‡§ü‡§∏‡•ç‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§ü ‡§≠‡•Ä ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§ï‡•ç‡§∞‡•á‡§°‡§ø‡§ü ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ ‡§ö‡§∞‡•ç‡§ö‡§æ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
+
+> ‡§π‡§Æ‡§æ‡§∞‡•Ä [‡§Ü‡§ö‡§æ‡§∞ ‡§∏‡§Ç‡§π‡§ø‡§§‡§æ](CODE_OF_CONDUCT.md), [‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®](CONTRIBUTING.md), ‡§î‡§∞ [‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶](TRANSLATIONS.md) ‡§¶‡§ø‡§∂‡§æ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂ ‡§ñ‡•ã‡§ú‡•á‡§Ç‡•§ ‡§π‡§Æ ‡§Ü‡§™‡§ï‡•Ä ‡§∞‡§ö‡§®‡§æ‡§§‡•ç‡§Æ‡§ï ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç!",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,821977401,jlooper,1450004,2022-03-08T19:01:37+00:00,2022-03-08T19:02:42+00:00,malformed markdown,True,translations/README.hi.md,,"@@ -0,0 +1,127 @@
+[![GitHub license](https://img.shields.io/github/license/microsoft/ML-For-Beginners.svg)](https://github.com/microsoft/ML-For-Beginners/blob/master/LICENSE)
+[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/)
+[![GitHub issues](https://img.shields.io/github/issues/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/issues/)
+[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/pulls/)
+[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)
+
+[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/ML-For-Beginners.svg?style=social&label=Watch)](https://GitHub.com/microsoft/ML-For-Beginners/watchers/)
+[![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
+[![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
+
+# ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó - ‡§è‡§ï ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ
+
+> üåç‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§µ‡§ø‡§∂‡•ç‡§µ ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§§‡•á ‡§π‡•à‡§Ç üåç
+
+‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§ï‡•á ‡§è‡§ú‡§º‡•ç‡§Ø‡•ã‡§∞ ‡§ï‡•ç‡§≤‡§æ‡§â‡§° ‡§è‡§°‡§µ‡•ã‡§ï‡•á‡§ü‡•ç‡§∏ ‡§ï‡•ã 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§®‡§§‡§æ ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à **‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§® ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç, ‡§Ü‡§™   ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡•ç‡§ï‡§ø‡§ï‡§ø‡§ü-‡§≤‡§∞‡•ç‡§® ‡§ï‡•ã ‡§è‡§ï ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•Å‡§è ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Ü‡§ó‡§æ‡§Æ‡•Ä '‡§è‡§Ü‡§à ‡§´‡•â‡§∞ ‡§¨‡§ø‡§ó‡§ø‡§®‡§∞‡•ç‡§∏' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ó‡§π‡§® ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡•á ‡§¨‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ú‡§ø‡§∏‡•á ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä **‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡§ó‡•á‡•§ ‡§á‡§® ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•ã‡§°‡§º‡•á‡§Ç ['‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ](https://aka.ms/datascience-beginners), ‡§≠‡•Ä!
+
+‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§á‡§® ‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï‡•ã‡§Ç ‡§ï‡•ã ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§ï‡§à ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§™‡§∞ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§† ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§î‡§∞ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä, ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂, ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®, ‡§è‡§ï ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü, ‡§î‡§∞ ‡§¨‡§π‡•Å‡§§ ‡§ï‡•Å‡§õ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§®‡§è ‡§ï‡•å‡§∂‡§≤ ‡§ï‡•ã '‡§õ‡§°‡§º‡•Ä' ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§è‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à‡•§
+
+**‚úçÔ∏è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç ** ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞, ‡§∏‡•ç‡§ü‡•Ä‡§´‡§® ‡§π‡•â‡§µ‡•á‡§≤, ‡§´‡•ç‡§∞‡§æ‡§Ç‡§∏‡•á‡§∏‡•ç‡§ï‡§æ ‡§≤‡§æ‡§ú‡§º‡•á‡§∞‡•Ä, ‡§ü‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§ï‡•à‡§∏‡•Ä ‡§¨‡•ç‡§∞‡•á‡§µ‡§ø‡§Ø‡•Ç, ‡§¶‡§ø‡§Æ‡§ø‡§§‡•ç‡§∞‡•Ä ‡§∏‡•ã‡§∂‡§®‡§ø‡§ï‡•ã‡§µ, ‡§ï‡•ç‡§∞‡§ø‡§∏ ‡§®‡•ã‡§∞‡§ø‡§Ç‡§ó, ‡§Ö‡§®‡§ø‡§∞‡•ç‡§¨‡§æ‡§® ‡§Æ‡•Å‡§ñ‡§∞‡•ç‡§ú‡•Ä, ‡§ì‡§∞‡§®‡•á‡§≤‡§æ ‡§Ö‡§≤‡•ç‡§ü‡•Å‡§®‡§ø‡§Ø‡§® ‡§î‡§∞ ‡§è‡§Æ‡•Ä ‡§¨‡•â‡§Ø‡§° ‡§ï‡•ã ‡§π‡§æ‡§∞‡•ç‡§¶‡§ø‡§ï ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§
+
+**üé® ‡§π‡§Æ‡§æ‡§∞‡•á ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§æ‡§∞‡•ã‡§Ç ** ‡§§‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§¶‡§æ‡§∏‡§æ‡§®‡•Ä ‡§Æ‡§¶‡§ø‡§™‡§≤‡•ç‡§≤‡•Ä ‡§î‡§∞ ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞ ‡§ï‡•ã ‡§≠‡•Ä ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,821977537,jlooper,1450004,2022-03-08T19:01:49+00:00,2022-03-08T19:02:42+00:00,this will 404,True,translations/README.hi.md,,"@@ -0,0 +1,127 @@
+[![GitHub license](https://img.shields.io/github/license/microsoft/ML-For-Beginners.svg)](https://github.com/microsoft/ML-For-Beginners/blob/master/LICENSE)
+[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/)
+[![GitHub issues](https://img.shields.io/github/issues/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/issues/)
+[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/pulls/)
+[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)
+
+[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/ML-For-Beginners.svg?style=social&label=Watch)](https://GitHub.com/microsoft/ML-For-Beginners/watchers/)
+[![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
+[![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
+
+# ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó - ‡§è‡§ï ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ
+
+> üåç‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§µ‡§ø‡§∂‡•ç‡§µ ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§§‡•á ‡§π‡•à‡§Ç üåç
+
+‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§ï‡•á ‡§è‡§ú‡§º‡•ç‡§Ø‡•ã‡§∞ ‡§ï‡•ç‡§≤‡§æ‡§â‡§° ‡§è‡§°‡§µ‡•ã‡§ï‡•á‡§ü‡•ç‡§∏ ‡§ï‡•ã 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§®‡§§‡§æ ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à **‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§® ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç, ‡§Ü‡§™   ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡•ç‡§ï‡§ø‡§ï‡§ø‡§ü-‡§≤‡§∞‡•ç‡§® ‡§ï‡•ã ‡§è‡§ï ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•Å‡§è ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Ü‡§ó‡§æ‡§Æ‡•Ä '‡§è‡§Ü‡§à ‡§´‡•â‡§∞ ‡§¨‡§ø‡§ó‡§ø‡§®‡§∞‡•ç‡§∏' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ó‡§π‡§® ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡•á ‡§¨‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ú‡§ø‡§∏‡•á ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä **‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡§ó‡•á‡•§ ‡§á‡§® ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•ã‡§°‡§º‡•á‡§Ç ['‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ](https://aka.ms/datascience-beginners), ‡§≠‡•Ä!
+
+‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§á‡§® ‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï‡•ã‡§Ç ‡§ï‡•ã ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§ï‡§à ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§™‡§∞ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§† ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§î‡§∞ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä, ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂, ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®, ‡§è‡§ï ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü, ‡§î‡§∞ ‡§¨‡§π‡•Å‡§§ ‡§ï‡•Å‡§õ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§®‡§è ‡§ï‡•å‡§∂‡§≤ ‡§ï‡•ã '‡§õ‡§°‡§º‡•Ä' ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§è‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à‡•§
+
+**‚úçÔ∏è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç ** ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞, ‡§∏‡•ç‡§ü‡•Ä‡§´‡§® ‡§π‡•â‡§µ‡•á‡§≤, ‡§´‡•ç‡§∞‡§æ‡§Ç‡§∏‡•á‡§∏‡•ç‡§ï‡§æ ‡§≤‡§æ‡§ú‡§º‡•á‡§∞‡•Ä, ‡§ü‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§ï‡•à‡§∏‡•Ä ‡§¨‡•ç‡§∞‡•á‡§µ‡§ø‡§Ø‡•Ç, ‡§¶‡§ø‡§Æ‡§ø‡§§‡•ç‡§∞‡•Ä ‡§∏‡•ã‡§∂‡§®‡§ø‡§ï‡•ã‡§µ, ‡§ï‡•ç‡§∞‡§ø‡§∏ ‡§®‡•ã‡§∞‡§ø‡§Ç‡§ó, ‡§Ö‡§®‡§ø‡§∞‡•ç‡§¨‡§æ‡§® ‡§Æ‡•Å‡§ñ‡§∞‡•ç‡§ú‡•Ä, ‡§ì‡§∞‡§®‡•á‡§≤‡§æ ‡§Ö‡§≤‡•ç‡§ü‡•Å‡§®‡§ø‡§Ø‡§® ‡§î‡§∞ ‡§è‡§Æ‡•Ä ‡§¨‡•â‡§Ø‡§° ‡§ï‡•ã ‡§π‡§æ‡§∞‡•ç‡§¶‡§ø‡§ï ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§
+
+**üé® ‡§π‡§Æ‡§æ‡§∞‡•á ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§æ‡§∞‡•ã‡§Ç ** ‡§§‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§¶‡§æ‡§∏‡§æ‡§®‡•Ä ‡§Æ‡§¶‡§ø‡§™‡§≤‡•ç‡§≤‡•Ä ‡§î‡§∞ ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞ ‡§ï‡•ã ‡§≠‡•Ä ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶
+
+**üôè ‡§π‡§Æ‡§æ‡§∞‡•á Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç, ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§ï‡•ã‡§Ç ‡§î‡§∞ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®‡§ï‡§∞‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶ **, ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∞‡§ø‡§∑‡§ø‡§§ ‡§°‡§æ‡§ó‡§≤‡•Ä, ‡§Æ‡•Å‡§π‡§Æ‡•ç‡§Æ‡§¶ ‡§∏‡§æ‡§ï‡§ø‡§¨ ‡§ñ‡§æ‡§® ‡§á‡§®‡§æ‡§®, ‡§∞‡•ã‡§π‡§® ‡§∞‡§æ‡§ú, ‡§Ö‡§≤‡•á‡§ï‡•ç‡§ú‡•á‡§Ç‡§°‡•ç‡§∞‡•Ç ‡§™‡•á‡§ü‡•ç‡§∞‡•á‡§∏‡•ç‡§ï‡•Å, ‡§Ö‡§≠‡§ø‡§∑‡•á‡§ï ‡§ú‡§æ‡§Ø‡§∏‡§µ‡§æ‡§≤, ‡§®‡§µ‡§∞‡•Ä‡§® ‡§§‡§¨‡§∏‡•ç‡§∏‡•Å‡§Æ, ‡§á‡§ì‡§® ‡§∏‡§Æ‡•Å‡§á‡§≤‡§æ, ‡§î‡§∞ ‡§∏‡•ç‡§®‡§ø‡§ó‡•ç‡§ß‡§æ ‡§Ö‡§ó‡•ç‡§∞‡§µ‡§æ‡§≤
+
+**ü§© ‡§π‡§Æ‡§æ‡§∞‡•á R ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§è‡§∞‡§ø‡§ï ‡§µ‡§Ç‡§ú‡§æ‡§â ‡§ï‡§æ ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§Ü‡§≠‡§æ‡§∞!**
+
+---
+
+# ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡§æ
+
+**‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä**, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∞‡•á‡§™‡•ã ‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§ï‡•á ‡§ó‡§ø‡§ü‡§π‡§¨ ‡§ñ‡§æ‡§§‡•á ‡§Æ‡•á‡§Ç ‡§´‡•ã‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§Ø‡§æ ‡§∏‡§Æ‡•Ç‡§π ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç:
+
+- ‡§™‡•ç‡§∞‡•Ä-‡§≤‡•á‡§ï‡•ç‡§ö‡§∞ ‡§ï‡•ç‡§µ‡§ø‡§ú ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§™‡§¢‡§º‡•á‡§Ç ‡§î‡§∞ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§ú‡•ç‡§û‡§æ‡§® ‡§ú‡§æ‡§Ç‡§ö ‡§™‡§∞ ‡§∞‡•Å‡§ï‡•á‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§ø‡§Ç‡§¨‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§ï‡•ã‡§° ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§ú‡§æ‡§Ø ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§ï‡§∞ ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç; ‡§π‡§æ‡§≤‡§æ‡§Ç‡§ï‡§ø ‡§µ‡§π ‡§ï‡•ã‡§° ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§â‡§®‡•ç‡§Æ‡•Å‡§ñ ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç `/ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§≤‡•á‡§Ç‡•§
+- ‡§ö‡•Å‡§®‡•å‡§§‡•Ä ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§è‡§ï ‡§™‡§æ‡§† ‡§∏‡§Æ‡•Ç‡§π ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶, [‡§ö‡§∞‡•ç‡§ö‡§æ ‡§¨‡•ã‡§∞‡•ç‡§°](https://github.com/microsoft/ML-For-Beginners/discussions) ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å ‡§î‡§∞ ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ PAT ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§≠‡§∞‡§ï‡§∞ ""‡§ú‡§º‡•ã‡§∞ ‡§∏‡•á ‡§∏‡•Ä‡§ñ‡•á‡§Ç""‡•§ ‡§è‡§ï '‡§™‡•Ä‡§è‡§ü‡•Ä' ‡§è‡§ï ‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Ü‡§ï‡§≤‡§® ‡§â‡§™‡§ï‡§∞‡§£ ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§π‡•à ‡§ú‡§ø‡§∏‡•á ‡§Ü‡§™ ‡§Ö‡§™‡§®‡•á ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≠‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§Ö‡§®‡•ç‡§Ø ‡§™‡•Ä‡§è‡§ü‡•Ä ‡§™‡§∞ ‡§≠‡•Ä ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§π‡§Æ ‡§è‡§ï ‡§∏‡§æ‡§• ‡§∏‡•Ä‡§ñ ‡§∏‡§ï‡•á‡§Ç‡•§
+
+> ‡§Ü‡§ó‡•á ‡§ï‡•á ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§π‡§Æ ‡§á‡§® [‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§≤‡§∞‡•ç‡§®](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa) ‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§î‡§∞ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§∞‡§æ‡§∏‡•ç‡§§‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§∏‡§∞‡§£ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§.
+
+**‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï**, ‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡§æ‡§∏ [‡§ï‡•Å‡§õ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç] (for-teachers.md) ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç‡•§",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,821977987,jlooper,1450004,2022-03-08T19:02:28+00:00,2022-03-08T19:02:42+00:00,this is broken,True,translations/README.hi.md,,"@@ -0,0 +1,127 @@
+[![GitHub license](https://img.shields.io/github/license/microsoft/ML-For-Beginners.svg)](https://github.com/microsoft/ML-For-Beginners/blob/master/LICENSE)
+[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/)
+[![GitHub issues](https://img.shields.io/github/issues/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/issues/)
+[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/pulls/)
+[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)
+
+[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/ML-For-Beginners.svg?style=social&label=Watch)](https://GitHub.com/microsoft/ML-For-Beginners/watchers/)
+[![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
+[![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
+
+# ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó - ‡§è‡§ï ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ
+
+> üåç‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§µ‡§ø‡§∂‡•ç‡§µ ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§§‡•á ‡§π‡•à‡§Ç üåç
+
+‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§ï‡•á ‡§è‡§ú‡§º‡•ç‡§Ø‡•ã‡§∞ ‡§ï‡•ç‡§≤‡§æ‡§â‡§° ‡§è‡§°‡§µ‡•ã‡§ï‡•á‡§ü‡•ç‡§∏ ‡§ï‡•ã 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§®‡§§‡§æ ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à **‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§® ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç, ‡§Ü‡§™   ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡•ç‡§ï‡§ø‡§ï‡§ø‡§ü-‡§≤‡§∞‡•ç‡§® ‡§ï‡•ã ‡§è‡§ï ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•Å‡§è ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Ü‡§ó‡§æ‡§Æ‡•Ä '‡§è‡§Ü‡§à ‡§´‡•â‡§∞ ‡§¨‡§ø‡§ó‡§ø‡§®‡§∞‡•ç‡§∏' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ó‡§π‡§® ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡•á ‡§¨‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ú‡§ø‡§∏‡•á ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä **‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡§ó‡•á‡•§ ‡§á‡§® ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•ã‡§°‡§º‡•á‡§Ç ['‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ](https://aka.ms/datascience-beginners), ‡§≠‡•Ä!
+
+‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§á‡§® ‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï‡•ã‡§Ç ‡§ï‡•ã ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§ï‡§à ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§™‡§∞ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§† ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§î‡§∞ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä, ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂, ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®, ‡§è‡§ï ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü, ‡§î‡§∞ ‡§¨‡§π‡•Å‡§§ ‡§ï‡•Å‡§õ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§®‡§è ‡§ï‡•å‡§∂‡§≤ ‡§ï‡•ã '‡§õ‡§°‡§º‡•Ä' ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§è‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à‡•§
+
+**‚úçÔ∏è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç ** ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞, ‡§∏‡•ç‡§ü‡•Ä‡§´‡§® ‡§π‡•â‡§µ‡•á‡§≤, ‡§´‡•ç‡§∞‡§æ‡§Ç‡§∏‡•á‡§∏‡•ç‡§ï‡§æ ‡§≤‡§æ‡§ú‡§º‡•á‡§∞‡•Ä, ‡§ü‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§ï‡•à‡§∏‡•Ä ‡§¨‡•ç‡§∞‡•á‡§µ‡§ø‡§Ø‡•Ç, ‡§¶‡§ø‡§Æ‡§ø‡§§‡•ç‡§∞‡•Ä ‡§∏‡•ã‡§∂‡§®‡§ø‡§ï‡•ã‡§µ, ‡§ï‡•ç‡§∞‡§ø‡§∏ ‡§®‡•ã‡§∞‡§ø‡§Ç‡§ó, ‡§Ö‡§®‡§ø‡§∞‡•ç‡§¨‡§æ‡§® ‡§Æ‡•Å‡§ñ‡§∞‡•ç‡§ú‡•Ä, ‡§ì‡§∞‡§®‡•á‡§≤‡§æ ‡§Ö‡§≤‡•ç‡§ü‡•Å‡§®‡§ø‡§Ø‡§® ‡§î‡§∞ ‡§è‡§Æ‡•Ä ‡§¨‡•â‡§Ø‡§° ‡§ï‡•ã ‡§π‡§æ‡§∞‡•ç‡§¶‡§ø‡§ï ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§
+
+**üé® ‡§π‡§Æ‡§æ‡§∞‡•á ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§æ‡§∞‡•ã‡§Ç ** ‡§§‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§¶‡§æ‡§∏‡§æ‡§®‡•Ä ‡§Æ‡§¶‡§ø‡§™‡§≤‡•ç‡§≤‡•Ä ‡§î‡§∞ ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞ ‡§ï‡•ã ‡§≠‡•Ä ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶
+
+**üôè ‡§π‡§Æ‡§æ‡§∞‡•á Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç, ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§ï‡•ã‡§Ç ‡§î‡§∞ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®‡§ï‡§∞‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶ **, ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∞‡§ø‡§∑‡§ø‡§§ ‡§°‡§æ‡§ó‡§≤‡•Ä, ‡§Æ‡•Å‡§π‡§Æ‡•ç‡§Æ‡§¶ ‡§∏‡§æ‡§ï‡§ø‡§¨ ‡§ñ‡§æ‡§® ‡§á‡§®‡§æ‡§®, ‡§∞‡•ã‡§π‡§® ‡§∞‡§æ‡§ú, ‡§Ö‡§≤‡•á‡§ï‡•ç‡§ú‡•á‡§Ç‡§°‡•ç‡§∞‡•Ç ‡§™‡•á‡§ü‡•ç‡§∞‡•á‡§∏‡•ç‡§ï‡•Å, ‡§Ö‡§≠‡§ø‡§∑‡•á‡§ï ‡§ú‡§æ‡§Ø‡§∏‡§µ‡§æ‡§≤, ‡§®‡§µ‡§∞‡•Ä‡§® ‡§§‡§¨‡§∏‡•ç‡§∏‡•Å‡§Æ, ‡§á‡§ì‡§® ‡§∏‡§Æ‡•Å‡§á‡§≤‡§æ, ‡§î‡§∞ ‡§∏‡•ç‡§®‡§ø‡§ó‡•ç‡§ß‡§æ ‡§Ö‡§ó‡•ç‡§∞‡§µ‡§æ‡§≤
+
+**ü§© ‡§π‡§Æ‡§æ‡§∞‡•á R ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§è‡§∞‡§ø‡§ï ‡§µ‡§Ç‡§ú‡§æ‡§â ‡§ï‡§æ ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§Ü‡§≠‡§æ‡§∞!**
+
+---
+
+# ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡§æ
+
+**‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä**, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∞‡•á‡§™‡•ã ‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§ï‡•á ‡§ó‡§ø‡§ü‡§π‡§¨ ‡§ñ‡§æ‡§§‡•á ‡§Æ‡•á‡§Ç ‡§´‡•ã‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§Ø‡§æ ‡§∏‡§Æ‡•Ç‡§π ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç:
+
+- ‡§™‡•ç‡§∞‡•Ä-‡§≤‡•á‡§ï‡•ç‡§ö‡§∞ ‡§ï‡•ç‡§µ‡§ø‡§ú ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§™‡§¢‡§º‡•á‡§Ç ‡§î‡§∞ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§ú‡•ç‡§û‡§æ‡§® ‡§ú‡§æ‡§Ç‡§ö ‡§™‡§∞ ‡§∞‡•Å‡§ï‡•á‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§ø‡§Ç‡§¨‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§ï‡•ã‡§° ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§ú‡§æ‡§Ø ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§ï‡§∞ ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç; ‡§π‡§æ‡§≤‡§æ‡§Ç‡§ï‡§ø ‡§µ‡§π ‡§ï‡•ã‡§° ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§â‡§®‡•ç‡§Æ‡•Å‡§ñ ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç `/ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§≤‡•á‡§Ç‡•§
+- ‡§ö‡•Å‡§®‡•å‡§§‡•Ä ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§è‡§ï ‡§™‡§æ‡§† ‡§∏‡§Æ‡•Ç‡§π ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶, [‡§ö‡§∞‡•ç‡§ö‡§æ ‡§¨‡•ã‡§∞‡•ç‡§°](https://github.com/microsoft/ML-For-Beginners/discussions) ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å ‡§î‡§∞ ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ PAT ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§≠‡§∞‡§ï‡§∞ ""‡§ú‡§º‡•ã‡§∞ ‡§∏‡•á ‡§∏‡•Ä‡§ñ‡•á‡§Ç""‡•§ ‡§è‡§ï '‡§™‡•Ä‡§è‡§ü‡•Ä' ‡§è‡§ï ‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Ü‡§ï‡§≤‡§® ‡§â‡§™‡§ï‡§∞‡§£ ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§π‡•à ‡§ú‡§ø‡§∏‡•á ‡§Ü‡§™ ‡§Ö‡§™‡§®‡•á ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≠‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§Ö‡§®‡•ç‡§Ø ‡§™‡•Ä‡§è‡§ü‡•Ä ‡§™‡§∞ ‡§≠‡•Ä ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§π‡§Æ ‡§è‡§ï ‡§∏‡§æ‡§• ‡§∏‡•Ä‡§ñ ‡§∏‡§ï‡•á‡§Ç‡•§
+
+> ‡§Ü‡§ó‡•á ‡§ï‡•á ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§π‡§Æ ‡§á‡§® [‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§≤‡§∞‡•ç‡§®](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa) ‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§î‡§∞ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§∞‡§æ‡§∏‡•ç‡§§‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§∏‡§∞‡§£ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§.
+
+**‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï**, ‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡§æ‡§∏ [‡§ï‡•Å‡§õ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç] (for-teachers.md) ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç‡•§
+---
+
+## ‡§ü‡•Ä‡§Æ ‡§∏‡•á ‡§Æ‡§ø‡§≤‡•ã
+
+[![‡§™‡•ç‡§∞‡•ã‡§Æ‡•ã ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã](ml.gif)](https://youtu.be/Tj1XWrDSYJU ""Promo video"")",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,829092830,jlooper,1450004,2022-03-17T13:03:54+00:00,2022-03-17T13:05:11+00:00,not sure why the links here are going to the Italian translation?,True,translations/README.hi.md,,"@@ -0,0 +1,127 @@
+[![GitHub license](https://img.shields.io/github/license/microsoft/ML-For-Beginners.svg)](https://github.com/microsoft/ML-For-Beginners/blob/master/LICENSE)
+[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/)
+[![GitHub issues](https://img.shields.io/github/issues/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/issues/)
+[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/pulls/)
+[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)
+
+[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/ML-For-Beginners.svg?style=social&label=Watch)](https://GitHub.com/microsoft/ML-For-Beginners/watchers/)
+[![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
+[![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
+
+# ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó - ‡§è‡§ï ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ
+
+> üåç‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§µ‡§ø‡§∂‡•ç‡§µ ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§§‡•á ‡§π‡•à‡§Ç üåç
+
+‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§ï‡•á ‡§è‡§ú‡§º‡•ç‡§Ø‡•ã‡§∞ ‡§ï‡•ç‡§≤‡§æ‡§â‡§° ‡§è‡§°‡§µ‡•ã‡§ï‡•á‡§ü‡•ç‡§∏ ‡§ï‡•ã 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§®‡§§‡§æ ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à **‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§® ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç, ‡§Ü‡§™   ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡•ç‡§ï‡§ø‡§ï‡§ø‡§ü-‡§≤‡§∞‡•ç‡§® ‡§ï‡•ã ‡§è‡§ï ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•Å‡§è ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Ü‡§ó‡§æ‡§Æ‡•Ä '‡§è‡§Ü‡§à ‡§´‡•â‡§∞ ‡§¨‡§ø‡§ó‡§ø‡§®‡§∞‡•ç‡§∏' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ó‡§π‡§® ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡•á ‡§¨‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ú‡§ø‡§∏‡•á ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä **‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡§ó‡•á‡•§ ‡§á‡§® ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•ã‡§°‡§º‡•á‡§Ç ['‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ](https://aka.ms/datascience-beginners), ‡§≠‡•Ä!
+
+‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§á‡§® ‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï‡•ã‡§Ç ‡§ï‡•ã ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§ï‡§à ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§™‡§∞ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§† ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§î‡§∞ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä, ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂, ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®, ‡§è‡§ï ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü, ‡§î‡§∞ ‡§¨‡§π‡•Å‡§§ ‡§ï‡•Å‡§õ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§®‡§è ‡§ï‡•å‡§∂‡§≤ ‡§ï‡•ã '‡§õ‡§°‡§º‡•Ä' ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§è‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à‡•§
+
+**‚úçÔ∏è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç** ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞, ‡§∏‡•ç‡§ü‡•Ä‡§´‡§® ‡§π‡•â‡§µ‡•á‡§≤, ‡§´‡•ç‡§∞‡§æ‡§Ç‡§∏‡•á‡§∏‡•ç‡§ï‡§æ ‡§≤‡§æ‡§ú‡§º‡•á‡§∞‡•Ä, ‡§ü‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§ï‡•à‡§∏‡•Ä ‡§¨‡•ç‡§∞‡•á‡§µ‡§ø‡§Ø‡•Ç, ‡§¶‡§ø‡§Æ‡§ø‡§§‡•ç‡§∞‡•Ä ‡§∏‡•ã‡§∂‡§®‡§ø‡§ï‡•ã‡§µ, ‡§ï‡•ç‡§∞‡§ø‡§∏ ‡§®‡•ã‡§∞‡§ø‡§Ç‡§ó, ‡§Ö‡§®‡§ø‡§∞‡•ç‡§¨‡§æ‡§® ‡§Æ‡•Å‡§ñ‡§∞‡•ç‡§ú‡•Ä, ‡§ì‡§∞‡§®‡•á‡§≤‡§æ ‡§Ö‡§≤‡•ç‡§ü‡•Å‡§®‡§ø‡§Ø‡§® ‡§î‡§∞ ‡§è‡§Æ‡•Ä ‡§¨‡•â‡§Ø‡§° ‡§ï‡•ã ‡§π‡§æ‡§∞‡•ç‡§¶‡§ø‡§ï ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§
+
+**üé® ‡§π‡§Æ‡§æ‡§∞‡•á ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§æ‡§∞‡•ã‡§Ç** ‡§§‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§¶‡§æ‡§∏‡§æ‡§®‡•Ä ‡§Æ‡§¶‡§ø‡§™‡§≤‡•ç‡§≤‡•Ä ‡§î‡§∞ ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞ ‡§ï‡•ã ‡§≠‡•Ä ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶
+
+**üôè ‡§π‡§Æ‡§æ‡§∞‡•á Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç, ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§ï‡•ã‡§Ç ‡§î‡§∞ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®‡§ï‡§∞‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶**, ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∞‡§ø‡§∑‡§ø‡§§ ‡§°‡§æ‡§ó‡§≤‡•Ä, ‡§Æ‡•Å‡§π‡§Æ‡•ç‡§Æ‡§¶ ‡§∏‡§æ‡§ï‡§ø‡§¨ ‡§ñ‡§æ‡§® ‡§á‡§®‡§æ‡§®, ‡§∞‡•ã‡§π‡§® ‡§∞‡§æ‡§ú, ‡§Ö‡§≤‡•á‡§ï‡•ç‡§ú‡•á‡§Ç‡§°‡•ç‡§∞‡•Ç ‡§™‡•á‡§ü‡•ç‡§∞‡•á‡§∏‡•ç‡§ï‡•Å, ‡§Ö‡§≠‡§ø‡§∑‡•á‡§ï ‡§ú‡§æ‡§Ø‡§∏‡§µ‡§æ‡§≤, ‡§®‡§µ‡§∞‡•Ä‡§® ‡§§‡§¨‡§∏‡•ç‡§∏‡•Å‡§Æ, ‡§á‡§ì‡§® ‡§∏‡§Æ‡•Å‡§á‡§≤‡§æ, ‡§î‡§∞ ‡§∏‡•ç‡§®‡§ø‡§ó‡•ç‡§ß‡§æ ‡§Ö‡§ó‡•ç‡§∞‡§µ‡§æ‡§≤
+
+**ü§© ‡§π‡§Æ‡§æ‡§∞‡•á R ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§è‡§∞‡§ø‡§ï ‡§µ‡§Ç‡§ú‡§æ‡§â ‡§ï‡§æ ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§Ü‡§≠‡§æ‡§∞!**
+
+---
+
+# ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡§æ
+
+**‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä**, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∞‡•á‡§™‡•ã ‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§ï‡•á ‡§ó‡§ø‡§ü‡§π‡§¨ ‡§ñ‡§æ‡§§‡•á ‡§Æ‡•á‡§Ç ‡§´‡•ã‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§Ø‡§æ ‡§∏‡§Æ‡•Ç‡§π ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç:
+
+- ‡§™‡•ç‡§∞‡•Ä-‡§≤‡•á‡§ï‡•ç‡§ö‡§∞ ‡§ï‡•ç‡§µ‡§ø‡§ú ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§™‡§¢‡§º‡•á‡§Ç ‡§î‡§∞ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§ú‡•ç‡§û‡§æ‡§® ‡§ú‡§æ‡§Ç‡§ö ‡§™‡§∞ ‡§∞‡•Å‡§ï‡•á‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§ø‡§Ç‡§¨‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§ï‡•ã‡§° ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§ú‡§æ‡§Ø ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§ï‡§∞ ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç; ‡§π‡§æ‡§≤‡§æ‡§Ç‡§ï‡§ø ‡§µ‡§π ‡§ï‡•ã‡§° ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§â‡§®‡•ç‡§Æ‡•Å‡§ñ ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç `/ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§≤‡•á‡§Ç‡•§
+- ‡§ö‡•Å‡§®‡•å‡§§‡•Ä ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§è‡§ï ‡§™‡§æ‡§† ‡§∏‡§Æ‡•Ç‡§π ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶, [‡§ö‡§∞‡•ç‡§ö‡§æ ‡§¨‡•ã‡§∞‡•ç‡§°](https://github.com/microsoft/ML-For-Beginners/discussions) ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å ‡§î‡§∞ ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ PAT ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§≠‡§∞‡§ï‡§∞ ""‡§ú‡§º‡•ã‡§∞ ‡§∏‡•á ‡§∏‡•Ä‡§ñ‡•á‡§Ç""‡•§ ‡§è‡§ï '‡§™‡•Ä‡§è‡§ü‡•Ä' ‡§è‡§ï ‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Ü‡§ï‡§≤‡§® ‡§â‡§™‡§ï‡§∞‡§£ ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§π‡•à ‡§ú‡§ø‡§∏‡•á ‡§Ü‡§™ ‡§Ö‡§™‡§®‡•á ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≠‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§Ö‡§®‡•ç‡§Ø ‡§™‡•Ä‡§è‡§ü‡•Ä ‡§™‡§∞ ‡§≠‡•Ä ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§π‡§Æ ‡§è‡§ï ‡§∏‡§æ‡§• ‡§∏‡•Ä‡§ñ ‡§∏‡§ï‡•á‡§Ç‡•§
+
+> ‡§Ü‡§ó‡•á ‡§ï‡•á ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§π‡§Æ ‡§á‡§® [‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§≤‡§∞‡•ç‡§®](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa) ‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§î‡§∞ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§∞‡§æ‡§∏‡•ç‡§§‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§∏‡§∞‡§£ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§.
+
+**‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï**, ‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡§æ‡§∏ [‡§ï‡•Å‡§õ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç](../for-teachers.md) ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç‡•§
+---
+
+## ‡§ü‡•Ä‡§Æ ‡§∏‡•á ‡§Æ‡§ø‡§≤‡•ã
+
+[![‡§™‡•ç‡§∞‡•ã‡§Æ‡•ã ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã](../ml-for-beginners.png)](https://youtu.be/Tj1XWrDSYJU ""Promo video"")
+
+**Gif by** [‡§Æ‡•ã‡§π‡§ø‡§§ ‡§ú‡•à‡§∏‡§≤](https://linkedin.com/in/mohitjaisal)
+
+> üé• ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ ‡§î‡§∞ ‡§á‡§∏‡•á ‡§¨‡§®‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§≤‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ä‡§™‡§∞ ‡§ï‡•Ä ‡§õ‡§µ‡§ø ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç!
+---
+
+## ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞
+
+‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§π‡§Æ‡§®‡•á ‡§¶‡•ã ‡§∂‡•à‡§ï‡•ç‡§∑‡§£‡§ø‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß‡§æ‡§Ç‡§§‡•ã‡§Ç ‡§ï‡•ã ‡§ö‡•Å‡§®‡§æ ‡§π‡•à: ‡§Ø‡§π ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§®‡§æ ‡§ï‡§ø ‡§Ø‡§π ‡§µ‡•ç‡§Ø‡§æ‡§µ‡§π‡§æ‡§∞‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á **‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§** ‡§π‡•à ‡§î‡§∞ ‡§á‡§∏‡§Æ‡•á‡§Ç **‡§≤‡§ó‡§æ‡§§‡§æ‡§∞ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä** ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§® **‡§•‡•Ä‡§Æ** ‡§π‡•à ‡§ú‡•ã ‡§á‡§∏‡•á ‡§è‡§ï‡§§‡§æ ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§
+
+‡§Ø‡§π ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§ï‡•á ‡§ï‡§ø ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§Ç‡§∞‡•á‡§ñ‡§ø‡§§ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à, ‡§õ‡§æ‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡•ã ‡§î‡§∞ ‡§Ö‡§ß‡§ø‡§ï ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§™‡•ç‡§∞‡§§‡§ø‡§ß‡§æ‡§∞‡§£ ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§ï‡§ï‡•ç‡§∑‡§æ ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§è‡§ï ‡§ï‡§Æ-‡§¶‡§æ‡§Ç‡§µ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§ï‡•á ‡§µ‡§ø‡§∑‡§Ø ‡§ï‡•ã ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§á‡§∞‡§æ‡§¶‡•á ‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à, ‡§ú‡§¨‡§ï‡§ø ‡§ï‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§Ü‡§ó‡•á ‡§™‡•ç‡§∞‡§§‡§ø‡§ß‡§æ‡§∞‡§£ ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•ã ‡§≤‡§ö‡•Ä‡§≤‡§æ ‡§î‡§∞ ‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§•‡§æ ‡§î‡§∞ ‡§á‡§∏‡•á ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§Ø‡§æ ‡§Ü‡§Ç‡§∂‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§≤‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§ ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç ‡§õ‡•ã‡§ü‡•Ä ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç ‡§î‡§∞ 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§ï‡•á ‡§ö‡§ï‡•ç‡§∞ ‡§ï‡•á ‡§Ö‡§Ç‡§§ ‡§§‡§ï ‡§§‡•á‡§ú‡•Ä ‡§∏‡•á ‡§ú‡§ü‡§ø‡§≤ ‡§π‡•ã ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§è‡§Æ‡§è‡§≤ ‡§ï‡•á ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï-‡§µ‡§ø‡§∂‡•ç‡§µ ‡§Ö‡§®‡•Å‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡•ã‡§Ç ‡§™‡§∞ ‡§è‡§ï ‡§™‡•ã‡§∏‡•ç‡§ü‡§∏‡•ç‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§ü ‡§≠‡•Ä ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§ï‡•ç‡§∞‡•á‡§°‡§ø‡§ü ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ ‡§ö‡§∞‡•ç‡§ö‡§æ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
+
+> ‡§π‡§Æ‡§æ‡§∞‡•Ä [‡§Ü‡§ö‡§æ‡§∞ ‡§∏‡§Ç‡§π‡§ø‡§§‡§æ](../CODE_OF_CONDUCT.md), [‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®](../CONTRIBUTING.md), ‡§î‡§∞ [‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶](../TRANSLATIONS.md) ‡§¶‡§ø‡§∂‡§æ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂ ‡§ñ‡•ã‡§ú‡•á‡§Ç‡•§ ‡§π‡§Æ ‡§Ü‡§™‡§ï‡•Ä ‡§∞‡§ö‡§®‡§æ‡§§‡•ç‡§Æ‡§ï ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç!
+
+## ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç:
+
+- ‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï ‡§∏‡•ç‡§ï‡•á‡§ö‡§®‡•ã‡§ü
+- ‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï ‡§™‡•Ç‡§∞‡§ï ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã
+- ‡§™‡•Ç‡§∞‡•ç‡§µ ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§µ‡§æ‡§∞‡•ç‡§Æ‡§Ö‡§™ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä
+- ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§™‡§æ‡§†
+- ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§§‡§∞‡•Ä‡§ï‡•á ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ö‡§∞‡§£-‡§¶‡§∞-‡§ö‡§∞‡§£ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§ø‡§ï‡§æ
+- ‡§ú‡•ç‡§û‡§æ‡§® ‡§ú‡§æ‡§Ç‡§ö
+- ‡§è‡§ï ‡§ö‡•Å‡§®‡•å‡§§‡•Ä
+- ‡§™‡•Ç‡§∞‡§ï ‡§™‡§†‡§®
+- ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§≠‡§æ‡§∞
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä
+
+> **‡§≠‡§æ‡§∑‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§®‡•ã‡§ü**: ‡§Ø‡•á ‡§™‡§æ‡§† ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§™‡§æ‡§Ø‡§•‡§® ‡§Æ‡•á‡§Ç ‡§≤‡§ø‡§ñ‡•á ‡§ó‡§è ‡§π‡•à‡§Ç, ‡§≤‡•á‡§ï‡§ø‡§® ‡§ï‡§à ‡§Ü‡§∞ ‡§Æ‡•á‡§Ç ‡§≠‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡§Ç‡•§ ‡§è‡§ï ‡§Ü‡§∞ ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, `/ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§è‡§Ç ‡§î‡§∞ ‡§Ü‡§∞ ‡§™‡§æ‡§† ‡§¶‡•á‡§ñ‡•á‡§Ç‡•§ ‡§â‡§®‡§Æ‡•á‡§Ç ‡§è‡§ï .rmd ‡§è‡§ï‡•ç‡§∏‡§ü‡•á‡§Ç‡§∂‡§® ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï **R ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§®** ‡§´‡§º‡§æ‡§á‡§≤ ‡§ï‡§æ ‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø‡§§‡•ç‡§µ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ú‡§ø‡§∏‡•á ‡§ï‡•á‡§µ‡§≤ `‡§ï‡•ã‡§° ‡§ö‡§Ç‡§ï‡•ç‡§∏` (‡§Ü‡§∞ ‡§Ø‡§æ ‡§Ö‡§®‡•ç‡§Ø ‡§≠‡§æ‡§∑‡§æ‡§ì‡§Ç ‡§ï‡•á) ‡§ï‡•á ‡§è‡§Æ‡•ç‡§¨‡•á‡§°‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§™‡§∞‡§ø‡§≠‡§æ‡§∑‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§è‡§ï `‡§µ‡§æ‡§à‡§è‡§è‡§Æ‡§è‡§≤ ‡§π‡•á‡§°‡§∞` (‡§ú‡•ã ‡§á‡§∏ ‡§§‡§∞‡§π ‡§ï‡•á ‡§Ü‡§â‡§ü‡§™‡•Å‡§ü ‡§ï‡•ã ‡§™‡•ç‡§∞‡§æ‡§∞‡•Ç‡§™‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à) ‡§™‡•Ä‡§°‡•Ä‡§è‡§´ ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç) ‡§è‡§ï `‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º` ‡§Æ‡•á‡§Ç‡•§ ‡§ú‡•à‡§∏‡•á, ‡§Ø‡§π ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§Ö‡§®‡•Å‡§ï‡§∞‡§£‡•Ä‡§Ø ‡§∏‡§Ç‡§≤‡•á‡§ñ‡§® ‡§¢‡§æ‡§Ç‡§ö‡•á ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§Ø‡§π ‡§Ü‡§™‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§ï‡•ã‡§°, ‡§á‡§∏‡§ï‡•á ‡§Ü‡§â‡§ü‡§™‡•Å‡§ü ‡§î‡§∞ ‡§Ü‡§™‡§ï‡•á ‡§µ‡§ø‡§ö‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§Æ‡•á‡§Ç ‡§≤‡§ø‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§ï‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§∏‡§Ç‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§Ü‡§∞ ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Ä‡§°‡•Ä‡§è‡§´, ‡§è‡§ö‡§ü‡•Ä‡§è‡§Æ‡§è‡§≤ ‡§Ø‡§æ ‡§µ‡§∞‡•ç‡§° ‡§ú‡•à‡§∏‡•á ‡§Ü‡§â‡§ü‡§™‡•Å‡§ü ‡§∏‡•ç‡§µ‡§∞‡•Ç‡§™‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡•Å‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
+
+> **‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§®‡•ã‡§ü**: ‡§∏‡§≠‡•Ä ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç [‡§á‡§∏ ‡§ê‡§™ ‡§Æ‡•á‡§Ç](https://white-water-09ec41f0f.azurestaticapps.net/), ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§§‡•Ä‡§® ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§Ç ‡§ï‡•á ‡§ï‡•Å‡§≤ 52 ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§ï‡•á ‡§≤‡§ø‡§è‡•§ ‡§µ‡•á ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≠‡•Ä‡§§‡§∞ ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á ‡§π‡•Å‡§è ‡§π‡•à‡§Ç ‡§≤‡•á‡§ï‡§ø‡§® ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§ê‡§™ ‡§ï‡•ã ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§ö‡§≤‡§æ‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à; `‡§ï‡•ç‡§µ‡§ø‡§ú‡§º-‡§ê‡§™` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§è ‡§ó‡§è ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂‡•ã‡§Ç ‡§ï‡§æ ‡§™‡§æ‡§≤‡§® ‡§ï‡§∞‡•á‡§Ç‡•§
+
+| ‡§™‡§æ‡§† ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ |                             ‡§µ‡§ø‡§∑‡§Ø                             |                  ‡§™‡§æ‡§† ‡§∏‡§Æ‡•Ç‡§π‡§®                  | ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§Æ‡§ï‡§∏‡§¶                                                                                                            |                                                             ‡§ú‡•Å‡§°‡§º‡§æ ‡§π‡•Å‡§Ü ‡§™‡§æ‡§†                                                              |                        ‡§≤‡•á‡§ñ‡§ï                        |
+| :-----------: | :------------------------------------------------------------: | :-------------------------------------------------: | ------------------------------------------------------------------------------------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------: | :--------------------------------------------------: |
+| 01 | ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§∞‡§ø‡§ö‡§Ø | [‡§™‡§∞‡§ø‡§ö‡§Ø](../1-Introduction/translations/README.it.md)  | ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§™‡•Ä‡§õ‡•á ‡§ï‡•Ä ‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§ú‡§æ‡§®‡•á‡§Ç | [‡§™‡§æ‡§†](../1-Introduction/1-intro-to-ML/README.md)   | ‡§Æ‡•Å‡§π‡§Æ‡•ç‡§Æ‡§¶ |
+| 02 | ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§á‡§§‡§ø‡§π‡§æ‡§∏ | [‡§™‡§∞‡§ø‡§ö‡§Ø](../1-Introduction/translations/README.it.md)  | ‡§á‡§∏ ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Æ‡•á‡§Ç ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§®‡§ø‡§π‡§ø‡§§ ‡§á‡§§‡§ø‡§π‡§æ‡§∏ ‡§ï‡•ã ‡§ú‡§æ‡§®‡•á‡§Ç | [‡§™‡§æ‡§†](../1-Introduction/2-history-of-ML/README.md)   | ‡§ú‡•á‡§® ‡§î‡§∞ ‡§è‡§Æ‡•Ä |
+| 03 | ‡§®‡§ø‡§∑‡•ç‡§™‡§ï‡•ç‡§∑‡§§‡§æ ‡§î‡§∞ ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó | [‡§™‡§∞‡§ø‡§ö‡§Ø](../1-Introduction/translations/README.it.md)  | ‡§®‡§ø‡§∑‡•ç‡§™‡§ï‡•ç‡§∑‡§§‡§æ ‡§ï‡•á ‡§Ü‡§∏‡§™‡§æ‡§∏ ‡§ï‡•å‡§® ‡§∏‡•á ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§¶‡§æ‡§∞‡•ç‡§∂‡§®‡§ø‡§ï ‡§Æ‡•Å‡§¶‡•ç‡§¶‡•á ‡§π‡•à‡§Ç ‡§ú‡§ø‡§® ‡§™‡§∞ ‡§õ‡§æ‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§è‡§Æ‡§è‡§≤ ‡§Æ‡•â‡§°‡§≤ ‡§¨‡§®‡§æ‡§§‡•á ‡§î‡§∞ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§µ‡§ø‡§ö‡§æ‡§∞ ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è? | [‡§™‡§æ‡§†](../1-Introduction/3-fairness/README.md) | ‡§§‡•ã‡§Æ‡•ã‡§Æ‡•Ä |",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,829093189,jlooper,1450004,2022-03-17T13:04:12+00:00,2022-03-17T13:05:11+00:00,This is linking to the Italian translation,True,translations/README.hi.md,,"@@ -0,0 +1,127 @@
+[![GitHub license](https://img.shields.io/github/license/microsoft/ML-For-Beginners.svg)](https://github.com/microsoft/ML-For-Beginners/blob/master/LICENSE)
+[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/)
+[![GitHub issues](https://img.shields.io/github/issues/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/issues/)
+[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/pulls/)
+[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)
+
+[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/ML-For-Beginners.svg?style=social&label=Watch)](https://GitHub.com/microsoft/ML-For-Beginners/watchers/)
+[![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
+[![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
+
+# ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó - ‡§è‡§ï ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ
+
+> üåç‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§µ‡§ø‡§∂‡•ç‡§µ ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§§‡•á ‡§π‡•à‡§Ç üåç
+
+‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§ï‡•á ‡§è‡§ú‡§º‡•ç‡§Ø‡•ã‡§∞ ‡§ï‡•ç‡§≤‡§æ‡§â‡§° ‡§è‡§°‡§µ‡•ã‡§ï‡•á‡§ü‡•ç‡§∏ ‡§ï‡•ã 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§®‡§§‡§æ ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à **‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§® ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç, ‡§Ü‡§™   ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡•ç‡§ï‡§ø‡§ï‡§ø‡§ü-‡§≤‡§∞‡•ç‡§® ‡§ï‡•ã ‡§è‡§ï ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•Å‡§è ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Ü‡§ó‡§æ‡§Æ‡•Ä '‡§è‡§Ü‡§à ‡§´‡•â‡§∞ ‡§¨‡§ø‡§ó‡§ø‡§®‡§∞‡•ç‡§∏' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ó‡§π‡§® ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡•á ‡§¨‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ú‡§ø‡§∏‡•á ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä **‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡§ó‡•á‡•§ ‡§á‡§® ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•ã‡§°‡§º‡•á‡§Ç ['‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ](https://aka.ms/datascience-beginners), ‡§≠‡•Ä!
+
+‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§á‡§® ‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï‡•ã‡§Ç ‡§ï‡•ã ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§ï‡§à ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§™‡§∞ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§† ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§î‡§∞ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä, ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂, ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®, ‡§è‡§ï ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü, ‡§î‡§∞ ‡§¨‡§π‡•Å‡§§ ‡§ï‡•Å‡§õ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§®‡§è ‡§ï‡•å‡§∂‡§≤ ‡§ï‡•ã '‡§õ‡§°‡§º‡•Ä' ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§è‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à‡•§
+
+**‚úçÔ∏è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç** ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞, ‡§∏‡•ç‡§ü‡•Ä‡§´‡§® ‡§π‡•â‡§µ‡•á‡§≤, ‡§´‡•ç‡§∞‡§æ‡§Ç‡§∏‡•á‡§∏‡•ç‡§ï‡§æ ‡§≤‡§æ‡§ú‡§º‡•á‡§∞‡•Ä, ‡§ü‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§ï‡•à‡§∏‡•Ä ‡§¨‡•ç‡§∞‡•á‡§µ‡§ø‡§Ø‡•Ç, ‡§¶‡§ø‡§Æ‡§ø‡§§‡•ç‡§∞‡•Ä ‡§∏‡•ã‡§∂‡§®‡§ø‡§ï‡•ã‡§µ, ‡§ï‡•ç‡§∞‡§ø‡§∏ ‡§®‡•ã‡§∞‡§ø‡§Ç‡§ó, ‡§Ö‡§®‡§ø‡§∞‡•ç‡§¨‡§æ‡§® ‡§Æ‡•Å‡§ñ‡§∞‡•ç‡§ú‡•Ä, ‡§ì‡§∞‡§®‡•á‡§≤‡§æ ‡§Ö‡§≤‡•ç‡§ü‡•Å‡§®‡§ø‡§Ø‡§® ‡§î‡§∞ ‡§è‡§Æ‡•Ä ‡§¨‡•â‡§Ø‡§° ‡§ï‡•ã ‡§π‡§æ‡§∞‡•ç‡§¶‡§ø‡§ï ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§
+
+**üé® ‡§π‡§Æ‡§æ‡§∞‡•á ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§æ‡§∞‡•ã‡§Ç** ‡§§‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§¶‡§æ‡§∏‡§æ‡§®‡•Ä ‡§Æ‡§¶‡§ø‡§™‡§≤‡•ç‡§≤‡•Ä ‡§î‡§∞ ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞ ‡§ï‡•ã ‡§≠‡•Ä ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶
+
+**üôè ‡§π‡§Æ‡§æ‡§∞‡•á Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç, ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§ï‡•ã‡§Ç ‡§î‡§∞ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®‡§ï‡§∞‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶**, ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∞‡§ø‡§∑‡§ø‡§§ ‡§°‡§æ‡§ó‡§≤‡•Ä, ‡§Æ‡•Å‡§π‡§Æ‡•ç‡§Æ‡§¶ ‡§∏‡§æ‡§ï‡§ø‡§¨ ‡§ñ‡§æ‡§® ‡§á‡§®‡§æ‡§®, ‡§∞‡•ã‡§π‡§® ‡§∞‡§æ‡§ú, ‡§Ö‡§≤‡•á‡§ï‡•ç‡§ú‡•á‡§Ç‡§°‡•ç‡§∞‡•Ç ‡§™‡•á‡§ü‡•ç‡§∞‡•á‡§∏‡•ç‡§ï‡•Å, ‡§Ö‡§≠‡§ø‡§∑‡•á‡§ï ‡§ú‡§æ‡§Ø‡§∏‡§µ‡§æ‡§≤, ‡§®‡§µ‡§∞‡•Ä‡§® ‡§§‡§¨‡§∏‡•ç‡§∏‡•Å‡§Æ, ‡§á‡§ì‡§® ‡§∏‡§Æ‡•Å‡§á‡§≤‡§æ, ‡§î‡§∞ ‡§∏‡•ç‡§®‡§ø‡§ó‡•ç‡§ß‡§æ ‡§Ö‡§ó‡•ç‡§∞‡§µ‡§æ‡§≤
+
+**ü§© ‡§π‡§Æ‡§æ‡§∞‡•á R ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§è‡§∞‡§ø‡§ï ‡§µ‡§Ç‡§ú‡§æ‡§â ‡§ï‡§æ ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§Ü‡§≠‡§æ‡§∞!**
+
+---
+
+# ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡§æ
+
+**‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä**, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∞‡•á‡§™‡•ã ‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§ï‡•á ‡§ó‡§ø‡§ü‡§π‡§¨ ‡§ñ‡§æ‡§§‡•á ‡§Æ‡•á‡§Ç ‡§´‡•ã‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§Ø‡§æ ‡§∏‡§Æ‡•Ç‡§π ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç:
+
+- ‡§™‡•ç‡§∞‡•Ä-‡§≤‡•á‡§ï‡•ç‡§ö‡§∞ ‡§ï‡•ç‡§µ‡§ø‡§ú ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§™‡§¢‡§º‡•á‡§Ç ‡§î‡§∞ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§ú‡•ç‡§û‡§æ‡§® ‡§ú‡§æ‡§Ç‡§ö ‡§™‡§∞ ‡§∞‡•Å‡§ï‡•á‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§ø‡§Ç‡§¨‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§ï‡•ã‡§° ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§ú‡§æ‡§Ø ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§ï‡§∞ ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç; ‡§π‡§æ‡§≤‡§æ‡§Ç‡§ï‡§ø ‡§µ‡§π ‡§ï‡•ã‡§° ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§â‡§®‡•ç‡§Æ‡•Å‡§ñ ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç `/ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§≤‡•á‡§Ç‡•§
+- ‡§ö‡•Å‡§®‡•å‡§§‡•Ä ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§è‡§ï ‡§™‡§æ‡§† ‡§∏‡§Æ‡•Ç‡§π ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶, [‡§ö‡§∞‡•ç‡§ö‡§æ ‡§¨‡•ã‡§∞‡•ç‡§°](https://github.com/microsoft/ML-For-Beginners/discussions) ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å ‡§î‡§∞ ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ PAT ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§≠‡§∞‡§ï‡§∞ ""‡§ú‡§º‡•ã‡§∞ ‡§∏‡•á ‡§∏‡•Ä‡§ñ‡•á‡§Ç""‡•§ ‡§è‡§ï '‡§™‡•Ä‡§è‡§ü‡•Ä' ‡§è‡§ï ‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Ü‡§ï‡§≤‡§® ‡§â‡§™‡§ï‡§∞‡§£ ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§π‡•à ‡§ú‡§ø‡§∏‡•á ‡§Ü‡§™ ‡§Ö‡§™‡§®‡•á ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≠‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§Ö‡§®‡•ç‡§Ø ‡§™‡•Ä‡§è‡§ü‡•Ä ‡§™‡§∞ ‡§≠‡•Ä ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§π‡§Æ ‡§è‡§ï ‡§∏‡§æ‡§• ‡§∏‡•Ä‡§ñ ‡§∏‡§ï‡•á‡§Ç‡•§
+
+> ‡§Ü‡§ó‡•á ‡§ï‡•á ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§π‡§Æ ‡§á‡§® [‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§≤‡§∞‡•ç‡§®](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa) ‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§î‡§∞ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§∞‡§æ‡§∏‡•ç‡§§‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§∏‡§∞‡§£ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§.
+
+**‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï**, ‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡§æ‡§∏ [‡§ï‡•Å‡§õ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç](../for-teachers.md) ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç‡•§
+---
+
+## ‡§ü‡•Ä‡§Æ ‡§∏‡•á ‡§Æ‡§ø‡§≤‡•ã
+
+[![‡§™‡•ç‡§∞‡•ã‡§Æ‡•ã ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã](../ml-for-beginners.png)](https://youtu.be/Tj1XWrDSYJU ""Promo video"")
+
+**Gif by** [‡§Æ‡•ã‡§π‡§ø‡§§ ‡§ú‡•à‡§∏‡§≤](https://linkedin.com/in/mohitjaisal)
+
+> üé• ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ ‡§î‡§∞ ‡§á‡§∏‡•á ‡§¨‡§®‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§≤‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ä‡§™‡§∞ ‡§ï‡•Ä ‡§õ‡§µ‡§ø ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç!
+---
+
+## ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞
+
+‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§π‡§Æ‡§®‡•á ‡§¶‡•ã ‡§∂‡•à‡§ï‡•ç‡§∑‡§£‡§ø‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß‡§æ‡§Ç‡§§‡•ã‡§Ç ‡§ï‡•ã ‡§ö‡•Å‡§®‡§æ ‡§π‡•à: ‡§Ø‡§π ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§®‡§æ ‡§ï‡§ø ‡§Ø‡§π ‡§µ‡•ç‡§Ø‡§æ‡§µ‡§π‡§æ‡§∞‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á **‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§** ‡§π‡•à ‡§î‡§∞ ‡§á‡§∏‡§Æ‡•á‡§Ç **‡§≤‡§ó‡§æ‡§§‡§æ‡§∞ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä** ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§® **‡§•‡•Ä‡§Æ** ‡§π‡•à ‡§ú‡•ã ‡§á‡§∏‡•á ‡§è‡§ï‡§§‡§æ ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§
+
+‡§Ø‡§π ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§ï‡•á ‡§ï‡§ø ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§Ç‡§∞‡•á‡§ñ‡§ø‡§§ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à, ‡§õ‡§æ‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ç‡§∞‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡•ã ‡§î‡§∞ ‡§Ö‡§ß‡§ø‡§ï ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§™‡•ç‡§∞‡§§‡§ø‡§ß‡§æ‡§∞‡§£ ‡§ï‡•ã ‡§¨‡§¢‡§º‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§ï‡§ï‡•ç‡§∑‡§æ ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§è‡§ï ‡§ï‡§Æ-‡§¶‡§æ‡§Ç‡§µ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§ï‡•á ‡§µ‡§ø‡§∑‡§Ø ‡§ï‡•ã ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§á‡§∞‡§æ‡§¶‡•á ‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§ß‡§æ‡§∞‡§ø‡§§ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à, ‡§ú‡§¨‡§ï‡§ø ‡§ï‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§¶‡•Ç‡§∏‡§∞‡•Ä ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§Ü‡§ó‡•á ‡§™‡•ç‡§∞‡§§‡§ø‡§ß‡§æ‡§∞‡§£ ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•ã ‡§≤‡§ö‡•Ä‡§≤‡§æ ‡§î‡§∞ ‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§•‡§æ ‡§î‡§∞ ‡§á‡§∏‡•á ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§Ø‡§æ ‡§Ü‡§Ç‡§∂‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§≤‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§ ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç ‡§õ‡•ã‡§ü‡•Ä ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡§Ç ‡§î‡§∞ 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π ‡§ï‡•á ‡§ö‡§ï‡•ç‡§∞ ‡§ï‡•á ‡§Ö‡§Ç‡§§ ‡§§‡§ï ‡§§‡•á‡§ú‡•Ä ‡§∏‡•á ‡§ú‡§ü‡§ø‡§≤ ‡§π‡•ã ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§è‡§Æ‡§è‡§≤ ‡§ï‡•á ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï-‡§µ‡§ø‡§∂‡•ç‡§µ ‡§Ö‡§®‡•Å‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡•ã‡§Ç ‡§™‡§∞ ‡§è‡§ï ‡§™‡•ã‡§∏‡•ç‡§ü‡§∏‡•ç‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§ü ‡§≠‡•Ä ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§ï‡•ç‡§∞‡•á‡§°‡§ø‡§ü ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ ‡§ö‡§∞‡•ç‡§ö‡§æ ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
+
+> ‡§π‡§Æ‡§æ‡§∞‡•Ä [‡§Ü‡§ö‡§æ‡§∞ ‡§∏‡§Ç‡§π‡§ø‡§§‡§æ](../CODE_OF_CONDUCT.md), [‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®](../CONTRIBUTING.md), ‡§î‡§∞ [‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶](../TRANSLATIONS.md) ‡§¶‡§ø‡§∂‡§æ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂ ‡§ñ‡•ã‡§ú‡•á‡§Ç‡•§ ‡§π‡§Æ ‡§Ü‡§™‡§ï‡•Ä ‡§∞‡§ö‡§®‡§æ‡§§‡•ç‡§Æ‡§ï ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç!
+
+## ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç:
+
+- ‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï ‡§∏‡•ç‡§ï‡•á‡§ö‡§®‡•ã‡§ü
+- ‡§µ‡•à‡§ï‡§≤‡•ç‡§™‡§ø‡§ï ‡§™‡•Ç‡§∞‡§ï ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã
+- ‡§™‡•Ç‡§∞‡•ç‡§µ ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§µ‡§æ‡§∞‡•ç‡§Æ‡§Ö‡§™ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä
+- ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§™‡§æ‡§†
+- ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§§‡§∞‡•Ä‡§ï‡•á ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ö‡§∞‡§£-‡§¶‡§∞-‡§ö‡§∞‡§£ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§ø‡§ï‡§æ
+- ‡§ú‡•ç‡§û‡§æ‡§® ‡§ú‡§æ‡§Ç‡§ö
+- ‡§è‡§ï ‡§ö‡•Å‡§®‡•å‡§§‡•Ä
+- ‡§™‡•Ç‡§∞‡§ï ‡§™‡§†‡§®
+- ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§≠‡§æ‡§∞
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä
+
+> **‡§≠‡§æ‡§∑‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§®‡•ã‡§ü**: ‡§Ø‡•á ‡§™‡§æ‡§† ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§™‡§æ‡§Ø‡§•‡§® ‡§Æ‡•á‡§Ç ‡§≤‡§ø‡§ñ‡•á ‡§ó‡§è ‡§π‡•à‡§Ç, ‡§≤‡•á‡§ï‡§ø‡§® ‡§ï‡§à ‡§Ü‡§∞ ‡§Æ‡•á‡§Ç ‡§≠‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡§Ç‡•§ ‡§è‡§ï ‡§Ü‡§∞ ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, `/ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§è‡§Ç ‡§î‡§∞ ‡§Ü‡§∞ ‡§™‡§æ‡§† ‡§¶‡•á‡§ñ‡•á‡§Ç‡•§ ‡§â‡§®‡§Æ‡•á‡§Ç ‡§è‡§ï .rmd ‡§è‡§ï‡•ç‡§∏‡§ü‡•á‡§Ç‡§∂‡§® ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï **R ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§®** ‡§´‡§º‡§æ‡§á‡§≤ ‡§ï‡§æ ‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø‡§§‡•ç‡§µ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ú‡§ø‡§∏‡•á ‡§ï‡•á‡§µ‡§≤ `‡§ï‡•ã‡§° ‡§ö‡§Ç‡§ï‡•ç‡§∏` (‡§Ü‡§∞ ‡§Ø‡§æ ‡§Ö‡§®‡•ç‡§Ø ‡§≠‡§æ‡§∑‡§æ‡§ì‡§Ç ‡§ï‡•á) ‡§ï‡•á ‡§è‡§Æ‡•ç‡§¨‡•á‡§°‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§™‡§∞‡§ø‡§≠‡§æ‡§∑‡§ø‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§è‡§ï `‡§µ‡§æ‡§à‡§è‡§è‡§Æ‡§è‡§≤ ‡§π‡•á‡§°‡§∞` (‡§ú‡•ã ‡§á‡§∏ ‡§§‡§∞‡§π ‡§ï‡•á ‡§Ü‡§â‡§ü‡§™‡•Å‡§ü ‡§ï‡•ã ‡§™‡•ç‡§∞‡§æ‡§∞‡•Ç‡§™‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à) ‡§™‡•Ä‡§°‡•Ä‡§è‡§´ ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç) ‡§è‡§ï `‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡§º` ‡§Æ‡•á‡§Ç‡•§ ‡§ú‡•à‡§∏‡•á, ‡§Ø‡§π ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§Ö‡§®‡•Å‡§ï‡§∞‡§£‡•Ä‡§Ø ‡§∏‡§Ç‡§≤‡•á‡§ñ‡§® ‡§¢‡§æ‡§Ç‡§ö‡•á ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§Ø‡§π ‡§Ü‡§™‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§ï‡•ã‡§°, ‡§á‡§∏‡§ï‡•á ‡§Ü‡§â‡§ü‡§™‡•Å‡§ü ‡§î‡§∞ ‡§Ü‡§™‡§ï‡•á ‡§µ‡§ø‡§ö‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§Æ‡•á‡§Ç ‡§≤‡§ø‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§ï‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§∏‡§Ç‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§ ‡§á‡§∏‡§ï‡•á ‡§Ö‡§≤‡§æ‡§µ‡§æ, ‡§Ü‡§∞ ‡§Æ‡§æ‡§∞‡•ç‡§ï‡§°‡§æ‡§â‡§® ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Ä‡§°‡•Ä‡§è‡§´, ‡§è‡§ö‡§ü‡•Ä‡§è‡§Æ‡§è‡§≤ ‡§Ø‡§æ ‡§µ‡§∞‡•ç‡§° ‡§ú‡•à‡§∏‡•á ‡§Ü‡§â‡§ü‡§™‡•Å‡§ü ‡§∏‡•ç‡§µ‡§∞‡•Ç‡§™‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡•Å‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à‡•§
+
+> **‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§®‡•ã‡§ü**: ‡§∏‡§≠‡•Ä ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç [‡§á‡§∏ ‡§ê‡§™ ‡§Æ‡•á‡§Ç](https://white-water-09ec41f0f.azurestaticapps.net/), ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§§‡•Ä‡§® ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§Ç ‡§ï‡•á ‡§ï‡•Å‡§≤ 52 ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§ï‡•á ‡§≤‡§ø‡§è‡•§ ‡§µ‡•á ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≠‡•Ä‡§§‡§∞ ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á ‡§π‡•Å‡§è ‡§π‡•à‡§Ç ‡§≤‡•á‡§ï‡§ø‡§® ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§ê‡§™ ‡§ï‡•ã ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§ö‡§≤‡§æ‡§Ø‡§æ ‡§ú‡§æ ‡§∏‡§ï‡§§‡§æ ‡§π‡•à; `‡§ï‡•ç‡§µ‡§ø‡§ú‡§º-‡§ê‡§™` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§è ‡§ó‡§è ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂‡•ã‡§Ç ‡§ï‡§æ ‡§™‡§æ‡§≤‡§® ‡§ï‡§∞‡•á‡§Ç‡•§
+
+| ‡§™‡§æ‡§† ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ |                             ‡§µ‡§ø‡§∑‡§Ø                             |                  ‡§™‡§æ‡§† ‡§∏‡§Æ‡•Ç‡§π‡§®                  | ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§Æ‡§ï‡§∏‡§¶                                                                                                            |                                                             ‡§ú‡•Å‡§°‡§º‡§æ ‡§π‡•Å‡§Ü ‡§™‡§æ‡§†                                                              |                        ‡§≤‡•á‡§ñ‡§ï                        |
+| :-----------: | :------------------------------------------------------------: | :-------------------------------------------------: | ------------------------------------------------------------------------------------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------------------: | :--------------------------------------------------: |
+| 01 | ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§∞‡§ø‡§ö‡§Ø | [‡§™‡§∞‡§ø‡§ö‡§Ø](../1-Introduction/translations/README.it.md)  | ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§™‡•Ä‡§õ‡•á ‡§ï‡•Ä ‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§ú‡§æ‡§®‡•á‡§Ç | [‡§™‡§æ‡§†](../1-Introduction/1-intro-to-ML/README.md)   | ‡§Æ‡•Å‡§π‡§Æ‡•ç‡§Æ‡§¶ |",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,874488054,829094136,jlooper,1450004,2022-03-17T13:05:02+00:00,2022-03-17T13:05:11+00:00,This should link to an animated gif,True,translations/README.hi.md,,"@@ -0,0 +1,127 @@
+[![GitHub license](https://img.shields.io/github/license/microsoft/ML-For-Beginners.svg)](https://github.com/microsoft/ML-For-Beginners/blob/master/LICENSE)
+[![GitHub contributors](https://img.shields.io/github/contributors/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/graphs/contributors/)
+[![GitHub issues](https://img.shields.io/github/issues/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/issues/)
+[![GitHub pull-requests](https://img.shields.io/github/issues-pr/microsoft/ML-For-Beginners.svg)](https://GitHub.com/microsoft/ML-For-Beginners/pulls/)
+[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com)
+
+[![GitHub watchers](https://img.shields.io/github/watchers/microsoft/ML-For-Beginners.svg?style=social&label=Watch)](https://GitHub.com/microsoft/ML-For-Beginners/watchers/)
+[![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
+[![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
+
+# ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó - ‡§è‡§ï ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ
+
+> üåç‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§µ‡§ø‡§∂‡•ç‡§µ ‡§∏‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§§‡•á ‡§π‡•à‡§Ç üåç
+
+‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§ï‡•á ‡§è‡§ú‡§º‡•ç‡§Ø‡•ã‡§∞ ‡§ï‡•ç‡§≤‡§æ‡§â‡§° ‡§è‡§°‡§µ‡•ã‡§ï‡•á‡§ü‡•ç‡§∏ ‡§ï‡•ã 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§®‡§§‡§æ ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à **‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç 12-‡§∏‡§™‡•ç‡§§‡§æ‡§π, 26-‡§™‡§æ‡§† ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡•Ä ‡§™‡•á‡§∂‡§ï‡§∂ ‡§ï‡§∞‡§ï‡•á ‡§™‡•ç‡§∞‡§∏‡§®‡•ç‡§® ‡§π‡•à‡§Ç‡•§ ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç, ‡§Ü‡§™   ‡§™‡•ç‡§∞‡§æ‡§•‡§Æ‡§ø‡§ï ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∏‡•ç‡§ï‡§ø‡§ï‡§ø‡§ü-‡§≤‡§∞‡•ç‡§® ‡§ï‡•ã ‡§è‡§ï ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§§‡•á ‡§π‡•Å‡§è ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§Ü‡§ó‡§æ‡§Æ‡•Ä '‡§è‡§Ü‡§à ‡§´‡•â‡§∞ ‡§¨‡§ø‡§ó‡§ø‡§®‡§∞‡•ç‡§∏' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§ó‡§π‡§® ‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡•á ‡§¨‡§ö‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ú‡§ø‡§∏‡•á ‡§ï‡§≠‡•Ä-‡§ï‡§≠‡•Ä **‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§Æ‡§∂‡•Ä‡§® ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó** ‡§ï‡§π‡§æ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à, ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡•á‡§Ç‡§ó‡•á‡•§ ‡§á‡§® ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§ú‡•ã‡§°‡§º‡•á‡§Ç ['‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡•á‡§ü‡§æ ‡§µ‡§ø‡§ú‡•ç‡§û‡§æ‡§®' ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ](https://aka.ms/datascience-beginners), ‡§≠‡•Ä!
+
+‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§π‡§Æ ‡§á‡§® ‡§ï‡•ç‡§≤‡§æ‡§∏‡§ø‡§ï ‡§§‡§ï‡§®‡•Ä‡§ï‡•ã‡§Ç ‡§ï‡•ã ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§ï‡§à ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§°‡•á‡§ü‡§æ ‡§™‡§∞ ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç ‡§™‡§æ‡§† ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§î‡§∞ ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä, ‡§™‡§æ‡§† ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂, ‡§è‡§ï ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®, ‡§è‡§ï ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü, ‡§î‡§∞ ‡§¨‡§π‡•Å‡§§ ‡§ï‡•Å‡§õ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ‡§∂‡§æ‡§∏‡•ç‡§§‡•ç‡§∞ ‡§Ü‡§™‡§ï‡•ã ‡§®‡§ø‡§∞‡•ç‡§Æ‡§æ‡§£ ‡§ï‡§∞‡§§‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•Ä ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§¶‡•á‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§®‡§è ‡§ï‡•å‡§∂‡§≤ ‡§ï‡•ã '‡§õ‡§°‡§º‡•Ä' ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§è‡§ï ‡§∏‡§ø‡§¶‡•ç‡§ß ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à‡•§
+
+**‚úçÔ∏è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç** ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞, ‡§∏‡•ç‡§ü‡•Ä‡§´‡§® ‡§π‡•â‡§µ‡•á‡§≤, ‡§´‡•ç‡§∞‡§æ‡§Ç‡§∏‡•á‡§∏‡•ç‡§ï‡§æ ‡§≤‡§æ‡§ú‡§º‡•á‡§∞‡•Ä, ‡§ü‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§ï‡•à‡§∏‡•Ä ‡§¨‡•ç‡§∞‡•á‡§µ‡§ø‡§Ø‡•Ç, ‡§¶‡§ø‡§Æ‡§ø‡§§‡•ç‡§∞‡•Ä ‡§∏‡•ã‡§∂‡§®‡§ø‡§ï‡•ã‡§µ, ‡§ï‡•ç‡§∞‡§ø‡§∏ ‡§®‡•ã‡§∞‡§ø‡§Ç‡§ó, ‡§Ö‡§®‡§ø‡§∞‡•ç‡§¨‡§æ‡§® ‡§Æ‡•Å‡§ñ‡§∞‡•ç‡§ú‡•Ä, ‡§ì‡§∞‡§®‡•á‡§≤‡§æ ‡§Ö‡§≤‡•ç‡§ü‡•Å‡§®‡§ø‡§Ø‡§® ‡§î‡§∞ ‡§è‡§Æ‡•Ä ‡§¨‡•â‡§Ø‡§° ‡§ï‡•ã ‡§π‡§æ‡§∞‡•ç‡§¶‡§ø‡§ï ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶‡•§
+
+**üé® ‡§π‡§Æ‡§æ‡§∞‡•á ‡§ö‡§ø‡§§‡•ç‡§∞‡§ï‡§æ‡§∞‡•ã‡§Ç** ‡§§‡•ã‡§Æ‡•ã‡§Æ‡•Ä ‡§á‡§Æ‡•Å‡§∞‡§æ, ‡§¶‡§æ‡§∏‡§æ‡§®‡•Ä ‡§Æ‡§¶‡§ø‡§™‡§≤‡•ç‡§≤‡•Ä ‡§î‡§∞ ‡§ú‡•á‡§® ‡§≤‡•Ç‡§™‡§∞ ‡§ï‡•ã ‡§≠‡•Ä ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶
+
+**üôè ‡§π‡§Æ‡§æ‡§∞‡•á Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§≤‡•á‡§ñ‡§ï‡•ã‡§Ç, ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§ï‡•ã‡§Ç ‡§î‡§∞ ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§Ø‡•ã‡§ó‡§¶‡§æ‡§®‡§ï‡§∞‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶**, ‡§µ‡§ø‡§∂‡•á‡§∑ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§∞‡§ø‡§∑‡§ø‡§§ ‡§°‡§æ‡§ó‡§≤‡•Ä, ‡§Æ‡•Å‡§π‡§Æ‡•ç‡§Æ‡§¶ ‡§∏‡§æ‡§ï‡§ø‡§¨ ‡§ñ‡§æ‡§® ‡§á‡§®‡§æ‡§®, ‡§∞‡•ã‡§π‡§® ‡§∞‡§æ‡§ú, ‡§Ö‡§≤‡•á‡§ï‡•ç‡§ú‡•á‡§Ç‡§°‡•ç‡§∞‡•Ç ‡§™‡•á‡§ü‡•ç‡§∞‡•á‡§∏‡•ç‡§ï‡•Å, ‡§Ö‡§≠‡§ø‡§∑‡•á‡§ï ‡§ú‡§æ‡§Ø‡§∏‡§µ‡§æ‡§≤, ‡§®‡§µ‡§∞‡•Ä‡§® ‡§§‡§¨‡§∏‡•ç‡§∏‡•Å‡§Æ, ‡§á‡§ì‡§® ‡§∏‡§Æ‡•Å‡§á‡§≤‡§æ, ‡§î‡§∞ ‡§∏‡•ç‡§®‡§ø‡§ó‡•ç‡§ß‡§æ ‡§Ö‡§ó‡•ç‡§∞‡§µ‡§æ‡§≤
+
+**ü§© ‡§π‡§Æ‡§æ‡§∞‡•á R ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Microsoft ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∞‡§æ‡§ú‡§¶‡•Ç‡§§ ‡§è‡§∞‡§ø‡§ï ‡§µ‡§Ç‡§ú‡§æ‡§â ‡§ï‡§æ ‡§Ö‡§§‡§ø‡§∞‡§ø‡§ï‡•ç‡§§ ‡§Ü‡§≠‡§æ‡§∞!**
+
+---
+
+# ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡§æ
+
+**‡§µ‡§ø‡§¶‡•ç‡§Ø‡§æ‡§∞‡•ç‡§•‡•Ä**, ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∞‡•á‡§™‡•ã ‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§ï‡•á ‡§ó‡§ø‡§ü‡§π‡§¨ ‡§ñ‡§æ‡§§‡•á ‡§Æ‡•á‡§Ç ‡§´‡•ã‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§∏‡•ç‡§µ‡§Ø‡§Ç ‡§Ø‡§æ ‡§∏‡§Æ‡•Ç‡§π ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç:
+
+- ‡§™‡•ç‡§∞‡•Ä-‡§≤‡•á‡§ï‡•ç‡§ö‡§∞ ‡§ï‡•ç‡§µ‡§ø‡§ú ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§™‡§¢‡§º‡•á‡§Ç ‡§î‡§∞ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§ú‡•ç‡§û‡§æ‡§® ‡§ú‡§æ‡§Ç‡§ö ‡§™‡§∞ ‡§∞‡•Å‡§ï‡•á‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§ø‡§Ç‡§¨‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§ï‡•ã‡§° ‡§ö‡§≤‡§æ‡§®‡•á ‡§ï‡•á ‡§¨‡§ú‡§æ‡§Ø ‡§™‡§æ‡§†‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§ù‡§ï‡§∞ ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç; ‡§π‡§æ‡§≤‡§æ‡§Ç‡§ï‡§ø ‡§µ‡§π ‡§ï‡•ã‡§° ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§™‡§∞‡§ø‡§Ø‡•ã‡§ú‡§®‡§æ-‡§â‡§®‡•ç‡§Æ‡•Å‡§ñ ‡§™‡§æ‡§† ‡§Æ‡•á‡§Ç `/ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§®` ‡§´‡§º‡•ã‡§≤‡•ç‡§°‡§∞ ‡§Æ‡•á‡§Ç ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à‡•§
+- ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ‡§® ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§§‡•ç‡§§‡§∞‡•Ä ‡§≤‡•á‡§Ç‡•§
+- ‡§ö‡•Å‡§®‡•å‡§§‡•Ä ‡§ï‡•ã ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§Ö‡§∏‡§æ‡§á‡§®‡§Æ‡•á‡§Ç‡§ü ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§
+- ‡§è‡§ï ‡§™‡§æ‡§† ‡§∏‡§Æ‡•Ç‡§π ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶, [‡§ö‡§∞‡•ç‡§ö‡§æ ‡§¨‡•ã‡§∞‡•ç‡§°](https://github.com/microsoft/ML-For-Beginners/discussions) ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Å ‡§î‡§∞ ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ PAT ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§≠‡§∞‡§ï‡§∞ ""‡§ú‡§º‡•ã‡§∞ ‡§∏‡•á ‡§∏‡•Ä‡§ñ‡•á‡§Ç""‡•§ ‡§è‡§ï '‡§™‡•Ä‡§è‡§ü‡•Ä' ‡§è‡§ï ‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§Ü‡§ï‡§≤‡§® ‡§â‡§™‡§ï‡§∞‡§£ ‡§π‡•à ‡§ú‡•ã ‡§è‡§ï ‡§∞‡•Ç‡§¨‡•ç‡§∞‡§ø‡§ï ‡§π‡•à ‡§ú‡§ø‡§∏‡•á ‡§Ü‡§™ ‡§Ö‡§™‡§®‡•á ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•ã ‡§Ü‡§ó‡•á ‡§¨‡§¢‡§º‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§≠‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§™ ‡§Ö‡§®‡•ç‡§Ø ‡§™‡•Ä‡§è‡§ü‡•Ä ‡§™‡§∞ ‡§≠‡•Ä ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§π‡§Æ ‡§è‡§ï ‡§∏‡§æ‡§• ‡§∏‡•Ä‡§ñ ‡§∏‡§ï‡•á‡§Ç‡•§
+
+> ‡§Ü‡§ó‡•á ‡§ï‡•á ‡§Ö‡§ß‡•ç‡§Ø‡§Ø‡§® ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§π‡§Æ ‡§á‡§® [‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§∏‡•â‡§´‡•ç‡§ü ‡§≤‡§∞‡•ç‡§®](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa) ‡§Æ‡•â‡§°‡•ç‡§Ø‡•Ç‡§≤ ‡§î‡§∞ ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§∞‡§æ‡§∏‡•ç‡§§‡•ã‡§Ç ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§∏‡§∞‡§£ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§.
+
+**‡§∂‡§ø‡§ï‡•ç‡§∑‡§ï**, ‡§π‡§Æ‡§æ‡§∞‡•á ‡§™‡§æ‡§∏ [‡§ï‡•Å‡§õ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç](../for-teachers.md) ‡§á‡§∏ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç‡•§
+---
+
+## ‡§ü‡•Ä‡§Æ ‡§∏‡•á ‡§Æ‡§ø‡§≤‡•ã
+
+[![‡§™‡•ç‡§∞‡•ã‡§Æ‡•ã ‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã](../ml-for-beginners.png)](https://youtu.be/Tj1XWrDSYJU ""Promo video"")",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813327603,HugoCL,39707889,2022-02-23T21:20:21+00:00,2022-02-23T21:20:21+00:00,"Missing translation, it can be translated to ""Se ver√° as√≠:""",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813329085,HugoCL,39707889,2022-02-23T21:22:28+00:00,2022-02-23T21:30:52+00:00,"Small typo, should be ""¬°Descarga esta hoja de trucos, impr√≠mela y cu√©lgala en tu pared!""",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813331547,HugoCL,39707889,2022-02-23T21:25:46+00:00,2022-02-23T21:30:34+00:00,"Small typo, should be ""Un **√°rbol** de decisi√≥n podr√≠a funcionar, o la regresi√≥n log√≠stica para datos multiclase.""",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813333245,HugoCL,39707889,2022-02-23T21:28:03+00:00,2022-02-23T21:30:23+00:00,"To sound more natural, it can say ""¬øPuedes explicar por qu√© el modelo est√° muy seguro **de que** esta es una cocina India?"" ",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813334275,HugoCL,39707889,2022-02-23T21:29:35+00:00,2022-02-23T21:29:36+00:00,"I think it can be ""Indaga un poco m√°s en las **matem√°ticas** detr√°s de la regresi√≥n log√≠stica en...""",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813342081,hereje,3022824,2022-02-23T21:39:41+00:00,2022-02-23T21:39:41+00:00,Thanks!,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813343806,HugoCL,39707889,2022-02-23T21:41:24+00:00,2022-02-23T21:41:25+00:00,Thanks to you Angel!,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813344451,hereje,3022824,2022-02-23T21:42:09+00:00,2022-02-23T21:42:09+00:00,Done!,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813344648,hereje,3022824,2022-02-23T21:42:22+00:00,2022-02-23T21:42:22+00:00,Done!,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813344932,hereje,3022824,2022-02-23T21:42:39+00:00,2022-02-23T21:42:39+00:00,Thanks for your help!,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813327603,HugoCL,39707889,2022-02-23T21:20:21+00:00,2022-02-23T21:20:21+00:00,"Missing translation, it can be translated to ""Se ver√° as√≠:""",True,4-Classification/2-Classifiers-1/translations/README.es.md,,"@@ -0,0 +1,245 @@
+# Clasificadores de cocina 1
+
+En esta lecci√≥n, usar√°s el conjunto de datos que guardaste en la √∫ltima lecci√≥n llena de equilibrio, datos limpios todo sobre cocinas.
+
+Usar√°s este conjunto de datos con una variedad de clasificadores para _predecir una cocina nacional dada basado en un grupo de ingredientes_. Mientras lo haces, aprender√°s m√°s acerca de algunas formas en que los algoritmos pueden ser aprovechados para las tareas de clasificaci√≥n.
+
+## [Examen previo a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/21/)
+
+# Preparaci√≥n
+
+Asumiendo que completaste la [Lecci√≥n 1](../../1-Introduction/translations/README.es.md), asegura que existe un archivo _cleaned_cuisines.csv_  en el directorio ra√≠z `/data` para estas cuatro lecciones.
+
+## Ejercicio - predice una cocina nacional
+
+1. Trabaja en el directorio _notebook.ipynb_ de la lecci√≥n, importa ese archivo junto con la biblioteca Pandas:
+
+    ```python
+    import pandas as pd
+    cuisines_df = pd.read_csv(""../data/cleaned_cuisines.csv"")
+    cuisines_df.head()
+    ```
+
+    Los datos lucen as√≠:
+
+|     | Unnamed: 0 | cuisine | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood | yam | yeast | yogurt | zucchini |
+| --- | ---------- | ------- | ------ | -------- | ----- | ---------- | ----- | ------------ | ------- | -------- | --- | ------- | ----------- | ---------- | ----------------------- | ---- | ---- | --- | ----- | ------ | -------- |
+| 0   | 0          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 1   | 1          | indian  | 1      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 2   | 2          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 3   | 3          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 4   | 4          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 1      | 0        |
+  
+
+1. Ahora, importa varias bibliotecas m√°s:
+
+    ```python
+    from sklearn.linear_model import LogisticRegression
+    from sklearn.model_selection import train_test_split, cross_val_score
+    from sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report, precision_recall_curve
+    from sklearn.svm import SVC
+    import numpy as np
+    ```
+
+1. Divide las coordenadas X e Y en dos diferentes dataframes para entrenar. `cuisine` puede ser el dataframe de las etiquetas:
+
+    ```python
+    cuisines_label_df = cuisines_df['cuisine']
+    cuisines_label_df.head()
+    ```
+
+    It will look like this:",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813329085,HugoCL,39707889,2022-02-23T21:22:28+00:00,2022-02-23T21:30:52+00:00,"Small typo, should be ""¬°Descarga esta hoja de trucos, impr√≠mela y cu√©lgala en tu pared!""",True,4-Classification/2-Classifiers-1/translations/README.es.md,,"@@ -0,0 +1,245 @@
+# Clasificadores de cocina 1
+
+En esta lecci√≥n, usar√°s el conjunto de datos que guardaste en la √∫ltima lecci√≥n llena de equilibrio, datos limpios todo sobre cocinas.
+
+Usar√°s este conjunto de datos con una variedad de clasificadores para _predecir una cocina nacional dada basado en un grupo de ingredientes_. Mientras lo haces, aprender√°s m√°s acerca de algunas formas en que los algoritmos pueden ser aprovechados para las tareas de clasificaci√≥n.
+
+## [Examen previo a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/21/)
+
+# Preparaci√≥n
+
+Asumiendo que completaste la [Lecci√≥n 1](../../1-Introduction/translations/README.es.md), asegura que existe un archivo _cleaned_cuisines.csv_  en el directorio ra√≠z `/data` para estas cuatro lecciones.
+
+## Ejercicio - predice una cocina nacional
+
+1. Trabaja en el directorio _notebook.ipynb_ de la lecci√≥n, importa ese archivo junto con la biblioteca Pandas:
+
+    ```python
+    import pandas as pd
+    cuisines_df = pd.read_csv(""../data/cleaned_cuisines.csv"")
+    cuisines_df.head()
+    ```
+
+    Los datos lucen as√≠:
+
+|     | Unnamed: 0 | cuisine | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood | yam | yeast | yogurt | zucchini |
+| --- | ---------- | ------- | ------ | -------- | ----- | ---------- | ----- | ------------ | ------- | -------- | --- | ------- | ----------- | ---------- | ----------------------- | ---- | ---- | --- | ----- | ------ | -------- |
+| 0   | 0          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 1   | 1          | indian  | 1      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 2   | 2          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 3   | 3          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 4   | 4          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 1      | 0        |
+  
+
+1. Ahora, importa varias bibliotecas m√°s:
+
+    ```python
+    from sklearn.linear_model import LogisticRegression
+    from sklearn.model_selection import train_test_split, cross_val_score
+    from sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report, precision_recall_curve
+    from sklearn.svm import SVC
+    import numpy as np
+    ```
+
+1. Divide las coordenadas X e Y en dos diferentes dataframes para entrenar. `cuisine` puede ser el dataframe de las etiquetas:
+
+    ```python
+    cuisines_label_df = cuisines_df['cuisine']
+    cuisines_label_df.head()
+    ```
+
+    It will look like this:
+
+    ```output
+    0    indian
+    1    indian
+    2    indian
+    3    indian
+    4    indian
+    Name: cuisine, dtype: object
+    ```
+
+1. Elimina la columna `Unnamed: 0` y la columna `cuisine`, llamando a `drop()`. Guarda el resto de los datos como caracter√≠sticas entrenables:
+
+    ```python
+    cuisines_feature_df = cuisines_df.drop(['Unnamed: 0', 'cuisine'], axis=1)
+    cuisines_feature_df.head()
+    ```
+
+    Tus caracter√≠sticas lucen as√≠:
+
+|      | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | artemisia | artichoke |  ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood |  yam | yeast | yogurt | zucchini |
+| ---: | -----: | -------: | ----: | ---------: | ----: | -----------: | ------: | -------: | --------: | --------: | ---: | ------: | ----------: | ---------: | ----------------------: | ---: | ---: | ---: | ----: | -----: | -------: |
+|    0 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    1 |      1 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    2 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    3 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    4 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      1 |        0 | 0 |
+
+¬°Ahora ya est√°s listo para entrenar tu modelo!
+
+## Eligiendo tu clasificador
+
+Ahora que tus datos est√°n limpios y listos para entrenamiento, tienes que decidir qu√© algoritmo usar para hacer el trabajo.
+
+Scikit-learn agrupa clasificaciones bajo aprendizaje supervisado, y en esa categor√≠a encontrar√°s muchas formas de clasificar. [La variedad](https://scikit-learn.org/stable/supervised_learning.html) es bastante abrumadora a primera vista. Los siguientes m√©todos incluyen t√©cnicas de clasificaci√≥n:
+
+- Modelos lineales
+- M√°quinas de vectores de soporte
+- Descenso de gradiente estoc√°stico
+- Vecinos m√°s cercanos
+- Procesos Gaussianos
+- √Årboles de decisi√≥n
+- M√©todos de conjunto (clasificador de votos)
+- Algoritmos multiclase y multisalida (clasificaci√≥n multiclase y multietiqueta, clasificaci√≥n multiclase-multisalida)
+
+> Tambi√©n puedes usar [redes neuronales para clasificar los datos](https://scikit-learn.org/stable/modules/neural_networks_supervised.html#classification), pero eso est√° fuera del alcance de esta lecci√≥n.
+
+### ¬øQu√© clasificador usar?
+
+As√≠ que, ¬øqu√© clasificador deber√≠as elegir? A menudo, el ejecutar varios y buscar un buen resultado es una forma de probar. Scikit-lean ofrece una [comparaci√≥n lado a lado](https://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html) en un conjunto de datos creado, comparando KNeighbors, SVC two ways, GaussianProcessClassifier, DecisionTreeClassifier, RandomForestClassifier, MLPClassifier, AdaBoostClassifier, GaussianNB y QuadraticDiscrinationAnalysis, mostrando los resultados visualizados:
+
+![Comparaci√≥n de clasificadores](../images/comparison.png)
+> Gr√°ficos generados en la documentaci√≥n de Scikit-learn
+
+> AutoML resuelve este problema de forma pulcra al ejecutar estas comparaciones en la nube, permiti√©ndote elegir el mejor algoritmo para tus datos. Pru√©balo [aqu√≠](https://docs.microsoft.com/learn/modules/automate-model-selection-with-azure-automl/?WT.mc_id=academic-15963-cxa)
+
+### Un mejor enfoque
+
+Una mejor forma a estar adivinando, es seguir las ideas de esta [hoja de trucos de ML](https://docs.microsoft.com/azure/machine-learning/algorithm-cheat-sheet?WT.mc_id=academic-15963-cxa). Aqu√≠, descubrimos que, para nuestro problema multiclase, tenemos algunas opciones:
+
+![Hoja de trucos para problemas multiclase](../images/cheatsheet.png)
+> Una secci√≥n de la hoja de trucos de algoritmos de Microsoft, detallando opciones de clasificaci√≥n multiclase.
+
+‚úÖ !Descarga esta hoja de trucos, impr√≠mela y cu√©lgala en tu pared!",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813331547,HugoCL,39707889,2022-02-23T21:25:46+00:00,2022-02-23T21:30:34+00:00,"Small typo, should be ""Un **√°rbol** de decisi√≥n podr√≠a funcionar, o la regresi√≥n log√≠stica para datos multiclase.""",True,4-Classification/2-Classifiers-1/translations/README.es.md,,"@@ -0,0 +1,245 @@
+# Clasificadores de cocina 1
+
+En esta lecci√≥n, usar√°s el conjunto de datos que guardaste en la √∫ltima lecci√≥n llena de equilibrio, datos limpios todo sobre cocinas.
+
+Usar√°s este conjunto de datos con una variedad de clasificadores para _predecir una cocina nacional dada basado en un grupo de ingredientes_. Mientras lo haces, aprender√°s m√°s acerca de algunas formas en que los algoritmos pueden ser aprovechados para las tareas de clasificaci√≥n.
+
+## [Examen previo a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/21/)
+
+# Preparaci√≥n
+
+Asumiendo que completaste la [Lecci√≥n 1](../../1-Introduction/translations/README.es.md), asegura que existe un archivo _cleaned_cuisines.csv_  en el directorio ra√≠z `/data` para estas cuatro lecciones.
+
+## Ejercicio - predice una cocina nacional
+
+1. Trabaja en el directorio _notebook.ipynb_ de la lecci√≥n, importa ese archivo junto con la biblioteca Pandas:
+
+    ```python
+    import pandas as pd
+    cuisines_df = pd.read_csv(""../data/cleaned_cuisines.csv"")
+    cuisines_df.head()
+    ```
+
+    Los datos lucen as√≠:
+
+|     | Unnamed: 0 | cuisine | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood | yam | yeast | yogurt | zucchini |
+| --- | ---------- | ------- | ------ | -------- | ----- | ---------- | ----- | ------------ | ------- | -------- | --- | ------- | ----------- | ---------- | ----------------------- | ---- | ---- | --- | ----- | ------ | -------- |
+| 0   | 0          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 1   | 1          | indian  | 1      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 2   | 2          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 3   | 3          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 4   | 4          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 1      | 0        |
+  
+
+1. Ahora, importa varias bibliotecas m√°s:
+
+    ```python
+    from sklearn.linear_model import LogisticRegression
+    from sklearn.model_selection import train_test_split, cross_val_score
+    from sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report, precision_recall_curve
+    from sklearn.svm import SVC
+    import numpy as np
+    ```
+
+1. Divide las coordenadas X e Y en dos diferentes dataframes para entrenar. `cuisine` puede ser el dataframe de las etiquetas:
+
+    ```python
+    cuisines_label_df = cuisines_df['cuisine']
+    cuisines_label_df.head()
+    ```
+
+    It will look like this:
+
+    ```output
+    0    indian
+    1    indian
+    2    indian
+    3    indian
+    4    indian
+    Name: cuisine, dtype: object
+    ```
+
+1. Elimina la columna `Unnamed: 0` y la columna `cuisine`, llamando a `drop()`. Guarda el resto de los datos como caracter√≠sticas entrenables:
+
+    ```python
+    cuisines_feature_df = cuisines_df.drop(['Unnamed: 0', 'cuisine'], axis=1)
+    cuisines_feature_df.head()
+    ```
+
+    Tus caracter√≠sticas lucen as√≠:
+
+|      | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | artemisia | artichoke |  ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood |  yam | yeast | yogurt | zucchini |
+| ---: | -----: | -------: | ----: | ---------: | ----: | -----------: | ------: | -------: | --------: | --------: | ---: | ------: | ----------: | ---------: | ----------------------: | ---: | ---: | ---: | ----: | -----: | -------: |
+|    0 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    1 |      1 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    2 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    3 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    4 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      1 |        0 | 0 |
+
+¬°Ahora ya est√°s listo para entrenar tu modelo!
+
+## Eligiendo tu clasificador
+
+Ahora que tus datos est√°n limpios y listos para entrenamiento, tienes que decidir qu√© algoritmo usar para hacer el trabajo.
+
+Scikit-learn agrupa clasificaciones bajo aprendizaje supervisado, y en esa categor√≠a encontrar√°s muchas formas de clasificar. [La variedad](https://scikit-learn.org/stable/supervised_learning.html) es bastante abrumadora a primera vista. Los siguientes m√©todos incluyen t√©cnicas de clasificaci√≥n:
+
+- Modelos lineales
+- M√°quinas de vectores de soporte
+- Descenso de gradiente estoc√°stico
+- Vecinos m√°s cercanos
+- Procesos Gaussianos
+- √Årboles de decisi√≥n
+- M√©todos de conjunto (clasificador de votos)
+- Algoritmos multiclase y multisalida (clasificaci√≥n multiclase y multietiqueta, clasificaci√≥n multiclase-multisalida)
+
+> Tambi√©n puedes usar [redes neuronales para clasificar los datos](https://scikit-learn.org/stable/modules/neural_networks_supervised.html#classification), pero eso est√° fuera del alcance de esta lecci√≥n.
+
+### ¬øQu√© clasificador usar?
+
+As√≠ que, ¬øqu√© clasificador deber√≠as elegir? A menudo, el ejecutar varios y buscar un buen resultado es una forma de probar. Scikit-lean ofrece una [comparaci√≥n lado a lado](https://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html) en un conjunto de datos creado, comparando KNeighbors, SVC two ways, GaussianProcessClassifier, DecisionTreeClassifier, RandomForestClassifier, MLPClassifier, AdaBoostClassifier, GaussianNB y QuadraticDiscrinationAnalysis, mostrando los resultados visualizados:
+
+![Comparaci√≥n de clasificadores](../images/comparison.png)
+> Gr√°ficos generados en la documentaci√≥n de Scikit-learn
+
+> AutoML resuelve este problema de forma pulcra al ejecutar estas comparaciones en la nube, permiti√©ndote elegir el mejor algoritmo para tus datos. Pru√©balo [aqu√≠](https://docs.microsoft.com/learn/modules/automate-model-selection-with-azure-automl/?WT.mc_id=academic-15963-cxa)
+
+### Un mejor enfoque
+
+Una mejor forma a estar adivinando, es seguir las ideas de esta [hoja de trucos de ML](https://docs.microsoft.com/azure/machine-learning/algorithm-cheat-sheet?WT.mc_id=academic-15963-cxa). Aqu√≠, descubrimos que, para nuestro problema multiclase, tenemos algunas opciones:
+
+![Hoja de trucos para problemas multiclase](../images/cheatsheet.png)
+> Una secci√≥n de la hoja de trucos de algoritmos de Microsoft, detallando opciones de clasificaci√≥n multiclase.
+
+‚úÖ !Descarga esta hoja de trucos, impr√≠mela y cu√©lgala en tu pared!
+
+### Razonamiento
+
+Veamos si podemos razonar nuestro camino a trav√©s de diferentes enfoques dadas las restricciones que tenemos:
+
+- **Las redes neuronales son muy pesadas**. Dado nuestro conjunto de datos limpio aunque m√≠nimo, y el hecho que estamos ejecutando el entrenamiento de forma local v√≠a los notebooks, las redes neuronales son demasiado pesadas para esta tarea.
+- **Sin clasificador de dos clases**. No usamos clasificador de dos clases, por lo que descarta un uno-contra-todos.
+- **El √°rbol de decisi√≥n o la regresi√≥n log√≠stica podr√≠a funcionar**. Un √°rbolo de decisi√≥n podr√≠a funcionar, o la regresi√≥n log√≠stica para datos multiclase.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813333245,HugoCL,39707889,2022-02-23T21:28:03+00:00,2022-02-23T21:30:23+00:00,"To sound more natural, it can say ""¬øPuedes explicar por qu√© el modelo est√° muy seguro **de que** esta es una cocina India?"" ",True,4-Classification/2-Classifiers-1/translations/README.es.md,,"@@ -0,0 +1,245 @@
+# Clasificadores de cocina 1
+
+En esta lecci√≥n, usar√°s el conjunto de datos que guardaste en la √∫ltima lecci√≥n llena de equilibrio, datos limpios todo sobre cocinas.
+
+Usar√°s este conjunto de datos con una variedad de clasificadores para _predecir una cocina nacional dada basado en un grupo de ingredientes_. Mientras lo haces, aprender√°s m√°s acerca de algunas formas en que los algoritmos pueden ser aprovechados para las tareas de clasificaci√≥n.
+
+## [Examen previo a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/21/)
+
+# Preparaci√≥n
+
+Asumiendo que completaste la [Lecci√≥n 1](../../1-Introduction/translations/README.es.md), asegura que existe un archivo _cleaned_cuisines.csv_  en el directorio ra√≠z `/data` para estas cuatro lecciones.
+
+## Ejercicio - predice una cocina nacional
+
+1. Trabaja en el directorio _notebook.ipynb_ de la lecci√≥n, importa ese archivo junto con la biblioteca Pandas:
+
+    ```python
+    import pandas as pd
+    cuisines_df = pd.read_csv(""../data/cleaned_cuisines.csv"")
+    cuisines_df.head()
+    ```
+
+    Los datos lucen as√≠:
+
+|     | Unnamed: 0 | cuisine | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood | yam | yeast | yogurt | zucchini |
+| --- | ---------- | ------- | ------ | -------- | ----- | ---------- | ----- | ------------ | ------- | -------- | --- | ------- | ----------- | ---------- | ----------------------- | ---- | ---- | --- | ----- | ------ | -------- |
+| 0   | 0          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 1   | 1          | indian  | 1      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 2   | 2          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 3   | 3          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 4   | 4          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 1      | 0        |
+  
+
+1. Ahora, importa varias bibliotecas m√°s:
+
+    ```python
+    from sklearn.linear_model import LogisticRegression
+    from sklearn.model_selection import train_test_split, cross_val_score
+    from sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report, precision_recall_curve
+    from sklearn.svm import SVC
+    import numpy as np
+    ```
+
+1. Divide las coordenadas X e Y en dos diferentes dataframes para entrenar. `cuisine` puede ser el dataframe de las etiquetas:
+
+    ```python
+    cuisines_label_df = cuisines_df['cuisine']
+    cuisines_label_df.head()
+    ```
+
+    It will look like this:
+
+    ```output
+    0    indian
+    1    indian
+    2    indian
+    3    indian
+    4    indian
+    Name: cuisine, dtype: object
+    ```
+
+1. Elimina la columna `Unnamed: 0` y la columna `cuisine`, llamando a `drop()`. Guarda el resto de los datos como caracter√≠sticas entrenables:
+
+    ```python
+    cuisines_feature_df = cuisines_df.drop(['Unnamed: 0', 'cuisine'], axis=1)
+    cuisines_feature_df.head()
+    ```
+
+    Tus caracter√≠sticas lucen as√≠:
+
+|      | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | artemisia | artichoke |  ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood |  yam | yeast | yogurt | zucchini |
+| ---: | -----: | -------: | ----: | ---------: | ----: | -----------: | ------: | -------: | --------: | --------: | ---: | ------: | ----------: | ---------: | ----------------------: | ---: | ---: | ---: | ----: | -----: | -------: |
+|    0 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    1 |      1 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    2 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    3 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    4 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      1 |        0 | 0 |
+
+¬°Ahora ya est√°s listo para entrenar tu modelo!
+
+## Eligiendo tu clasificador
+
+Ahora que tus datos est√°n limpios y listos para entrenamiento, tienes que decidir qu√© algoritmo usar para hacer el trabajo.
+
+Scikit-learn agrupa clasificaciones bajo aprendizaje supervisado, y en esa categor√≠a encontrar√°s muchas formas de clasificar. [La variedad](https://scikit-learn.org/stable/supervised_learning.html) es bastante abrumadora a primera vista. Los siguientes m√©todos incluyen t√©cnicas de clasificaci√≥n:
+
+- Modelos lineales
+- M√°quinas de vectores de soporte
+- Descenso de gradiente estoc√°stico
+- Vecinos m√°s cercanos
+- Procesos Gaussianos
+- √Årboles de decisi√≥n
+- M√©todos de conjunto (clasificador de votos)
+- Algoritmos multiclase y multisalida (clasificaci√≥n multiclase y multietiqueta, clasificaci√≥n multiclase-multisalida)
+
+> Tambi√©n puedes usar [redes neuronales para clasificar los datos](https://scikit-learn.org/stable/modules/neural_networks_supervised.html#classification), pero eso est√° fuera del alcance de esta lecci√≥n.
+
+### ¬øQu√© clasificador usar?
+
+As√≠ que, ¬øqu√© clasificador deber√≠as elegir? A menudo, el ejecutar varios y buscar un buen resultado es una forma de probar. Scikit-lean ofrece una [comparaci√≥n lado a lado](https://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html) en un conjunto de datos creado, comparando KNeighbors, SVC two ways, GaussianProcessClassifier, DecisionTreeClassifier, RandomForestClassifier, MLPClassifier, AdaBoostClassifier, GaussianNB y QuadraticDiscrinationAnalysis, mostrando los resultados visualizados:
+
+![Comparaci√≥n de clasificadores](../images/comparison.png)
+> Gr√°ficos generados en la documentaci√≥n de Scikit-learn
+
+> AutoML resuelve este problema de forma pulcra al ejecutar estas comparaciones en la nube, permiti√©ndote elegir el mejor algoritmo para tus datos. Pru√©balo [aqu√≠](https://docs.microsoft.com/learn/modules/automate-model-selection-with-azure-automl/?WT.mc_id=academic-15963-cxa)
+
+### Un mejor enfoque
+
+Una mejor forma a estar adivinando, es seguir las ideas de esta [hoja de trucos de ML](https://docs.microsoft.com/azure/machine-learning/algorithm-cheat-sheet?WT.mc_id=academic-15963-cxa). Aqu√≠, descubrimos que, para nuestro problema multiclase, tenemos algunas opciones:
+
+![Hoja de trucos para problemas multiclase](../images/cheatsheet.png)
+> Una secci√≥n de la hoja de trucos de algoritmos de Microsoft, detallando opciones de clasificaci√≥n multiclase.
+
+‚úÖ !Descarga esta hoja de trucos, impr√≠mela y cu√©lgala en tu pared!
+
+### Razonamiento
+
+Veamos si podemos razonar nuestro camino a trav√©s de diferentes enfoques dadas las restricciones que tenemos:
+
+- **Las redes neuronales son muy pesadas**. Dado nuestro conjunto de datos limpio aunque m√≠nimo, y el hecho que estamos ejecutando el entrenamiento de forma local v√≠a los notebooks, las redes neuronales son demasiado pesadas para esta tarea.
+- **Sin clasificador de dos clases**. No usamos clasificador de dos clases, por lo que descarta un uno-contra-todos.
+- **El √°rbol de decisi√≥n o la regresi√≥n log√≠stica podr√≠a funcionar**. Un √°rbolo de decisi√≥n podr√≠a funcionar, o la regresi√≥n log√≠stica para datos multiclase.
+- **Los √°rboles de decisi√≥n potenciados multiclase resuelven un problema diferente**. El √°rbol de decisi√≥n potenciado multiclase es el m√°s adecuado para tareas no param√©tricas, por ejemplo, las tareas designadas para construir clasificaciones, por lo que no es √∫til para nosotros.
+
+### Usando Scikit-learn
+
+Usaremos Scikit-learn para analizar nuestros datos. Sin embargo, hay varias formas de usar la regresi√≥n log√≠stica en Scikit-learn. Da un vistazo a los [par√°metros a pasar](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regressio#sklearn.linear_model.LogisticRegression).  
+
+En esencia, hay dos par√°metros importantes - `multi_class` y `solver` - que necesitamos especificar, cuando le pedimos a Scikit-learn realice una regresi√≥n log√≠stica. El valor `multi_class` aplica cierto comportamiento. El valor del solucionador (`solver`) es el algoritmo a usar. No todos los solucionadores pueden ser emparejados con todos los valores `multi_class`.
+
+De acuerdo a la documentaci√≥n, en el caso multiclase, el algoritmo de entrenamiento:
+
+- **Usa el esquema uno contra el resto (OvsR)**, si la opci√≥n `multi_class` se configura a `ovr`
+- **Usa la p√©rdida de entrop√≠a cruzada**, si la opci√≥n `multi_class` se configura a `multinomial` (Actualmente la opci√≥n `multinomial` es soportada s√≥lo por los solucionadores ‚Äòlbfgs‚Äô, ‚Äòsag‚Äô, ‚Äòsaga‚Äô y ‚Äònewton-cg‚Äô.).
+
+> üéì Aqu√≠, el 'esquema' puede ser 'ovr' (one-vs-rest) o 'multinomial'. Ya que la regresi√≥n log√≠stica est√° dise√±ada realmente para soportar la clasificaci√≥n binaria, estos esquemas te permiten manejar mejor las tareas de clasificaci√≥n multiclase [fuente](https://machinelea
+rningmastery.com/one-vs-rest-and-one-vs-one-for-multi-class-classification/).
+
+> üéì El 'solucionador' es definido como ""el algoritmo a usar en el problema de optimizaci√≥n"" [fuente](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regressio#sklearn.linear_model.LogisticRegression).
+
+
+Scikit-learn ofrece esta tabla para explicar como los solucionadores manejan distintos desaf√≠os presentados por distintas clases de datos estructurados:
+
+![solucionadores](../images/solvers.png)
+
+## Ejercicio - divide los datos
+
+Nos podemos enfocar en la regresi√≥n log√≠stica para nuestra primer prueba de entrenamiento ya que reci√©n aprendiste sobre esto √∫ltimo en la lecci√≥n anterior.
+Divide tus datos en los grupos 'training' y 'testing' al llamar a `train_test_split()`:
+
+```python
+X_train, X_test, y_train, y_test = train_test_split(cuisines_feature_df, cuisines_label_df, test_size=0.3)
+```
+
+## Ejercicio - aplica la regresi√≥n log√≠stica
+
+Ya que est√°s usando un caso multiclase, necesitas elegir qu√© _esquema_ usar y qu√© _solucionador_ configurar. Usa LogisticRegression con un ajuste multiclase y el solucionador **liblinear** para entrenar.
+
+1. Crea un regresi√≥n log√≠stica con un multi_class configurado a `ovr` y el solucionador ajustado a `liblinear`:
+
+    ```python
+    lr = LogisticRegression(multi_class='ovr',solver='liblinear')
+    model = lr.fit(X_train, np.ravel(y_train))
+    
+    accuracy = model.score(X_test, y_test)
+    print (""Accuracy is {}"".format(accuracy))
+    ```
+
+    ‚úÖ Prueba un solucionador diferente como `lbfgs`, el cual suele ser configurado por defecto
+
+    > Nota, usa la funci√≥n de Pandas [`ravel`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.ravel.html) para aplanar tus datos cuando sea necesario.
+
+    ¬°La precisi√≥n es buena por enciam del **80%*!
+
+1. Puedes ver este modelo en acci√≥n al probar una fila de datos (#50):
+
+    ```python
+    print(f'ingredients: {X_test.iloc[50][X_test.iloc[50]!=0].keys()}')
+    print(f'cuisine: {y_test.iloc[50]}')
+    ```
+
+    El resultado es impreso:
+
+   ```output
+   ingredients: Index(['cilantro', 'onion', 'pea', 'potato', 'tomato', 'vegetable_oil'], dtype='object')
+   cuisine: indian
+   ```
+
+   ‚úÖ Prueba un n√∫mero de fila distinto y revisa los resultados
+
+1. Indagando m√°s, puedes revisar la precisi√≥n de esta predicci√≥n:
+
+    ```python
+    test= X_test.iloc[50].values.reshape(-1, 1).T
+    proba = model.predict_proba(test)
+    classes = model.classes_
+    resultdf = pd.DataFrame(data=proba, columns=classes)
+    
+    topPrediction = resultdf.T.sort_values(by=[0], ascending = [False])
+    topPrediction.head()
+    ```
+
+    El resultado es impreso - La cocina India es su mejor conjetura, con buena probabilidad:
+
+    |          |        0 |
+    | -------: | -------: |
+    |   indian | 0.715851 |
+    |  chinese | 0.229475 |
+    | japanese | 0.029763 |
+    |   korean | 0.017277 |
+    |     thai | 0.007634 |
+
+    ‚úÖ ¬øPuedes explicar por qu√© el modelo est√° muy seguro esta es una cocina India?",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813334275,HugoCL,39707889,2022-02-23T21:29:35+00:00,2022-02-23T21:29:36+00:00,"I think it can be ""Indaga un poco m√°s en las **matem√°ticas** detr√°s de la regresi√≥n log√≠stica en...""",True,4-Classification/2-Classifiers-1/translations/README.es.md,,"@@ -0,0 +1,245 @@
+# Clasificadores de cocina 1
+
+En esta lecci√≥n, usar√°s el conjunto de datos que guardaste en la √∫ltima lecci√≥n llena de equilibrio, datos limpios todo sobre cocinas.
+
+Usar√°s este conjunto de datos con una variedad de clasificadores para _predecir una cocina nacional dada basado en un grupo de ingredientes_. Mientras lo haces, aprender√°s m√°s acerca de algunas formas en que los algoritmos pueden ser aprovechados para las tareas de clasificaci√≥n.
+
+## [Examen previo a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/21/)
+
+# Preparaci√≥n
+
+Asumiendo que completaste la [Lecci√≥n 1](../../1-Introduction/translations/README.es.md), asegura que existe un archivo _cleaned_cuisines.csv_  en el directorio ra√≠z `/data` para estas cuatro lecciones.
+
+## Ejercicio - predice una cocina nacional
+
+1. Trabaja en el directorio _notebook.ipynb_ de la lecci√≥n, importa ese archivo junto con la biblioteca Pandas:
+
+    ```python
+    import pandas as pd
+    cuisines_df = pd.read_csv(""../data/cleaned_cuisines.csv"")
+    cuisines_df.head()
+    ```
+
+    Los datos lucen as√≠:
+
+|     | Unnamed: 0 | cuisine | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood | yam | yeast | yogurt | zucchini |
+| --- | ---------- | ------- | ------ | -------- | ----- | ---------- | ----- | ------------ | ------- | -------- | --- | ------- | ----------- | ---------- | ----------------------- | ---- | ---- | --- | ----- | ------ | -------- |
+| 0   | 0          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 1   | 1          | indian  | 1      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 2   | 2          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 3   | 3          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 4   | 4          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 1      | 0        |
+  
+
+1. Ahora, importa varias bibliotecas m√°s:
+
+    ```python
+    from sklearn.linear_model import LogisticRegression
+    from sklearn.model_selection import train_test_split, cross_val_score
+    from sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report, precision_recall_curve
+    from sklearn.svm import SVC
+    import numpy as np
+    ```
+
+1. Divide las coordenadas X e Y en dos diferentes dataframes para entrenar. `cuisine` puede ser el dataframe de las etiquetas:
+
+    ```python
+    cuisines_label_df = cuisines_df['cuisine']
+    cuisines_label_df.head()
+    ```
+
+    It will look like this:
+
+    ```output
+    0    indian
+    1    indian
+    2    indian
+    3    indian
+    4    indian
+    Name: cuisine, dtype: object
+    ```
+
+1. Elimina la columna `Unnamed: 0` y la columna `cuisine`, llamando a `drop()`. Guarda el resto de los datos como caracter√≠sticas entrenables:
+
+    ```python
+    cuisines_feature_df = cuisines_df.drop(['Unnamed: 0', 'cuisine'], axis=1)
+    cuisines_feature_df.head()
+    ```
+
+    Tus caracter√≠sticas lucen as√≠:
+
+|      | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | artemisia | artichoke |  ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood |  yam | yeast | yogurt | zucchini |
+| ---: | -----: | -------: | ----: | ---------: | ----: | -----------: | ------: | -------: | --------: | --------: | ---: | ------: | ----------: | ---------: | ----------------------: | ---: | ---: | ---: | ----: | -----: | -------: |
+|    0 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    1 |      1 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    2 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    3 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    4 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      1 |        0 | 0 |
+
+¬°Ahora ya est√°s listo para entrenar tu modelo!
+
+## Eligiendo tu clasificador
+
+Ahora que tus datos est√°n limpios y listos para entrenamiento, tienes que decidir qu√© algoritmo usar para hacer el trabajo.
+
+Scikit-learn agrupa clasificaciones bajo aprendizaje supervisado, y en esa categor√≠a encontrar√°s muchas formas de clasificar. [La variedad](https://scikit-learn.org/stable/supervised_learning.html) es bastante abrumadora a primera vista. Los siguientes m√©todos incluyen t√©cnicas de clasificaci√≥n:
+
+- Modelos lineales
+- M√°quinas de vectores de soporte
+- Descenso de gradiente estoc√°stico
+- Vecinos m√°s cercanos
+- Procesos Gaussianos
+- √Årboles de decisi√≥n
+- M√©todos de conjunto (clasificador de votos)
+- Algoritmos multiclase y multisalida (clasificaci√≥n multiclase y multietiqueta, clasificaci√≥n multiclase-multisalida)
+
+> Tambi√©n puedes usar [redes neuronales para clasificar los datos](https://scikit-learn.org/stable/modules/neural_networks_supervised.html#classification), pero eso est√° fuera del alcance de esta lecci√≥n.
+
+### ¬øQu√© clasificador usar?
+
+As√≠ que, ¬øqu√© clasificador deber√≠as elegir? A menudo, el ejecutar varios y buscar un buen resultado es una forma de probar. Scikit-lean ofrece una [comparaci√≥n lado a lado](https://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html) en un conjunto de datos creado, comparando KNeighbors, SVC two ways, GaussianProcessClassifier, DecisionTreeClassifier, RandomForestClassifier, MLPClassifier, AdaBoostClassifier, GaussianNB y QuadraticDiscrinationAnalysis, mostrando los resultados visualizados:
+
+![Comparaci√≥n de clasificadores](../images/comparison.png)
+> Gr√°ficos generados en la documentaci√≥n de Scikit-learn
+
+> AutoML resuelve este problema de forma pulcra al ejecutar estas comparaciones en la nube, permiti√©ndote elegir el mejor algoritmo para tus datos. Pru√©balo [aqu√≠](https://docs.microsoft.com/learn/modules/automate-model-selection-with-azure-automl/?WT.mc_id=academic-15963-cxa)
+
+### Un mejor enfoque
+
+Una mejor forma a estar adivinando, es seguir las ideas de esta [hoja de trucos de ML](https://docs.microsoft.com/azure/machine-learning/algorithm-cheat-sheet?WT.mc_id=academic-15963-cxa). Aqu√≠, descubrimos que, para nuestro problema multiclase, tenemos algunas opciones:
+
+![Hoja de trucos para problemas multiclase](../images/cheatsheet.png)
+> Una secci√≥n de la hoja de trucos de algoritmos de Microsoft, detallando opciones de clasificaci√≥n multiclase.
+
+‚úÖ !Descarga esta hoja de trucos, impr√≠mela y cu√©lgala en tu pared!
+
+### Razonamiento
+
+Veamos si podemos razonar nuestro camino a trav√©s de diferentes enfoques dadas las restricciones que tenemos:
+
+- **Las redes neuronales son muy pesadas**. Dado nuestro conjunto de datos limpio aunque m√≠nimo, y el hecho que estamos ejecutando el entrenamiento de forma local v√≠a los notebooks, las redes neuronales son demasiado pesadas para esta tarea.
+- **Sin clasificador de dos clases**. No usamos clasificador de dos clases, por lo que descarta un uno-contra-todos.
+- **El √°rbol de decisi√≥n o la regresi√≥n log√≠stica podr√≠a funcionar**. Un √°rbolo de decisi√≥n podr√≠a funcionar, o la regresi√≥n log√≠stica para datos multiclase.
+- **Los √°rboles de decisi√≥n potenciados multiclase resuelven un problema diferente**. El √°rbol de decisi√≥n potenciado multiclase es el m√°s adecuado para tareas no param√©tricas, por ejemplo, las tareas designadas para construir clasificaciones, por lo que no es √∫til para nosotros.
+
+### Usando Scikit-learn
+
+Usaremos Scikit-learn para analizar nuestros datos. Sin embargo, hay varias formas de usar la regresi√≥n log√≠stica en Scikit-learn. Da un vistazo a los [par√°metros a pasar](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regressio#sklearn.linear_model.LogisticRegression).  
+
+En esencia, hay dos par√°metros importantes - `multi_class` y `solver` - que necesitamos especificar, cuando le pedimos a Scikit-learn realice una regresi√≥n log√≠stica. El valor `multi_class` aplica cierto comportamiento. El valor del solucionador (`solver`) es el algoritmo a usar. No todos los solucionadores pueden ser emparejados con todos los valores `multi_class`.
+
+De acuerdo a la documentaci√≥n, en el caso multiclase, el algoritmo de entrenamiento:
+
+- **Usa el esquema uno contra el resto (OvsR)**, si la opci√≥n `multi_class` se configura a `ovr`
+- **Usa la p√©rdida de entrop√≠a cruzada**, si la opci√≥n `multi_class` se configura a `multinomial` (Actualmente la opci√≥n `multinomial` es soportada s√≥lo por los solucionadores ‚Äòlbfgs‚Äô, ‚Äòsag‚Äô, ‚Äòsaga‚Äô y ‚Äònewton-cg‚Äô.).
+
+> üéì Aqu√≠, el 'esquema' puede ser 'ovr' (one-vs-rest) o 'multinomial'. Ya que la regresi√≥n log√≠stica est√° dise√±ada realmente para soportar la clasificaci√≥n binaria, estos esquemas te permiten manejar mejor las tareas de clasificaci√≥n multiclase [fuente](https://machinelea
+rningmastery.com/one-vs-rest-and-one-vs-one-for-multi-class-classification/).
+
+> üéì El 'solucionador' es definido como ""el algoritmo a usar en el problema de optimizaci√≥n"" [fuente](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regressio#sklearn.linear_model.LogisticRegression).
+
+
+Scikit-learn ofrece esta tabla para explicar como los solucionadores manejan distintos desaf√≠os presentados por distintas clases de datos estructurados:
+
+![solucionadores](../images/solvers.png)
+
+## Ejercicio - divide los datos
+
+Nos podemos enfocar en la regresi√≥n log√≠stica para nuestra primer prueba de entrenamiento ya que reci√©n aprendiste sobre esto √∫ltimo en la lecci√≥n anterior.
+Divide tus datos en los grupos 'training' y 'testing' al llamar a `train_test_split()`:
+
+```python
+X_train, X_test, y_train, y_test = train_test_split(cuisines_feature_df, cuisines_label_df, test_size=0.3)
+```
+
+## Ejercicio - aplica la regresi√≥n log√≠stica
+
+Ya que est√°s usando un caso multiclase, necesitas elegir qu√© _esquema_ usar y qu√© _solucionador_ configurar. Usa LogisticRegression con un ajuste multiclase y el solucionador **liblinear** para entrenar.
+
+1. Crea un regresi√≥n log√≠stica con un multi_class configurado a `ovr` y el solucionador ajustado a `liblinear`:
+
+    ```python
+    lr = LogisticRegression(multi_class='ovr',solver='liblinear')
+    model = lr.fit(X_train, np.ravel(y_train))
+    
+    accuracy = model.score(X_test, y_test)
+    print (""Accuracy is {}"".format(accuracy))
+    ```
+
+    ‚úÖ Prueba un solucionador diferente como `lbfgs`, el cual suele ser configurado por defecto
+
+    > Nota, usa la funci√≥n de Pandas [`ravel`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.ravel.html) para aplanar tus datos cuando sea necesario.
+
+    ¬°La precisi√≥n es buena por enciam del **80%*!
+
+1. Puedes ver este modelo en acci√≥n al probar una fila de datos (#50):
+
+    ```python
+    print(f'ingredients: {X_test.iloc[50][X_test.iloc[50]!=0].keys()}')
+    print(f'cuisine: {y_test.iloc[50]}')
+    ```
+
+    El resultado es impreso:
+
+   ```output
+   ingredients: Index(['cilantro', 'onion', 'pea', 'potato', 'tomato', 'vegetable_oil'], dtype='object')
+   cuisine: indian
+   ```
+
+   ‚úÖ Prueba un n√∫mero de fila distinto y revisa los resultados
+
+1. Indagando m√°s, puedes revisar la precisi√≥n de esta predicci√≥n:
+
+    ```python
+    test= X_test.iloc[50].values.reshape(-1, 1).T
+    proba = model.predict_proba(test)
+    classes = model.classes_
+    resultdf = pd.DataFrame(data=proba, columns=classes)
+    
+    topPrediction = resultdf.T.sort_values(by=[0], ascending = [False])
+    topPrediction.head()
+    ```
+
+    El resultado es impreso - La cocina India es su mejor conjetura, con buena probabilidad:
+
+    |          |        0 |
+    | -------: | -------: |
+    |   indian | 0.715851 |
+    |  chinese | 0.229475 |
+    | japanese | 0.029763 |
+    |   korean | 0.017277 |
+    |     thai | 0.007634 |
+
+    ‚úÖ ¬øPuedes explicar por qu√© el modelo est√° muy seguro esta es una cocina India?
+
+1. Obt√©n mayor detalle al imprimir un reporte de clasificaci√≥n, como lo hiciste en las lecciones de regresi√≥n:
+
+    ```python
+    y_pred = model.predict(X_test)
+    print(classification_report(y_test,y_pred))
+    ```
+
+    |              | precision | recall | f1-score | support |
+    | ------------ | --------- | ------ | -------- | ------- |
+    | chinese      | 0.73      | 0.71   | 0.72     | 229     |
+    | indian       | 0.91      | 0.93   | 0.92     | 254     |
+    | japanese     | 0.70      | 0.75   | 0.72     | 220     |
+    | korean       | 0.86      | 0.76   | 0.81     | 242     |
+    | thai         | 0.79      | 0.85   | 0.82     | 254     |
+    | accuracy     | 0.80      | 1199   |          |         |
+    | macro avg    | 0.80      | 0.80   | 0.80     | 1199    |
+    | weighted avg | 0.80      | 0.80   | 0.80     | 1199    |
+
+## üöÄDesaf√≠o
+
+En esta lecci√≥n, usaste tus datos limpios para construir un modelo de aprendizaje autom√°tico que puede predecir una cocina nacional basado en una serie de ingredientes. Toma un tiempo para leer las diversas opciones que provee Scikit-learn para clasificar los datos. Profundiza en el concepto de 'solucionador' para comprender que sucede detr√°s de escena.
+
+## [Examen posterior a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/22/)
+
+## Revisi√≥n y autoestudio
+
+Indaga un poco m√°s en las matem√°tica detr√°s de la regresi√≥n log√≠stica en [esta lecci√≥n](https://people.eecs.berkeley.edu/~russell/classes/cs194/f11/lectures/CS194%20Fall%202011%20Lecture%2006.pdf)",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813342081,hereje,3022824,2022-02-23T21:39:41+00:00,2022-02-23T21:39:41+00:00,Thanks!,True,4-Classification/2-Classifiers-1/translations/README.es.md,,"@@ -0,0 +1,245 @@
+# Clasificadores de cocina 1
+
+En esta lecci√≥n, usar√°s el conjunto de datos que guardaste en la √∫ltima lecci√≥n llena de equilibrio, datos limpios todo sobre cocinas.
+
+Usar√°s este conjunto de datos con una variedad de clasificadores para _predecir una cocina nacional dada basado en un grupo de ingredientes_. Mientras lo haces, aprender√°s m√°s acerca de algunas formas en que los algoritmos pueden ser aprovechados para las tareas de clasificaci√≥n.
+
+## [Examen previo a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/21/)
+
+# Preparaci√≥n
+
+Asumiendo que completaste la [Lecci√≥n 1](../../1-Introduction/translations/README.es.md), asegura que existe un archivo _cleaned_cuisines.csv_  en el directorio ra√≠z `/data` para estas cuatro lecciones.
+
+## Ejercicio - predice una cocina nacional
+
+1. Trabaja en el directorio _notebook.ipynb_ de la lecci√≥n, importa ese archivo junto con la biblioteca Pandas:
+
+    ```python
+    import pandas as pd
+    cuisines_df = pd.read_csv(""../data/cleaned_cuisines.csv"")
+    cuisines_df.head()
+    ```
+
+    Los datos lucen as√≠:
+
+|     | Unnamed: 0 | cuisine | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood | yam | yeast | yogurt | zucchini |
+| --- | ---------- | ------- | ------ | -------- | ----- | ---------- | ----- | ------------ | ------- | -------- | --- | ------- | ----------- | ---------- | ----------------------- | ---- | ---- | --- | ----- | ------ | -------- |
+| 0   | 0          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 1   | 1          | indian  | 1      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 2   | 2          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 3   | 3          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 4   | 4          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 1      | 0        |
+  
+
+1. Ahora, importa varias bibliotecas m√°s:
+
+    ```python
+    from sklearn.linear_model import LogisticRegression
+    from sklearn.model_selection import train_test_split, cross_val_score
+    from sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report, precision_recall_curve
+    from sklearn.svm import SVC
+    import numpy as np
+    ```
+
+1. Divide las coordenadas X e Y en dos diferentes dataframes para entrenar. `cuisine` puede ser el dataframe de las etiquetas:
+
+    ```python
+    cuisines_label_df = cuisines_df['cuisine']
+    cuisines_label_df.head()
+    ```
+
+    It will look like this:
+
+    ```output
+    0    indian
+    1    indian
+    2    indian
+    3    indian
+    4    indian
+    Name: cuisine, dtype: object
+    ```
+
+1. Elimina la columna `Unnamed: 0` y la columna `cuisine`, llamando a `drop()`. Guarda el resto de los datos como caracter√≠sticas entrenables:
+
+    ```python
+    cuisines_feature_df = cuisines_df.drop(['Unnamed: 0', 'cuisine'], axis=1)
+    cuisines_feature_df.head()
+    ```
+
+    Tus caracter√≠sticas lucen as√≠:
+
+|      | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | artemisia | artichoke |  ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood |  yam | yeast | yogurt | zucchini |
+| ---: | -----: | -------: | ----: | ---------: | ----: | -----------: | ------: | -------: | --------: | --------: | ---: | ------: | ----------: | ---------: | ----------------------: | ---: | ---: | ---: | ----: | -----: | -------: |
+|    0 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    1 |      1 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    2 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    3 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    4 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      1 |        0 | 0 |
+
+¬°Ahora ya est√°s listo para entrenar tu modelo!
+
+## Eligiendo tu clasificador
+
+Ahora que tus datos est√°n limpios y listos para entrenamiento, tienes que decidir qu√© algoritmo usar para hacer el trabajo.
+
+Scikit-learn agrupa clasificaciones bajo aprendizaje supervisado, y en esa categor√≠a encontrar√°s muchas formas de clasificar. [La variedad](https://scikit-learn.org/stable/supervised_learning.html) es bastante abrumadora a primera vista. Los siguientes m√©todos incluyen t√©cnicas de clasificaci√≥n:
+
+- Modelos lineales
+- M√°quinas de vectores de soporte
+- Descenso de gradiente estoc√°stico
+- Vecinos m√°s cercanos
+- Procesos Gaussianos
+- √Årboles de decisi√≥n
+- M√©todos de conjunto (clasificador de votos)
+- Algoritmos multiclase y multisalida (clasificaci√≥n multiclase y multietiqueta, clasificaci√≥n multiclase-multisalida)
+
+> Tambi√©n puedes usar [redes neuronales para clasificar los datos](https://scikit-learn.org/stable/modules/neural_networks_supervised.html#classification), pero eso est√° fuera del alcance de esta lecci√≥n.
+
+### ¬øQu√© clasificador usar?
+
+As√≠ que, ¬øqu√© clasificador deber√≠as elegir? A menudo, el ejecutar varios y buscar un buen resultado es una forma de probar. Scikit-lean ofrece una [comparaci√≥n lado a lado](https://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html) en un conjunto de datos creado, comparando KNeighbors, SVC two ways, GaussianProcessClassifier, DecisionTreeClassifier, RandomForestClassifier, MLPClassifier, AdaBoostClassifier, GaussianNB y QuadraticDiscrinationAnalysis, mostrando los resultados visualizados:
+
+![Comparaci√≥n de clasificadores](../images/comparison.png)
+> Gr√°ficos generados en la documentaci√≥n de Scikit-learn
+
+> AutoML resuelve este problema de forma pulcra al ejecutar estas comparaciones en la nube, permiti√©ndote elegir el mejor algoritmo para tus datos. Pru√©balo [aqu√≠](https://docs.microsoft.com/learn/modules/automate-model-selection-with-azure-automl/?WT.mc_id=academic-15963-cxa)
+
+### Un mejor enfoque
+
+Una mejor forma a estar adivinando, es seguir las ideas de esta [hoja de trucos de ML](https://docs.microsoft.com/azure/machine-learning/algorithm-cheat-sheet?WT.mc_id=academic-15963-cxa). Aqu√≠, descubrimos que, para nuestro problema multiclase, tenemos algunas opciones:
+
+![Hoja de trucos para problemas multiclase](../images/cheatsheet.png)
+> Una secci√≥n de la hoja de trucos de algoritmos de Microsoft, detallando opciones de clasificaci√≥n multiclase.
+
+‚úÖ !Descarga esta hoja de trucos, impr√≠mela y cu√©lgala en tu pared!
+
+### Razonamiento
+
+Veamos si podemos razonar nuestro camino a trav√©s de diferentes enfoques dadas las restricciones que tenemos:
+
+- **Las redes neuronales son muy pesadas**. Dado nuestro conjunto de datos limpio aunque m√≠nimo, y el hecho que estamos ejecutando el entrenamiento de forma local v√≠a los notebooks, las redes neuronales son demasiado pesadas para esta tarea.
+- **Sin clasificador de dos clases**. No usamos clasificador de dos clases, por lo que descarta un uno-contra-todos.
+- **El √°rbol de decisi√≥n o la regresi√≥n log√≠stica podr√≠a funcionar**. Un √°rbolo de decisi√≥n podr√≠a funcionar, o la regresi√≥n log√≠stica para datos multiclase.
+- **Los √°rboles de decisi√≥n potenciados multiclase resuelven un problema diferente**. El √°rbol de decisi√≥n potenciado multiclase es el m√°s adecuado para tareas no param√©tricas, por ejemplo, las tareas designadas para construir clasificaciones, por lo que no es √∫til para nosotros.
+
+### Usando Scikit-learn
+
+Usaremos Scikit-learn para analizar nuestros datos. Sin embargo, hay varias formas de usar la regresi√≥n log√≠stica en Scikit-learn. Da un vistazo a los [par√°metros a pasar](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regressio#sklearn.linear_model.LogisticRegression).  
+
+En esencia, hay dos par√°metros importantes - `multi_class` y `solver` - que necesitamos especificar, cuando le pedimos a Scikit-learn realice una regresi√≥n log√≠stica. El valor `multi_class` aplica cierto comportamiento. El valor del solucionador (`solver`) es el algoritmo a usar. No todos los solucionadores pueden ser emparejados con todos los valores `multi_class`.
+
+De acuerdo a la documentaci√≥n, en el caso multiclase, el algoritmo de entrenamiento:
+
+- **Usa el esquema uno contra el resto (OvsR)**, si la opci√≥n `multi_class` se configura a `ovr`
+- **Usa la p√©rdida de entrop√≠a cruzada**, si la opci√≥n `multi_class` se configura a `multinomial` (Actualmente la opci√≥n `multinomial` es soportada s√≥lo por los solucionadores ‚Äòlbfgs‚Äô, ‚Äòsag‚Äô, ‚Äòsaga‚Äô y ‚Äònewton-cg‚Äô.).
+
+> üéì Aqu√≠, el 'esquema' puede ser 'ovr' (one-vs-rest) o 'multinomial'. Ya que la regresi√≥n log√≠stica est√° dise√±ada realmente para soportar la clasificaci√≥n binaria, estos esquemas te permiten manejar mejor las tareas de clasificaci√≥n multiclase [fuente](https://machinelea
+rningmastery.com/one-vs-rest-and-one-vs-one-for-multi-class-classification/).
+
+> üéì El 'solucionador' es definido como ""el algoritmo a usar en el problema de optimizaci√≥n"" [fuente](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regressio#sklearn.linear_model.LogisticRegression).
+
+
+Scikit-learn ofrece esta tabla para explicar como los solucionadores manejan distintos desaf√≠os presentados por distintas clases de datos estructurados:
+
+![solucionadores](../images/solvers.png)
+
+## Ejercicio - divide los datos
+
+Nos podemos enfocar en la regresi√≥n log√≠stica para nuestra primer prueba de entrenamiento ya que reci√©n aprendiste sobre esto √∫ltimo en la lecci√≥n anterior.
+Divide tus datos en los grupos 'training' y 'testing' al llamar a `train_test_split()`:
+
+```python
+X_train, X_test, y_train, y_test = train_test_split(cuisines_feature_df, cuisines_label_df, test_size=0.3)
+```
+
+## Ejercicio - aplica la regresi√≥n log√≠stica
+
+Ya que est√°s usando un caso multiclase, necesitas elegir qu√© _esquema_ usar y qu√© _solucionador_ configurar. Usa LogisticRegression con un ajuste multiclase y el solucionador **liblinear** para entrenar.
+
+1. Crea un regresi√≥n log√≠stica con un multi_class configurado a `ovr` y el solucionador ajustado a `liblinear`:
+
+    ```python
+    lr = LogisticRegression(multi_class='ovr',solver='liblinear')
+    model = lr.fit(X_train, np.ravel(y_train))
+    
+    accuracy = model.score(X_test, y_test)
+    print (""Accuracy is {}"".format(accuracy))
+    ```
+
+    ‚úÖ Prueba un solucionador diferente como `lbfgs`, el cual suele ser configurado por defecto
+
+    > Nota, usa la funci√≥n de Pandas [`ravel`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.ravel.html) para aplanar tus datos cuando sea necesario.
+
+    ¬°La precisi√≥n es buena por enciam del **80%*!
+
+1. Puedes ver este modelo en acci√≥n al probar una fila de datos (#50):
+
+    ```python
+    print(f'ingredients: {X_test.iloc[50][X_test.iloc[50]!=0].keys()}')
+    print(f'cuisine: {y_test.iloc[50]}')
+    ```
+
+    El resultado es impreso:
+
+   ```output
+   ingredients: Index(['cilantro', 'onion', 'pea', 'potato', 'tomato', 'vegetable_oil'], dtype='object')
+   cuisine: indian
+   ```
+
+   ‚úÖ Prueba un n√∫mero de fila distinto y revisa los resultados
+
+1. Indagando m√°s, puedes revisar la precisi√≥n de esta predicci√≥n:
+
+    ```python
+    test= X_test.iloc[50].values.reshape(-1, 1).T
+    proba = model.predict_proba(test)
+    classes = model.classes_
+    resultdf = pd.DataFrame(data=proba, columns=classes)
+    
+    topPrediction = resultdf.T.sort_values(by=[0], ascending = [False])
+    topPrediction.head()
+    ```
+
+    El resultado es impreso - La cocina India es su mejor conjetura, con buena probabilidad:
+
+    |          |        0 |
+    | -------: | -------: |
+    |   indian | 0.715851 |
+    |  chinese | 0.229475 |
+    | japanese | 0.029763 |
+    |   korean | 0.017277 |
+    |     thai | 0.007634 |
+
+    ‚úÖ ¬øPuedes explicar por qu√© el modelo est√° muy seguro esta es una cocina India?
+
+1. Obt√©n mayor detalle al imprimir un reporte de clasificaci√≥n, como lo hiciste en las lecciones de regresi√≥n:
+
+    ```python
+    y_pred = model.predict(X_test)
+    print(classification_report(y_test,y_pred))
+    ```
+
+    |              | precision | recall | f1-score | support |
+    | ------------ | --------- | ------ | -------- | ------- |
+    | chinese      | 0.73      | 0.71   | 0.72     | 229     |
+    | indian       | 0.91      | 0.93   | 0.92     | 254     |
+    | japanese     | 0.70      | 0.75   | 0.72     | 220     |
+    | korean       | 0.86      | 0.76   | 0.81     | 242     |
+    | thai         | 0.79      | 0.85   | 0.82     | 254     |
+    | accuracy     | 0.80      | 1199   |          |         |
+    | macro avg    | 0.80      | 0.80   | 0.80     | 1199    |
+    | weighted avg | 0.80      | 0.80   | 0.80     | 1199    |
+
+## üöÄDesaf√≠o
+
+En esta lecci√≥n, usaste tus datos limpios para construir un modelo de aprendizaje autom√°tico que puede predecir una cocina nacional basado en una serie de ingredientes. Toma un tiempo para leer las diversas opciones que provee Scikit-learn para clasificar los datos. Profundiza en el concepto de 'solucionador' para comprender que sucede detr√°s de escena.
+
+## [Examen posterior a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/22/)
+
+## Revisi√≥n y autoestudio
+
+Indaga un poco m√°s en las matem√°tica detr√°s de la regresi√≥n log√≠stica en [esta lecci√≥n](https://people.eecs.berkeley.edu/~russell/classes/cs194/f11/lectures/CS194%20Fall%202011%20Lecture%2006.pdf)",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813343806,HugoCL,39707889,2022-02-23T21:41:24+00:00,2022-02-23T21:41:25+00:00,Thanks to you Angel!,True,4-Classification/2-Classifiers-1/translations/README.es.md,,"@@ -0,0 +1,245 @@
+# Clasificadores de cocina 1
+
+En esta lecci√≥n, usar√°s el conjunto de datos que guardaste en la √∫ltima lecci√≥n llena de equilibrio, datos limpios todo sobre cocinas.
+
+Usar√°s este conjunto de datos con una variedad de clasificadores para _predecir una cocina nacional dada basado en un grupo de ingredientes_. Mientras lo haces, aprender√°s m√°s acerca de algunas formas en que los algoritmos pueden ser aprovechados para las tareas de clasificaci√≥n.
+
+## [Examen previo a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/21/)
+
+# Preparaci√≥n
+
+Asumiendo que completaste la [Lecci√≥n 1](../../1-Introduction/translations/README.es.md), asegura que existe un archivo _cleaned_cuisines.csv_  en el directorio ra√≠z `/data` para estas cuatro lecciones.
+
+## Ejercicio - predice una cocina nacional
+
+1. Trabaja en el directorio _notebook.ipynb_ de la lecci√≥n, importa ese archivo junto con la biblioteca Pandas:
+
+    ```python
+    import pandas as pd
+    cuisines_df = pd.read_csv(""../data/cleaned_cuisines.csv"")
+    cuisines_df.head()
+    ```
+
+    Los datos lucen as√≠:
+
+|     | Unnamed: 0 | cuisine | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood | yam | yeast | yogurt | zucchini |
+| --- | ---------- | ------- | ------ | -------- | ----- | ---------- | ----- | ------------ | ------- | -------- | --- | ------- | ----------- | ---------- | ----------------------- | ---- | ---- | --- | ----- | ------ | -------- |
+| 0   | 0          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 1   | 1          | indian  | 1      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 2   | 2          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 3   | 3          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 4   | 4          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 1      | 0        |
+  
+
+1. Ahora, importa varias bibliotecas m√°s:
+
+    ```python
+    from sklearn.linear_model import LogisticRegression
+    from sklearn.model_selection import train_test_split, cross_val_score
+    from sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report, precision_recall_curve
+    from sklearn.svm import SVC
+    import numpy as np
+    ```
+
+1. Divide las coordenadas X e Y en dos diferentes dataframes para entrenar. `cuisine` puede ser el dataframe de las etiquetas:
+
+    ```python
+    cuisines_label_df = cuisines_df['cuisine']
+    cuisines_label_df.head()
+    ```
+
+    It will look like this:
+
+    ```output
+    0    indian
+    1    indian
+    2    indian
+    3    indian
+    4    indian
+    Name: cuisine, dtype: object
+    ```
+
+1. Elimina la columna `Unnamed: 0` y la columna `cuisine`, llamando a `drop()`. Guarda el resto de los datos como caracter√≠sticas entrenables:
+
+    ```python
+    cuisines_feature_df = cuisines_df.drop(['Unnamed: 0', 'cuisine'], axis=1)
+    cuisines_feature_df.head()
+    ```
+
+    Tus caracter√≠sticas lucen as√≠:
+
+|      | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | artemisia | artichoke |  ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood |  yam | yeast | yogurt | zucchini |
+| ---: | -----: | -------: | ----: | ---------: | ----: | -----------: | ------: | -------: | --------: | --------: | ---: | ------: | ----------: | ---------: | ----------------------: | ---: | ---: | ---: | ----: | -----: | -------: |
+|    0 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    1 |      1 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    2 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    3 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    4 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      1 |        0 | 0 |
+
+¬°Ahora ya est√°s listo para entrenar tu modelo!
+
+## Eligiendo tu clasificador
+
+Ahora que tus datos est√°n limpios y listos para entrenamiento, tienes que decidir qu√© algoritmo usar para hacer el trabajo.
+
+Scikit-learn agrupa clasificaciones bajo aprendizaje supervisado, y en esa categor√≠a encontrar√°s muchas formas de clasificar. [La variedad](https://scikit-learn.org/stable/supervised_learning.html) es bastante abrumadora a primera vista. Los siguientes m√©todos incluyen t√©cnicas de clasificaci√≥n:
+
+- Modelos lineales
+- M√°quinas de vectores de soporte
+- Descenso de gradiente estoc√°stico
+- Vecinos m√°s cercanos
+- Procesos Gaussianos
+- √Årboles de decisi√≥n
+- M√©todos de conjunto (clasificador de votos)
+- Algoritmos multiclase y multisalida (clasificaci√≥n multiclase y multietiqueta, clasificaci√≥n multiclase-multisalida)
+
+> Tambi√©n puedes usar [redes neuronales para clasificar los datos](https://scikit-learn.org/stable/modules/neural_networks_supervised.html#classification), pero eso est√° fuera del alcance de esta lecci√≥n.
+
+### ¬øQu√© clasificador usar?
+
+As√≠ que, ¬øqu√© clasificador deber√≠as elegir? A menudo, el ejecutar varios y buscar un buen resultado es una forma de probar. Scikit-lean ofrece una [comparaci√≥n lado a lado](https://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html) en un conjunto de datos creado, comparando KNeighbors, SVC two ways, GaussianProcessClassifier, DecisionTreeClassifier, RandomForestClassifier, MLPClassifier, AdaBoostClassifier, GaussianNB y QuadraticDiscrinationAnalysis, mostrando los resultados visualizados:
+
+![Comparaci√≥n de clasificadores](../images/comparison.png)
+> Gr√°ficos generados en la documentaci√≥n de Scikit-learn
+
+> AutoML resuelve este problema de forma pulcra al ejecutar estas comparaciones en la nube, permiti√©ndote elegir el mejor algoritmo para tus datos. Pru√©balo [aqu√≠](https://docs.microsoft.com/learn/modules/automate-model-selection-with-azure-automl/?WT.mc_id=academic-15963-cxa)
+
+### Un mejor enfoque
+
+Una mejor forma a estar adivinando, es seguir las ideas de esta [hoja de trucos de ML](https://docs.microsoft.com/azure/machine-learning/algorithm-cheat-sheet?WT.mc_id=academic-15963-cxa). Aqu√≠, descubrimos que, para nuestro problema multiclase, tenemos algunas opciones:
+
+![Hoja de trucos para problemas multiclase](../images/cheatsheet.png)
+> Una secci√≥n de la hoja de trucos de algoritmos de Microsoft, detallando opciones de clasificaci√≥n multiclase.
+
+‚úÖ !Descarga esta hoja de trucos, impr√≠mela y cu√©lgala en tu pared!
+
+### Razonamiento
+
+Veamos si podemos razonar nuestro camino a trav√©s de diferentes enfoques dadas las restricciones que tenemos:
+
+- **Las redes neuronales son muy pesadas**. Dado nuestro conjunto de datos limpio aunque m√≠nimo, y el hecho que estamos ejecutando el entrenamiento de forma local v√≠a los notebooks, las redes neuronales son demasiado pesadas para esta tarea.
+- **Sin clasificador de dos clases**. No usamos clasificador de dos clases, por lo que descarta un uno-contra-todos.
+- **El √°rbol de decisi√≥n o la regresi√≥n log√≠stica podr√≠a funcionar**. Un √°rbolo de decisi√≥n podr√≠a funcionar, o la regresi√≥n log√≠stica para datos multiclase.
+- **Los √°rboles de decisi√≥n potenciados multiclase resuelven un problema diferente**. El √°rbol de decisi√≥n potenciado multiclase es el m√°s adecuado para tareas no param√©tricas, por ejemplo, las tareas designadas para construir clasificaciones, por lo que no es √∫til para nosotros.
+
+### Usando Scikit-learn
+
+Usaremos Scikit-learn para analizar nuestros datos. Sin embargo, hay varias formas de usar la regresi√≥n log√≠stica en Scikit-learn. Da un vistazo a los [par√°metros a pasar](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regressio#sklearn.linear_model.LogisticRegression).  
+
+En esencia, hay dos par√°metros importantes - `multi_class` y `solver` - que necesitamos especificar, cuando le pedimos a Scikit-learn realice una regresi√≥n log√≠stica. El valor `multi_class` aplica cierto comportamiento. El valor del solucionador (`solver`) es el algoritmo a usar. No todos los solucionadores pueden ser emparejados con todos los valores `multi_class`.
+
+De acuerdo a la documentaci√≥n, en el caso multiclase, el algoritmo de entrenamiento:
+
+- **Usa el esquema uno contra el resto (OvsR)**, si la opci√≥n `multi_class` se configura a `ovr`
+- **Usa la p√©rdida de entrop√≠a cruzada**, si la opci√≥n `multi_class` se configura a `multinomial` (Actualmente la opci√≥n `multinomial` es soportada s√≥lo por los solucionadores ‚Äòlbfgs‚Äô, ‚Äòsag‚Äô, ‚Äòsaga‚Äô y ‚Äònewton-cg‚Äô.).
+
+> üéì Aqu√≠, el 'esquema' puede ser 'ovr' (one-vs-rest) o 'multinomial'. Ya que la regresi√≥n log√≠stica est√° dise√±ada realmente para soportar la clasificaci√≥n binaria, estos esquemas te permiten manejar mejor las tareas de clasificaci√≥n multiclase [fuente](https://machinelea
+rningmastery.com/one-vs-rest-and-one-vs-one-for-multi-class-classification/).
+
+> üéì El 'solucionador' es definido como ""el algoritmo a usar en el problema de optimizaci√≥n"" [fuente](https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html?highlight=logistic%20regressio#sklearn.linear_model.LogisticRegression).
+
+
+Scikit-learn ofrece esta tabla para explicar como los solucionadores manejan distintos desaf√≠os presentados por distintas clases de datos estructurados:
+
+![solucionadores](../images/solvers.png)
+
+## Ejercicio - divide los datos
+
+Nos podemos enfocar en la regresi√≥n log√≠stica para nuestra primer prueba de entrenamiento ya que reci√©n aprendiste sobre esto √∫ltimo en la lecci√≥n anterior.
+Divide tus datos en los grupos 'training' y 'testing' al llamar a `train_test_split()`:
+
+```python
+X_train, X_test, y_train, y_test = train_test_split(cuisines_feature_df, cuisines_label_df, test_size=0.3)
+```
+
+## Ejercicio - aplica la regresi√≥n log√≠stica
+
+Ya que est√°s usando un caso multiclase, necesitas elegir qu√© _esquema_ usar y qu√© _solucionador_ configurar. Usa LogisticRegression con un ajuste multiclase y el solucionador **liblinear** para entrenar.
+
+1. Crea un regresi√≥n log√≠stica con un multi_class configurado a `ovr` y el solucionador ajustado a `liblinear`:
+
+    ```python
+    lr = LogisticRegression(multi_class='ovr',solver='liblinear')
+    model = lr.fit(X_train, np.ravel(y_train))
+    
+    accuracy = model.score(X_test, y_test)
+    print (""Accuracy is {}"".format(accuracy))
+    ```
+
+    ‚úÖ Prueba un solucionador diferente como `lbfgs`, el cual suele ser configurado por defecto
+
+    > Nota, usa la funci√≥n de Pandas [`ravel`](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.ravel.html) para aplanar tus datos cuando sea necesario.
+
+    ¬°La precisi√≥n es buena por enciam del **80%*!
+
+1. Puedes ver este modelo en acci√≥n al probar una fila de datos (#50):
+
+    ```python
+    print(f'ingredients: {X_test.iloc[50][X_test.iloc[50]!=0].keys()}')
+    print(f'cuisine: {y_test.iloc[50]}')
+    ```
+
+    El resultado es impreso:
+
+   ```output
+   ingredients: Index(['cilantro', 'onion', 'pea', 'potato', 'tomato', 'vegetable_oil'], dtype='object')
+   cuisine: indian
+   ```
+
+   ‚úÖ Prueba un n√∫mero de fila distinto y revisa los resultados
+
+1. Indagando m√°s, puedes revisar la precisi√≥n de esta predicci√≥n:
+
+    ```python
+    test= X_test.iloc[50].values.reshape(-1, 1).T
+    proba = model.predict_proba(test)
+    classes = model.classes_
+    resultdf = pd.DataFrame(data=proba, columns=classes)
+    
+    topPrediction = resultdf.T.sort_values(by=[0], ascending = [False])
+    topPrediction.head()
+    ```
+
+    El resultado es impreso - La cocina India es su mejor conjetura, con buena probabilidad:
+
+    |          |        0 |
+    | -------: | -------: |
+    |   indian | 0.715851 |
+    |  chinese | 0.229475 |
+    | japanese | 0.029763 |
+    |   korean | 0.017277 |
+    |     thai | 0.007634 |
+
+    ‚úÖ ¬øPuedes explicar por qu√© el modelo est√° muy seguro esta es una cocina India?
+
+1. Obt√©n mayor detalle al imprimir un reporte de clasificaci√≥n, como lo hiciste en las lecciones de regresi√≥n:
+
+    ```python
+    y_pred = model.predict(X_test)
+    print(classification_report(y_test,y_pred))
+    ```
+
+    |              | precision | recall | f1-score | support |
+    | ------------ | --------- | ------ | -------- | ------- |
+    | chinese      | 0.73      | 0.71   | 0.72     | 229     |
+    | indian       | 0.91      | 0.93   | 0.92     | 254     |
+    | japanese     | 0.70      | 0.75   | 0.72     | 220     |
+    | korean       | 0.86      | 0.76   | 0.81     | 242     |
+    | thai         | 0.79      | 0.85   | 0.82     | 254     |
+    | accuracy     | 0.80      | 1199   |          |         |
+    | macro avg    | 0.80      | 0.80   | 0.80     | 1199    |
+    | weighted avg | 0.80      | 0.80   | 0.80     | 1199    |
+
+## üöÄDesaf√≠o
+
+En esta lecci√≥n, usaste tus datos limpios para construir un modelo de aprendizaje autom√°tico que puede predecir una cocina nacional basado en una serie de ingredientes. Toma un tiempo para leer las diversas opciones que provee Scikit-learn para clasificar los datos. Profundiza en el concepto de 'solucionador' para comprender que sucede detr√°s de escena.
+
+## [Examen posterior a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/22/)
+
+## Revisi√≥n y autoestudio
+
+Indaga un poco m√°s en las matem√°tica detr√°s de la regresi√≥n log√≠stica en [esta lecci√≥n](https://people.eecs.berkeley.edu/~russell/classes/cs194/f11/lectures/CS194%20Fall%202011%20Lecture%2006.pdf)",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813344451,hereje,3022824,2022-02-23T21:42:09+00:00,2022-02-23T21:42:09+00:00,Done!,True,4-Classification/2-Classifiers-1/translations/README.es.md,,"@@ -0,0 +1,245 @@
+# Clasificadores de cocina 1
+
+En esta lecci√≥n, usar√°s el conjunto de datos que guardaste en la √∫ltima lecci√≥n llena de equilibrio, datos limpios todo sobre cocinas.
+
+Usar√°s este conjunto de datos con una variedad de clasificadores para _predecir una cocina nacional dada basado en un grupo de ingredientes_. Mientras lo haces, aprender√°s m√°s acerca de algunas formas en que los algoritmos pueden ser aprovechados para las tareas de clasificaci√≥n.
+
+## [Examen previo a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/21/)
+
+# Preparaci√≥n
+
+Asumiendo que completaste la [Lecci√≥n 1](../../1-Introduction/translations/README.es.md), asegura que existe un archivo _cleaned_cuisines.csv_  en el directorio ra√≠z `/data` para estas cuatro lecciones.
+
+## Ejercicio - predice una cocina nacional
+
+1. Trabaja en el directorio _notebook.ipynb_ de la lecci√≥n, importa ese archivo junto con la biblioteca Pandas:
+
+    ```python
+    import pandas as pd
+    cuisines_df = pd.read_csv(""../data/cleaned_cuisines.csv"")
+    cuisines_df.head()
+    ```
+
+    Los datos lucen as√≠:
+
+|     | Unnamed: 0 | cuisine | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood | yam | yeast | yogurt | zucchini |
+| --- | ---------- | ------- | ------ | -------- | ----- | ---------- | ----- | ------------ | ------- | -------- | --- | ------- | ----------- | ---------- | ----------------------- | ---- | ---- | --- | ----- | ------ | -------- |
+| 0   | 0          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 1   | 1          | indian  | 1      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 2   | 2          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 3   | 3          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 4   | 4          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 1      | 0        |
+  
+
+1. Ahora, importa varias bibliotecas m√°s:
+
+    ```python
+    from sklearn.linear_model import LogisticRegression
+    from sklearn.model_selection import train_test_split, cross_val_score
+    from sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report, precision_recall_curve
+    from sklearn.svm import SVC
+    import numpy as np
+    ```
+
+1. Divide las coordenadas X e Y en dos diferentes dataframes para entrenar. `cuisine` puede ser el dataframe de las etiquetas:
+
+    ```python
+    cuisines_label_df = cuisines_df['cuisine']
+    cuisines_label_df.head()
+    ```
+
+    It will look like this:",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813344648,hereje,3022824,2022-02-23T21:42:22+00:00,2022-02-23T21:42:22+00:00,Done!,True,4-Classification/2-Classifiers-1/translations/README.es.md,,"@@ -0,0 +1,245 @@
+# Clasificadores de cocina 1
+
+En esta lecci√≥n, usar√°s el conjunto de datos que guardaste en la √∫ltima lecci√≥n llena de equilibrio, datos limpios todo sobre cocinas.
+
+Usar√°s este conjunto de datos con una variedad de clasificadores para _predecir una cocina nacional dada basado en un grupo de ingredientes_. Mientras lo haces, aprender√°s m√°s acerca de algunas formas en que los algoritmos pueden ser aprovechados para las tareas de clasificaci√≥n.
+
+## [Examen previo a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/21/)
+
+# Preparaci√≥n
+
+Asumiendo que completaste la [Lecci√≥n 1](../../1-Introduction/translations/README.es.md), asegura que existe un archivo _cleaned_cuisines.csv_  en el directorio ra√≠z `/data` para estas cuatro lecciones.
+
+## Ejercicio - predice una cocina nacional
+
+1. Trabaja en el directorio _notebook.ipynb_ de la lecci√≥n, importa ese archivo junto con la biblioteca Pandas:
+
+    ```python
+    import pandas as pd
+    cuisines_df = pd.read_csv(""../data/cleaned_cuisines.csv"")
+    cuisines_df.head()
+    ```
+
+    Los datos lucen as√≠:
+
+|     | Unnamed: 0 | cuisine | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood | yam | yeast | yogurt | zucchini |
+| --- | ---------- | ------- | ------ | -------- | ----- | ---------- | ----- | ------------ | ------- | -------- | --- | ------- | ----------- | ---------- | ----------------------- | ---- | ---- | --- | ----- | ------ | -------- |
+| 0   | 0          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 1   | 1          | indian  | 1      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 2   | 2          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 3   | 3          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 4   | 4          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 1      | 0        |
+  
+
+1. Ahora, importa varias bibliotecas m√°s:
+
+    ```python
+    from sklearn.linear_model import LogisticRegression
+    from sklearn.model_selection import train_test_split, cross_val_score
+    from sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report, precision_recall_curve
+    from sklearn.svm import SVC
+    import numpy as np
+    ```
+
+1. Divide las coordenadas X e Y en dos diferentes dataframes para entrenar. `cuisine` puede ser el dataframe de las etiquetas:
+
+    ```python
+    cuisines_label_df = cuisines_df['cuisine']
+    cuisines_label_df.head()
+    ```
+
+    It will look like this:
+
+    ```output
+    0    indian
+    1    indian
+    2    indian
+    3    indian
+    4    indian
+    Name: cuisine, dtype: object
+    ```
+
+1. Elimina la columna `Unnamed: 0` y la columna `cuisine`, llamando a `drop()`. Guarda el resto de los datos como caracter√≠sticas entrenables:
+
+    ```python
+    cuisines_feature_df = cuisines_df.drop(['Unnamed: 0', 'cuisine'], axis=1)
+    cuisines_feature_df.head()
+    ```
+
+    Tus caracter√≠sticas lucen as√≠:
+
+|      | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | artemisia | artichoke |  ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood |  yam | yeast | yogurt | zucchini |
+| ---: | -----: | -------: | ----: | ---------: | ----: | -----------: | ------: | -------: | --------: | --------: | ---: | ------: | ----------: | ---------: | ----------------------: | ---: | ---: | ---: | ----: | -----: | -------: |
+|    0 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    1 |      1 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    2 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    3 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    4 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      1 |        0 | 0 |
+
+¬°Ahora ya est√°s listo para entrenar tu modelo!
+
+## Eligiendo tu clasificador
+
+Ahora que tus datos est√°n limpios y listos para entrenamiento, tienes que decidir qu√© algoritmo usar para hacer el trabajo.
+
+Scikit-learn agrupa clasificaciones bajo aprendizaje supervisado, y en esa categor√≠a encontrar√°s muchas formas de clasificar. [La variedad](https://scikit-learn.org/stable/supervised_learning.html) es bastante abrumadora a primera vista. Los siguientes m√©todos incluyen t√©cnicas de clasificaci√≥n:
+
+- Modelos lineales
+- M√°quinas de vectores de soporte
+- Descenso de gradiente estoc√°stico
+- Vecinos m√°s cercanos
+- Procesos Gaussianos
+- √Årboles de decisi√≥n
+- M√©todos de conjunto (clasificador de votos)
+- Algoritmos multiclase y multisalida (clasificaci√≥n multiclase y multietiqueta, clasificaci√≥n multiclase-multisalida)
+
+> Tambi√©n puedes usar [redes neuronales para clasificar los datos](https://scikit-learn.org/stable/modules/neural_networks_supervised.html#classification), pero eso est√° fuera del alcance de esta lecci√≥n.
+
+### ¬øQu√© clasificador usar?
+
+As√≠ que, ¬øqu√© clasificador deber√≠as elegir? A menudo, el ejecutar varios y buscar un buen resultado es una forma de probar. Scikit-lean ofrece una [comparaci√≥n lado a lado](https://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html) en un conjunto de datos creado, comparando KNeighbors, SVC two ways, GaussianProcessClassifier, DecisionTreeClassifier, RandomForestClassifier, MLPClassifier, AdaBoostClassifier, GaussianNB y QuadraticDiscrinationAnalysis, mostrando los resultados visualizados:
+
+![Comparaci√≥n de clasificadores](../images/comparison.png)
+> Gr√°ficos generados en la documentaci√≥n de Scikit-learn
+
+> AutoML resuelve este problema de forma pulcra al ejecutar estas comparaciones en la nube, permiti√©ndote elegir el mejor algoritmo para tus datos. Pru√©balo [aqu√≠](https://docs.microsoft.com/learn/modules/automate-model-selection-with-azure-automl/?WT.mc_id=academic-15963-cxa)
+
+### Un mejor enfoque
+
+Una mejor forma a estar adivinando, es seguir las ideas de esta [hoja de trucos de ML](https://docs.microsoft.com/azure/machine-learning/algorithm-cheat-sheet?WT.mc_id=academic-15963-cxa). Aqu√≠, descubrimos que, para nuestro problema multiclase, tenemos algunas opciones:
+
+![Hoja de trucos para problemas multiclase](../images/cheatsheet.png)
+> Una secci√≥n de la hoja de trucos de algoritmos de Microsoft, detallando opciones de clasificaci√≥n multiclase.
+
+‚úÖ !Descarga esta hoja de trucos, impr√≠mela y cu√©lgala en tu pared!",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,861730997,813344932,hereje,3022824,2022-02-23T21:42:39+00:00,2022-02-23T21:42:39+00:00,Thanks for your help!,True,4-Classification/2-Classifiers-1/translations/README.es.md,,"@@ -0,0 +1,245 @@
+# Clasificadores de cocina 1
+
+En esta lecci√≥n, usar√°s el conjunto de datos que guardaste en la √∫ltima lecci√≥n llena de equilibrio, datos limpios todo sobre cocinas.
+
+Usar√°s este conjunto de datos con una variedad de clasificadores para _predecir una cocina nacional dada basado en un grupo de ingredientes_. Mientras lo haces, aprender√°s m√°s acerca de algunas formas en que los algoritmos pueden ser aprovechados para las tareas de clasificaci√≥n.
+
+## [Examen previo a la lecci√≥n](https://white-water-09ec41f0f.azurestaticapps.net/quiz/21/)
+
+# Preparaci√≥n
+
+Asumiendo que completaste la [Lecci√≥n 1](../../1-Introduction/translations/README.es.md), asegura que existe un archivo _cleaned_cuisines.csv_  en el directorio ra√≠z `/data` para estas cuatro lecciones.
+
+## Ejercicio - predice una cocina nacional
+
+1. Trabaja en el directorio _notebook.ipynb_ de la lecci√≥n, importa ese archivo junto con la biblioteca Pandas:
+
+    ```python
+    import pandas as pd
+    cuisines_df = pd.read_csv(""../data/cleaned_cuisines.csv"")
+    cuisines_df.head()
+    ```
+
+    Los datos lucen as√≠:
+
+|     | Unnamed: 0 | cuisine | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood | yam | yeast | yogurt | zucchini |
+| --- | ---------- | ------- | ------ | -------- | ----- | ---------- | ----- | ------------ | ------- | -------- | --- | ------- | ----------- | ---------- | ----------------------- | ---- | ---- | --- | ----- | ------ | -------- |
+| 0   | 0          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 1   | 1          | indian  | 1      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 2   | 2          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 3   | 3          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 0      | 0        |
+| 4   | 4          | indian  | 0      | 0        | 0     | 0          | 0     | 0            | 0       | 0        | ... | 0       | 0           | 0          | 0                       | 0    | 0    | 0   | 0     | 1      | 0        |
+  
+
+1. Ahora, importa varias bibliotecas m√°s:
+
+    ```python
+    from sklearn.linear_model import LogisticRegression
+    from sklearn.model_selection import train_test_split, cross_val_score
+    from sklearn.metrics import accuracy_score,precision_score,confusion_matrix,classification_report, precision_recall_curve
+    from sklearn.svm import SVC
+    import numpy as np
+    ```
+
+1. Divide las coordenadas X e Y en dos diferentes dataframes para entrenar. `cuisine` puede ser el dataframe de las etiquetas:
+
+    ```python
+    cuisines_label_df = cuisines_df['cuisine']
+    cuisines_label_df.head()
+    ```
+
+    It will look like this:
+
+    ```output
+    0    indian
+    1    indian
+    2    indian
+    3    indian
+    4    indian
+    Name: cuisine, dtype: object
+    ```
+
+1. Elimina la columna `Unnamed: 0` y la columna `cuisine`, llamando a `drop()`. Guarda el resto de los datos como caracter√≠sticas entrenables:
+
+    ```python
+    cuisines_feature_df = cuisines_df.drop(['Unnamed: 0', 'cuisine'], axis=1)
+    cuisines_feature_df.head()
+    ```
+
+    Tus caracter√≠sticas lucen as√≠:
+
+|      | almond | angelica | anise | anise_seed | apple | apple_brandy | apricot | armagnac | artemisia | artichoke |  ... | whiskey | white_bread | white_wine | whole_grain_wheat_flour | wine | wood |  yam | yeast | yogurt | zucchini |
+| ---: | -----: | -------: | ----: | ---------: | ----: | -----------: | ------: | -------: | --------: | --------: | ---: | ------: | ----------: | ---------: | ----------------------: | ---: | ---: | ---: | ----: | -----: | -------: |
+|    0 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    1 |      1 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    2 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    3 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      0 |        0 | 0 |
+|    4 |      0 |        0 |     0 |          0 |     0 |            0 |       0 |        0 |         0 |         0 |  ... |       0 |           0 |          0 |                       0 |    0 |    0 |    0 |     0 |      1 |        0 | 0 |
+
+¬°Ahora ya est√°s listo para entrenar tu modelo!
+
+## Eligiendo tu clasificador
+
+Ahora que tus datos est√°n limpios y listos para entrenamiento, tienes que decidir qu√© algoritmo usar para hacer el trabajo.
+
+Scikit-learn agrupa clasificaciones bajo aprendizaje supervisado, y en esa categor√≠a encontrar√°s muchas formas de clasificar. [La variedad](https://scikit-learn.org/stable/supervised_learning.html) es bastante abrumadora a primera vista. Los siguientes m√©todos incluyen t√©cnicas de clasificaci√≥n:
+
+- Modelos lineales
+- M√°quinas de vectores de soporte
+- Descenso de gradiente estoc√°stico
+- Vecinos m√°s cercanos
+- Procesos Gaussianos
+- √Årboles de decisi√≥n
+- M√©todos de conjunto (clasificador de votos)
+- Algoritmos multiclase y multisalida (clasificaci√≥n multiclase y multietiqueta, clasificaci√≥n multiclase-multisalida)
+
+> Tambi√©n puedes usar [redes neuronales para clasificar los datos](https://scikit-learn.org/stable/modules/neural_networks_supervised.html#classification), pero eso est√° fuera del alcance de esta lecci√≥n.
+
+### ¬øQu√© clasificador usar?
+
+As√≠ que, ¬øqu√© clasificador deber√≠as elegir? A menudo, el ejecutar varios y buscar un buen resultado es una forma de probar. Scikit-lean ofrece una [comparaci√≥n lado a lado](https://scikit-learn.org/stable/auto_examples/classification/plot_classifier_comparison.html) en un conjunto de datos creado, comparando KNeighbors, SVC two ways, GaussianProcessClassifier, DecisionTreeClassifier, RandomForestClassifier, MLPClassifier, AdaBoostClassifier, GaussianNB y QuadraticDiscrinationAnalysis, mostrando los resultados visualizados:
+
+![Comparaci√≥n de clasificadores](../images/comparison.png)
+> Gr√°ficos generados en la documentaci√≥n de Scikit-learn
+
+> AutoML resuelve este problema de forma pulcra al ejecutar estas comparaciones en la nube, permiti√©ndote elegir el mejor algoritmo para tus datos. Pru√©balo [aqu√≠](https://docs.microsoft.com/learn/modules/automate-model-selection-with-azure-automl/?WT.mc_id=academic-15963-cxa)
+
+### Un mejor enfoque
+
+Una mejor forma a estar adivinando, es seguir las ideas de esta [hoja de trucos de ML](https://docs.microsoft.com/azure/machine-learning/algorithm-cheat-sheet?WT.mc_id=academic-15963-cxa). Aqu√≠, descubrimos que, para nuestro problema multiclase, tenemos algunas opciones:
+
+![Hoja de trucos para problemas multiclase](../images/cheatsheet.png)
+> Una secci√≥n de la hoja de trucos de algoritmos de Microsoft, detallando opciones de clasificaci√≥n multiclase.
+
+‚úÖ !Descarga esta hoja de trucos, impr√≠mela y cu√©lgala en tu pared!
+
+### Razonamiento
+
+Veamos si podemos razonar nuestro camino a trav√©s de diferentes enfoques dadas las restricciones que tenemos:
+
+- **Las redes neuronales son muy pesadas**. Dado nuestro conjunto de datos limpio aunque m√≠nimo, y el hecho que estamos ejecutando el entrenamiento de forma local v√≠a los notebooks, las redes neuronales son demasiado pesadas para esta tarea.
+- **Sin clasificador de dos clases**. No usamos clasificador de dos clases, por lo que descarta un uno-contra-todos.
+- **El √°rbol de decisi√≥n o la regresi√≥n log√≠stica podr√≠a funcionar**. Un √°rbolo de decisi√≥n podr√≠a funcionar, o la regresi√≥n log√≠stica para datos multiclase.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813131025,Stevengez,53009062,2022-02-23T17:19:39+00:00,2022-02-23T18:10:48+00:00,"```suggestion
Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente la biblioteca Scikit-learn y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813139719,Stevengez,53009062,2022-02-23T17:29:14+00:00,2022-02-23T18:10:48+00:00,"```suggestion
- Intenta crear los proyectos al comprender las lecciones en lugar de ejecutar el c√≥digo de la soluci√≥n; sin embargo ese c√≥digo se encuentra disponible en los directorios `/solution` en cada lecci√≥n orientada a proyecto.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813150907,Stevengez,53009062,2022-02-23T17:41:32+00:00,2022-02-23T18:10:48+00:00,"```suggestion
- Despu√©s de completar un grupo de lecciones, visita el [tablero de discusi√≥n](https://github.com/microsoft/ML-For-Beginners/discussions) y ""aprende en voz alta"" llenando la r√∫brica PAT apropiada. Un 'PAT' es una herramienta de evaluaci√≥n del progreso que es una r√∫brica la cual llenas para avanzar en tu aprendizaje. Tambi√©n puede reaccionar a otros PATs y as√≠ aprender juntos.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813154252,Stevengez,53009062,2022-02-23T17:45:26+00:00,2022-02-23T18:10:48+00:00,"```suggestion
> Para aprender m√°s, recomendamos seguir estos m√≥dulos y rutas de aprendizaje de [Microsoft Learn](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa).
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813161369,Stevengez,53009062,2022-02-23T17:53:41+00:00,2022-02-23T18:10:48+00:00,"```suggestion
Al asegurar que el contenido se alinea con los proyectos, el proceso se hace m√°s atractivo par los estudiantes y la retenci√≥n de conceptos incrementar√°. Adem√°s, un peque√±o examen antes de cada clase para establecer la intenci√≥n del estudiante de aprender un tema, mientras el segundo examen despu√©s de la clase asegura una mayor retenci√≥n. Este plan de estudios fue dise√±ado para ser flexible y divertido y puede se tomado en su totalidad o en partes. Los proyectos comienzan peque√±os y van incrementando en complejidad al final del ciclo de 12 semanas. Este plan de estudios tambi√©n incluye una nota al final sobre aplicaciones del aprendizaje autom√°tico en el mundo real, la cual puede ser usada como c≈ïeditos extra o como base para discusi√≥n.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813169642,Stevengez,53009062,2022-02-23T18:03:18+00:00,2022-02-23T18:10:48+00:00,"```suggestion
> **Una nota acerca de los ex√°menes**: Todos los ex√°menes est√°n contenidos [en esta app](https://white-water-09ec41f0f.azurestaticapps.net/), para un total de 52 ex√°menes de 3 preguntas cada uno, Ellos est√°n vinculados dentro de las lecciones pero la aplicaci√≥n de ex√°menes puede ser ejecutada localmente; sigue las instrucciones en el directorio `quiz-app`.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813177965,abrildur,71578178,2022-02-23T18:13:52+00:00,2022-02-23T22:07:17+00:00,"Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'.  ¬°Tambi√©n acompa√±a estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813200355,abrildur,71578178,2022-02-23T18:39:55+00:00,2022-02-23T22:07:17+00:00,"Viaja con nosotros alrededor del mundo mientras aplicamos estas t√©cnicas cl√°sicas a los datos de distintas √°reas del mundo. Cada lecci√≥n incluye:

- Ex√°menes previos y posteriores a cada lecci√≥n
- Instrucciones escritas para completar dicha lecci√≥n
- Una soluci√≥n
- Una tarea y m√°s. 

Nuestra ense√±anza basada en proyectos, te permite aprender mientras practicas; esta es una forma aprobada para que adquieras nuevas habilidades.",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813393172,hereje,3022824,2022-02-23T22:48:08+00:00,2022-02-23T22:48:08+00:00,Done!,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813393326,hereje,3022824,2022-02-23T22:48:22+00:00,2022-02-23T22:48:22+00:00,Done!,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813131025,Stevengez,53009062,2022-02-23T17:19:39+00:00,2022-02-23T18:10:48+00:00,"```suggestion
Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente la biblioteca Scikit-learn y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
```",True,translations/README.es.md,,"@@ -8,122 +8,119 @@
 [![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
 [![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
 
-# Machine Learning for Beginners - A Curriculum
+# Aprendizaje autom√°tico para principiantes - Un plan de estudios
 
-> üåç Travel around the world as we explore Machine Learning by means of world cultures üåç
+> üåç Viaja alrededor del mundo mientras exploramos el aprendizaje autom√°tico a trav√©s de las culturas del mundo üåç
 
-Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about **Machine Learning**. In this curriculum, you will learn about what is sometimes called **classic machine learning**, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our ['Data Science for Beginners' curriculum](https://aka.ms/datascience-beginners), as well!
+Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813139719,Stevengez,53009062,2022-02-23T17:29:14+00:00,2022-02-23T18:10:48+00:00,"```suggestion
- Intenta crear los proyectos al comprender las lecciones en lugar de ejecutar el c√≥digo de la soluci√≥n; sin embargo ese c√≥digo se encuentra disponible en los directorios `/solution` en cada lecci√≥n orientada a proyecto.
```",True,translations/README.es.md,,"@@ -8,122 +8,119 @@
 [![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
 [![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
 
-# Machine Learning for Beginners - A Curriculum
+# Aprendizaje autom√°tico para principiantes - Un plan de estudios
 
-> üåç Travel around the world as we explore Machine Learning by means of world cultures üåç
+> üåç Viaja alrededor del mundo mientras exploramos el aprendizaje autom√°tico a trav√©s de las culturas del mundo üåç
 
-Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about **Machine Learning**. In this curriculum, you will learn about what is sometimes called **classic machine learning**, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our ['Data Science for Beginners' curriculum](https://aka.ms/datascience-beginners), as well!
+Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
 
-Travel with us around the world as we apply these classic techniques to data from many areas of the world. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment, and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.
+Viaja con nosotros alrededor del mundo mientras aplicamos estas t√©cnicas cl√°sicas a los datos de distintas √°reas del mundo. Cada lecci√≥n incluye ex√°menes previos y posteriores a la lecci√≥n, instrucciones escritas para completar la lecci√≥n, una soluci√≥n, una asignaci√≥n y m√°s. Nuestra pedagog√≠a basa en proyectos te permite aprender mientras construyes, una forma probada para que las nuevas habilidades se te 'peguen'.
 
-**‚úçÔ∏è Hearty thanks to our authors** Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, and Amy Boyd
+**‚úçÔ∏è Agradecimientos encarecidos** a Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, y Amy Boyd.
 
-**üé® Thanks as well to our illustrators** Tomomi Imura, Dasani Madipalli, and Jen Looper
+**üé® Gracias tambi√©n a nuestros ilustradores** Tomomi Imura, Dasani Madipalli, y Jen Looper.
 
-**üôè Special thanks üôè to our Microsoft Student Ambassador authors, reviewers, and content contributors**, notably Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, and Snigdha Agarwal
+**üôè Agradecimientos especiales üôè a nuestros  autores de Embajadores Estudiantiles de Microsoft, revisores, y colaboradores de contenido**, notablemente a Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, y Snigdha Agarwal.
 
-**ü§© Extra gratitude to Microsoft Student Ambassador Eric Wanjau for our R lessons!**
+**ü§© ¬°Agradecimiento adicional al embajador estudiantil de Microsoft Eric Wanjau por nuestras lecciones de R!**
 
 ---
 
-# Getting Started
+# Empezando
 
-**Students**, to use this curriculum, fork the entire repo to your own GitHub account and complete the exercises on your own or with a group:
+**Estudiantes**, para usar este plan de estudios, realiza un fork del repositorio completo en tu cuenta de Github y completa los ejercicios por ti mismo o en grupo:
 
-- Start with a pre-lecture quiz.
-- Read the lecture and complete the activities, pausing and reflecting at each knowledge check.
-- Try to create the projects by comprehending the lessons rather than running the solution code; however that code is available in the `/solution` folders in each project-oriented lesson.
-- Take the post-lecture quiz.
-- Complete the challenge.
-- Complete the assignment.
-- After completing a lesson group, visit the [Discussion Board](https://github.com/microsoft/ML-For-Beginners/discussions) and ""learn out loud"" by filling out the appropriate PAT rubric. A 'PAT' is a Progress Assessment Tool that is a rubric you fill out to further your learning. You can also react to other PATs so we can learn together.
+- Comienza con un examen previo a la lecci√≥n.
+- Lee las lecciones y completa las actividades, pausando y reflexionando en cada verificaci√≥n de conocimiento.
+- Intenta crear los proyectos al comprender las lecciones en lugar de ejecutar la soluci√≥n en c√≥digo; sin embargo ese c√≥digo se encuentra disponible en los directorios `/solution` en cada lecci√≥n orientada a proyecto.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813150907,Stevengez,53009062,2022-02-23T17:41:32+00:00,2022-02-23T18:10:48+00:00,"```suggestion
- Despu√©s de completar un grupo de lecciones, visita el [tablero de discusi√≥n](https://github.com/microsoft/ML-For-Beginners/discussions) y ""aprende en voz alta"" llenando la r√∫brica PAT apropiada. Un 'PAT' es una herramienta de evaluaci√≥n del progreso que es una r√∫brica la cual llenas para avanzar en tu aprendizaje. Tambi√©n puede reaccionar a otros PATs y as√≠ aprender juntos.
```",True,translations/README.es.md,,"@@ -8,122 +8,119 @@
 [![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
 [![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
 
-# Machine Learning for Beginners - A Curriculum
+# Aprendizaje autom√°tico para principiantes - Un plan de estudios
 
-> üåç Travel around the world as we explore Machine Learning by means of world cultures üåç
+> üåç Viaja alrededor del mundo mientras exploramos el aprendizaje autom√°tico a trav√©s de las culturas del mundo üåç
 
-Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about **Machine Learning**. In this curriculum, you will learn about what is sometimes called **classic machine learning**, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our ['Data Science for Beginners' curriculum](https://aka.ms/datascience-beginners), as well!
+Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
 
-Travel with us around the world as we apply these classic techniques to data from many areas of the world. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment, and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.
+Viaja con nosotros alrededor del mundo mientras aplicamos estas t√©cnicas cl√°sicas a los datos de distintas √°reas del mundo. Cada lecci√≥n incluye ex√°menes previos y posteriores a la lecci√≥n, instrucciones escritas para completar la lecci√≥n, una soluci√≥n, una asignaci√≥n y m√°s. Nuestra pedagog√≠a basa en proyectos te permite aprender mientras construyes, una forma probada para que las nuevas habilidades se te 'peguen'.
 
-**‚úçÔ∏è Hearty thanks to our authors** Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, and Amy Boyd
+**‚úçÔ∏è Agradecimientos encarecidos** a Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, y Amy Boyd.
 
-**üé® Thanks as well to our illustrators** Tomomi Imura, Dasani Madipalli, and Jen Looper
+**üé® Gracias tambi√©n a nuestros ilustradores** Tomomi Imura, Dasani Madipalli, y Jen Looper.
 
-**üôè Special thanks üôè to our Microsoft Student Ambassador authors, reviewers, and content contributors**, notably Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, and Snigdha Agarwal
+**üôè Agradecimientos especiales üôè a nuestros  autores de Embajadores Estudiantiles de Microsoft, revisores, y colaboradores de contenido**, notablemente a Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, y Snigdha Agarwal.
 
-**ü§© Extra gratitude to Microsoft Student Ambassador Eric Wanjau for our R lessons!**
+**ü§© ¬°Agradecimiento adicional al embajador estudiantil de Microsoft Eric Wanjau por nuestras lecciones de R!**
 
 ---
 
-# Getting Started
+# Empezando
 
-**Students**, to use this curriculum, fork the entire repo to your own GitHub account and complete the exercises on your own or with a group:
+**Estudiantes**, para usar este plan de estudios, realiza un fork del repositorio completo en tu cuenta de Github y completa los ejercicios por ti mismo o en grupo:
 
-- Start with a pre-lecture quiz.
-- Read the lecture and complete the activities, pausing and reflecting at each knowledge check.
-- Try to create the projects by comprehending the lessons rather than running the solution code; however that code is available in the `/solution` folders in each project-oriented lesson.
-- Take the post-lecture quiz.
-- Complete the challenge.
-- Complete the assignment.
-- After completing a lesson group, visit the [Discussion Board](https://github.com/microsoft/ML-For-Beginners/discussions) and ""learn out loud"" by filling out the appropriate PAT rubric. A 'PAT' is a Progress Assessment Tool that is a rubric you fill out to further your learning. You can also react to other PATs so we can learn together.
+- Comienza con un examen previo a la lecci√≥n.
+- Lee las lecciones y completa las actividades, pausando y reflexionando en cada verificaci√≥n de conocimiento.
+- Intenta crear los proyectos al comprender las lecciones en lugar de ejecutar la soluci√≥n en c√≥digo; sin embargo ese c√≥digo se encuentra disponible en los directorios `/solution` en cada lecci√≥n orientada a proyecto.
+- Realiza el examen posterior a la lecci√≥n.
+- Completa el desaf√≠o.
+- Completa la asignaci√≥n.
+- Despu√©s de completar un grupo de lecciones, visita el [tablero de discusi√≥n](https://github.com/microsoft/ML-For-Beginners/discussions) y ""aprende en voz alta"" al llenar la r√∫brica PAT apropiada. Un 'PAT' es una herramienta de evaluaci√≥n del progreso que es una r√∫brica la cual llenas para avanzar en tu aprendizaje. Tambi√©n puede reaccionar a otros PATs y as√≠ aprender juntos.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813154252,Stevengez,53009062,2022-02-23T17:45:26+00:00,2022-02-23T18:10:48+00:00,"```suggestion
> Para aprender m√°s, recomendamos seguir estos m√≥dulos y rutas de aprendizaje de [Microsoft Learn](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa).
```",True,translations/README.es.md,,"@@ -8,122 +8,119 @@
 [![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
 [![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
 
-# Machine Learning for Beginners - A Curriculum
+# Aprendizaje autom√°tico para principiantes - Un plan de estudios
 
-> üåç Travel around the world as we explore Machine Learning by means of world cultures üåç
+> üåç Viaja alrededor del mundo mientras exploramos el aprendizaje autom√°tico a trav√©s de las culturas del mundo üåç
 
-Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about **Machine Learning**. In this curriculum, you will learn about what is sometimes called **classic machine learning**, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our ['Data Science for Beginners' curriculum](https://aka.ms/datascience-beginners), as well!
+Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
 
-Travel with us around the world as we apply these classic techniques to data from many areas of the world. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment, and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.
+Viaja con nosotros alrededor del mundo mientras aplicamos estas t√©cnicas cl√°sicas a los datos de distintas √°reas del mundo. Cada lecci√≥n incluye ex√°menes previos y posteriores a la lecci√≥n, instrucciones escritas para completar la lecci√≥n, una soluci√≥n, una asignaci√≥n y m√°s. Nuestra pedagog√≠a basa en proyectos te permite aprender mientras construyes, una forma probada para que las nuevas habilidades se te 'peguen'.
 
-**‚úçÔ∏è Hearty thanks to our authors** Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, and Amy Boyd
+**‚úçÔ∏è Agradecimientos encarecidos** a Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, y Amy Boyd.
 
-**üé® Thanks as well to our illustrators** Tomomi Imura, Dasani Madipalli, and Jen Looper
+**üé® Gracias tambi√©n a nuestros ilustradores** Tomomi Imura, Dasani Madipalli, y Jen Looper.
 
-**üôè Special thanks üôè to our Microsoft Student Ambassador authors, reviewers, and content contributors**, notably Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, and Snigdha Agarwal
+**üôè Agradecimientos especiales üôè a nuestros  autores de Embajadores Estudiantiles de Microsoft, revisores, y colaboradores de contenido**, notablemente a Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, y Snigdha Agarwal.
 
-**ü§© Extra gratitude to Microsoft Student Ambassador Eric Wanjau for our R lessons!**
+**ü§© ¬°Agradecimiento adicional al embajador estudiantil de Microsoft Eric Wanjau por nuestras lecciones de R!**
 
 ---
 
-# Getting Started
+# Empezando
 
-**Students**, to use this curriculum, fork the entire repo to your own GitHub account and complete the exercises on your own or with a group:
+**Estudiantes**, para usar este plan de estudios, realiza un fork del repositorio completo en tu cuenta de Github y completa los ejercicios por ti mismo o en grupo:
 
-- Start with a pre-lecture quiz.
-- Read the lecture and complete the activities, pausing and reflecting at each knowledge check.
-- Try to create the projects by comprehending the lessons rather than running the solution code; however that code is available in the `/solution` folders in each project-oriented lesson.
-- Take the post-lecture quiz.
-- Complete the challenge.
-- Complete the assignment.
-- After completing a lesson group, visit the [Discussion Board](https://github.com/microsoft/ML-For-Beginners/discussions) and ""learn out loud"" by filling out the appropriate PAT rubric. A 'PAT' is a Progress Assessment Tool that is a rubric you fill out to further your learning. You can also react to other PATs so we can learn together.
+- Comienza con un examen previo a la lecci√≥n.
+- Lee las lecciones y completa las actividades, pausando y reflexionando en cada verificaci√≥n de conocimiento.
+- Intenta crear los proyectos al comprender las lecciones en lugar de ejecutar la soluci√≥n en c√≥digo; sin embargo ese c√≥digo se encuentra disponible en los directorios `/solution` en cada lecci√≥n orientada a proyecto.
+- Realiza el examen posterior a la lecci√≥n.
+- Completa el desaf√≠o.
+- Completa la asignaci√≥n.
+- Despu√©s de completar un grupo de lecciones, visita el [tablero de discusi√≥n](https://github.com/microsoft/ML-For-Beginners/discussions) y ""aprende en voz alta"" al llenar la r√∫brica PAT apropiada. Un 'PAT' es una herramienta de evaluaci√≥n del progreso que es una r√∫brica la cual llenas para avanzar en tu aprendizaje. Tambi√©n puede reaccionar a otros PATs y as√≠ aprender juntos.
 
-> For further study, we recommend following these [Microsoft Learn](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa) modules and learning paths.
+> Para mayor estudio, recomendamos seguir estos m√≥dulos y rutas de aprendizaje de [Microsoft Learn](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa).",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813161369,Stevengez,53009062,2022-02-23T17:53:41+00:00,2022-02-23T18:10:48+00:00,"```suggestion
Al asegurar que el contenido se alinea con los proyectos, el proceso se hace m√°s atractivo par los estudiantes y la retenci√≥n de conceptos incrementar√°. Adem√°s, un peque√±o examen antes de cada clase para establecer la intenci√≥n del estudiante de aprender un tema, mientras el segundo examen despu√©s de la clase asegura una mayor retenci√≥n. Este plan de estudios fue dise√±ado para ser flexible y divertido y puede se tomado en su totalidad o en partes. Los proyectos comienzan peque√±os y van incrementando en complejidad al final del ciclo de 12 semanas. Este plan de estudios tambi√©n incluye una nota al final sobre aplicaciones del aprendizaje autom√°tico en el mundo real, la cual puede ser usada como c≈ïeditos extra o como base para discusi√≥n.
```",True,translations/README.es.md,,"@@ -8,122 +8,119 @@
 [![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
 [![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
 
-# Machine Learning for Beginners - A Curriculum
+# Aprendizaje autom√°tico para principiantes - Un plan de estudios
 
-> üåç Travel around the world as we explore Machine Learning by means of world cultures üåç
+> üåç Viaja alrededor del mundo mientras exploramos el aprendizaje autom√°tico a trav√©s de las culturas del mundo üåç
 
-Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about **Machine Learning**. In this curriculum, you will learn about what is sometimes called **classic machine learning**, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our ['Data Science for Beginners' curriculum](https://aka.ms/datascience-beginners), as well!
+Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
 
-Travel with us around the world as we apply these classic techniques to data from many areas of the world. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment, and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.
+Viaja con nosotros alrededor del mundo mientras aplicamos estas t√©cnicas cl√°sicas a los datos de distintas √°reas del mundo. Cada lecci√≥n incluye ex√°menes previos y posteriores a la lecci√≥n, instrucciones escritas para completar la lecci√≥n, una soluci√≥n, una asignaci√≥n y m√°s. Nuestra pedagog√≠a basa en proyectos te permite aprender mientras construyes, una forma probada para que las nuevas habilidades se te 'peguen'.
 
-**‚úçÔ∏è Hearty thanks to our authors** Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, and Amy Boyd
+**‚úçÔ∏è Agradecimientos encarecidos** a Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, y Amy Boyd.
 
-**üé® Thanks as well to our illustrators** Tomomi Imura, Dasani Madipalli, and Jen Looper
+**üé® Gracias tambi√©n a nuestros ilustradores** Tomomi Imura, Dasani Madipalli, y Jen Looper.
 
-**üôè Special thanks üôè to our Microsoft Student Ambassador authors, reviewers, and content contributors**, notably Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, and Snigdha Agarwal
+**üôè Agradecimientos especiales üôè a nuestros  autores de Embajadores Estudiantiles de Microsoft, revisores, y colaboradores de contenido**, notablemente a Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, y Snigdha Agarwal.
 
-**ü§© Extra gratitude to Microsoft Student Ambassador Eric Wanjau for our R lessons!**
+**ü§© ¬°Agradecimiento adicional al embajador estudiantil de Microsoft Eric Wanjau por nuestras lecciones de R!**
 
 ---
 
-# Getting Started
+# Empezando
 
-**Students**, to use this curriculum, fork the entire repo to your own GitHub account and complete the exercises on your own or with a group:
+**Estudiantes**, para usar este plan de estudios, realiza un fork del repositorio completo en tu cuenta de Github y completa los ejercicios por ti mismo o en grupo:
 
-- Start with a pre-lecture quiz.
-- Read the lecture and complete the activities, pausing and reflecting at each knowledge check.
-- Try to create the projects by comprehending the lessons rather than running the solution code; however that code is available in the `/solution` folders in each project-oriented lesson.
-- Take the post-lecture quiz.
-- Complete the challenge.
-- Complete the assignment.
-- After completing a lesson group, visit the [Discussion Board](https://github.com/microsoft/ML-For-Beginners/discussions) and ""learn out loud"" by filling out the appropriate PAT rubric. A 'PAT' is a Progress Assessment Tool that is a rubric you fill out to further your learning. You can also react to other PATs so we can learn together.
+- Comienza con un examen previo a la lecci√≥n.
+- Lee las lecciones y completa las actividades, pausando y reflexionando en cada verificaci√≥n de conocimiento.
+- Intenta crear los proyectos al comprender las lecciones en lugar de ejecutar la soluci√≥n en c√≥digo; sin embargo ese c√≥digo se encuentra disponible en los directorios `/solution` en cada lecci√≥n orientada a proyecto.
+- Realiza el examen posterior a la lecci√≥n.
+- Completa el desaf√≠o.
+- Completa la asignaci√≥n.
+- Despu√©s de completar un grupo de lecciones, visita el [tablero de discusi√≥n](https://github.com/microsoft/ML-For-Beginners/discussions) y ""aprende en voz alta"" al llenar la r√∫brica PAT apropiada. Un 'PAT' es una herramienta de evaluaci√≥n del progreso que es una r√∫brica la cual llenas para avanzar en tu aprendizaje. Tambi√©n puede reaccionar a otros PATs y as√≠ aprender juntos.
 
-> For further study, we recommend following these [Microsoft Learn](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa) modules and learning paths.
+> Para mayor estudio, recomendamos seguir estos m√≥dulos y rutas de aprendizaje de [Microsoft Learn](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa).
 
-**Teachers**, we have [included some suggestions](for-teachers.md) on how to use this curriculum.
+**Profesores**, hemos [incluido algunas sugerencias](../for-teachers.md) de c√≥mo usar este plan de estudios.
 
 ---
 
-## Meet the Team
+## Conoce al equipo
 
-[![Promo video](ml.gif)](https://youtu.be/Tj1XWrDSYJU ""Promo video"")
+[![Video promocional](../ml.gif)](https://youtu.be/Tj1XWrDSYJU ""Video promocional"")
 
-**Gif by** [Mohit Jaisal](https://linkedin.com/in/mohitjaisal)
+**Gif de** [Mohit Jaisal](https://linkedin.com/in/mohitjaisal)
 
-> üé• Click the image above for a video about the project and the folks who created it!
+> üé• ¬°Da clic a la imagen de arriba para ver un video acerca del proyecto y la gente que lo cre√≥!
 
 ---
 
-## Pedagogy
+## Pedagog√≠a
 
-We have chosen two pedagogical tenets while building this curriculum: ensuring that it is hands-on **project-based** and that it includes **frequent quizzes**. In addition, this curriculum has a common **theme** to give it cohesion.
+Hemos elegido dos principios pedag√≥gicos mientras construimos este plan de estudios: asegurar que es pr√°ctico **basado en proyectos** y que incluye **ex√°menes frecuentes**. Adem√°s, este plan de estudios tiene un **tema** com√∫n para darle cohesi√≥n.
 
-By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12-week cycle. This curriculum also includes a postscript on real-world applications of ML, which can be used as extra credit or as a basis for discussion.
+Al asegurar que el contenido se alinea con los proyectos, el proceso se hace m√°s atractivo par los estudiantes y la retenci√≥n de conceptos incrementar√°. Adem√°s, un examen de apuestas bajas antes de una clase establece la intenci√≥n del estudiante hacia aprender un tema, mientras el segundo examen despu√©s de la clase asegura una mayor retenci√≥n. Este plan de estudios fue dise√±ado para ser flexible y divertido y puede se tomado en su totalidad o en partes. Los proyectos comienzan peque√±os y van incrementando en complejidad al final del ciclo de 12 semanas. Este plan de estudios tambi√©n incluye una nota al final de aplicaciones del aprendizaje autom√°tico en el mundo real, la cual puede ser usada como c≈ïeditos extra o como base para discusi√≥n.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813169642,Stevengez,53009062,2022-02-23T18:03:18+00:00,2022-02-23T18:10:48+00:00,"```suggestion
> **Una nota acerca de los ex√°menes**: Todos los ex√°menes est√°n contenidos [en esta app](https://white-water-09ec41f0f.azurestaticapps.net/), para un total de 52 ex√°menes de 3 preguntas cada uno, Ellos est√°n vinculados dentro de las lecciones pero la aplicaci√≥n de ex√°menes puede ser ejecutada localmente; sigue las instrucciones en el directorio `quiz-app`.
```",True,translations/README.es.md,,"@@ -8,122 +8,119 @@
 [![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
 [![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
 
-# Machine Learning for Beginners - A Curriculum
+# Aprendizaje autom√°tico para principiantes - Un plan de estudios
 
-> üåç Travel around the world as we explore Machine Learning by means of world cultures üåç
+> üåç Viaja alrededor del mundo mientras exploramos el aprendizaje autom√°tico a trav√©s de las culturas del mundo üåç
 
-Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about **Machine Learning**. In this curriculum, you will learn about what is sometimes called **classic machine learning**, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our ['Data Science for Beginners' curriculum](https://aka.ms/datascience-beginners), as well!
+Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
 
-Travel with us around the world as we apply these classic techniques to data from many areas of the world. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment, and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.
+Viaja con nosotros alrededor del mundo mientras aplicamos estas t√©cnicas cl√°sicas a los datos de distintas √°reas del mundo. Cada lecci√≥n incluye ex√°menes previos y posteriores a la lecci√≥n, instrucciones escritas para completar la lecci√≥n, una soluci√≥n, una asignaci√≥n y m√°s. Nuestra pedagog√≠a basa en proyectos te permite aprender mientras construyes, una forma probada para que las nuevas habilidades se te 'peguen'.
 
-**‚úçÔ∏è Hearty thanks to our authors** Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, and Amy Boyd
+**‚úçÔ∏è Agradecimientos encarecidos** a Jen Looper, Stephen Howell, Francesca Lazzeri, Tomomi Imura, Cassie Breviu, Dmitry Soshnikov, Chris Noring, Anirban Mukherjee, Ornella Altunyan, y Amy Boyd.
 
-**üé® Thanks as well to our illustrators** Tomomi Imura, Dasani Madipalli, and Jen Looper
+**üé® Gracias tambi√©n a nuestros ilustradores** Tomomi Imura, Dasani Madipalli, y Jen Looper.
 
-**üôè Special thanks üôè to our Microsoft Student Ambassador authors, reviewers, and content contributors**, notably Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, and Snigdha Agarwal
+**üôè Agradecimientos especiales üôè a nuestros  autores de Embajadores Estudiantiles de Microsoft, revisores, y colaboradores de contenido**, notablemente a Rishit Dagli, Muhammad Sakib Khan Inan, Rohan Raj, Alexandru Petrescu, Abhishek Jaiswal, Nawrin Tabassum, Ioan Samuila, y Snigdha Agarwal.
 
-**ü§© Extra gratitude to Microsoft Student Ambassador Eric Wanjau for our R lessons!**
+**ü§© ¬°Agradecimiento adicional al embajador estudiantil de Microsoft Eric Wanjau por nuestras lecciones de R!**
 
 ---
 
-# Getting Started
+# Empezando
 
-**Students**, to use this curriculum, fork the entire repo to your own GitHub account and complete the exercises on your own or with a group:
+**Estudiantes**, para usar este plan de estudios, realiza un fork del repositorio completo en tu cuenta de Github y completa los ejercicios por ti mismo o en grupo:
 
-- Start with a pre-lecture quiz.
-- Read the lecture and complete the activities, pausing and reflecting at each knowledge check.
-- Try to create the projects by comprehending the lessons rather than running the solution code; however that code is available in the `/solution` folders in each project-oriented lesson.
-- Take the post-lecture quiz.
-- Complete the challenge.
-- Complete the assignment.
-- After completing a lesson group, visit the [Discussion Board](https://github.com/microsoft/ML-For-Beginners/discussions) and ""learn out loud"" by filling out the appropriate PAT rubric. A 'PAT' is a Progress Assessment Tool that is a rubric you fill out to further your learning. You can also react to other PATs so we can learn together.
+- Comienza con un examen previo a la lecci√≥n.
+- Lee las lecciones y completa las actividades, pausando y reflexionando en cada verificaci√≥n de conocimiento.
+- Intenta crear los proyectos al comprender las lecciones en lugar de ejecutar la soluci√≥n en c√≥digo; sin embargo ese c√≥digo se encuentra disponible en los directorios `/solution` en cada lecci√≥n orientada a proyecto.
+- Realiza el examen posterior a la lecci√≥n.
+- Completa el desaf√≠o.
+- Completa la asignaci√≥n.
+- Despu√©s de completar un grupo de lecciones, visita el [tablero de discusi√≥n](https://github.com/microsoft/ML-For-Beginners/discussions) y ""aprende en voz alta"" al llenar la r√∫brica PAT apropiada. Un 'PAT' es una herramienta de evaluaci√≥n del progreso que es una r√∫brica la cual llenas para avanzar en tu aprendizaje. Tambi√©n puede reaccionar a otros PATs y as√≠ aprender juntos.
 
-> For further study, we recommend following these [Microsoft Learn](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa) modules and learning paths.
+> Para mayor estudio, recomendamos seguir estos m√≥dulos y rutas de aprendizaje de [Microsoft Learn](https://docs.microsoft.com/en-us/users/jenlooper-2911/collections/k7o7tg1gp306q4?WT.mc_id=academic-15963-cxa).
 
-**Teachers**, we have [included some suggestions](for-teachers.md) on how to use this curriculum.
+**Profesores**, hemos [incluido algunas sugerencias](../for-teachers.md) de c√≥mo usar este plan de estudios.
 
 ---
 
-## Meet the Team
+## Conoce al equipo
 
-[![Promo video](ml.gif)](https://youtu.be/Tj1XWrDSYJU ""Promo video"")
+[![Video promocional](../ml.gif)](https://youtu.be/Tj1XWrDSYJU ""Video promocional"")
 
-**Gif by** [Mohit Jaisal](https://linkedin.com/in/mohitjaisal)
+**Gif de** [Mohit Jaisal](https://linkedin.com/in/mohitjaisal)
 
-> üé• Click the image above for a video about the project and the folks who created it!
+> üé• ¬°Da clic a la imagen de arriba para ver un video acerca del proyecto y la gente que lo cre√≥!
 
 ---
 
-## Pedagogy
+## Pedagog√≠a
 
-We have chosen two pedagogical tenets while building this curriculum: ensuring that it is hands-on **project-based** and that it includes **frequent quizzes**. In addition, this curriculum has a common **theme** to give it cohesion.
+Hemos elegido dos principios pedag√≥gicos mientras construimos este plan de estudios: asegurar que es pr√°ctico **basado en proyectos** y que incluye **ex√°menes frecuentes**. Adem√°s, este plan de estudios tiene un **tema** com√∫n para darle cohesi√≥n.
 
-By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12-week cycle. This curriculum also includes a postscript on real-world applications of ML, which can be used as extra credit or as a basis for discussion.
+Al asegurar que el contenido se alinea con los proyectos, el proceso se hace m√°s atractivo par los estudiantes y la retenci√≥n de conceptos incrementar√°. Adem√°s, un examen de apuestas bajas antes de una clase establece la intenci√≥n del estudiante hacia aprender un tema, mientras el segundo examen despu√©s de la clase asegura una mayor retenci√≥n. Este plan de estudios fue dise√±ado para ser flexible y divertido y puede se tomado en su totalidad o en partes. Los proyectos comienzan peque√±os y van incrementando en complejidad al final del ciclo de 12 semanas. Este plan de estudios tambi√©n incluye una nota al final de aplicaciones del aprendizaje autom√°tico en el mundo real, la cual puede ser usada como c≈ïeditos extra o como base para discusi√≥n.
 
-> Find our [Code of Conduct](CODE_OF_CONDUCT.md), [Contributing](CONTRIBUTING.md), and [Translation](TRANSLATIONS.md) guidelines. We welcome your constructive feedback!
+> Encuentra nuestros lineamientos de [C√≥digo de conducta](../CODE_OF_CONDUCT.md), [Contribuci√≥n](../CONTRIBUTING.md), y [Traducci√≥n](../TRANSLATIONS.md). ¬°Son bienvenidos tus comentarios constructivos!
 
-## Each lesson includes:
+## Cada lecci√≥n incluye:
 
-- optional sketchnote
-- optional supplemental video
-- pre-lecture warmup quiz
-- written lesson
-- for project-based lessons, step-by-step guides on how to build the project
-- knowledge checks
-- a challenge
-- supplemental reading
-- assignment
-- post-lecture quiz
+- boceto opcional
+- video suplementario opcional
+- examen de calentamiento previo a la lecci√≥n
+- lecci√≥n escrita
+- para lecciones basadas en proyectos, gu√≠as paso a paso de c√≥mo construir el proyecto
+- verificaciones de conocimiento
+- un desaf√≠o
+- lectura suplementaria
+- asignaci√≥n
+- examen posterior a la lecci√≥n
 
-> **A note about languages**: These lessons are primarily written in Python, but many are also available in R. To complete an R lesson, go to the `/solution` folder and look for R lessons. They include an .rmd extension that represents an **R Markdown** file which can be simply defined as an embedding of `code chunks` (of R or other languages) and a `YAML header` (that guides how to format outputs such as PDF) in a `Markdown document`. As such, it serves as an exemplary authoring framework for data science since it allows you to combine your code, its output, and your thoughts by allowing you to write them down in Markdown. Moreover, R Markdown documents can be rendered to output formats such as PDF, HTML, or Word.
+> **Una nota acerca de los lenguajes**: Estas lecciones est√°n escritas principalmente en Python, pero muchas tambi√©n est√°n disponibles en R. Para completar una lecci√≥n en R, ve al directorio `/solution` y busca las lecciones. Ellas incluyen una extensi√≥n .rmd que representa un archivo **Markdown R** el cual puede ser definido simplemente como `porciones de c√≥digo` embebido (de R u otros lenguajes) y un `encabezado YAML` (que gu√≠a c√≥mo dar formato a las salidas, por ejemplo PDF) en un `documento Markdown`. Como tal, este sirve como un framework ejemplar de autor√≠a para la ciencia de datos ya que permite combinar tu c√≥digo, su salida, y tus pensamientos al permitirte escribirlos en Markdown. Es m√°s, los documentos Markdown R pueden ser representados como formatos de salida tal como PDF, HTML, o Word.
 
-> **A note about quizzes**: All quizzes are contained [in this app](https://white-water-09ec41f0f.azurestaticapps.net/), for 52 total quizzes of three questions each. They are linked from within the lessons but the quiz app can be run locally; follow the instruction in the `quiz-app` folder.
+> **Una nota acerca de los ex√°menes**: Todos los ex√°menes est√°n contenidos [en esta app](https://white-water-09ec41f0f.azurestaticapps.net/), por un total de 52 ex√°menes de 3 preguntas cada uno, Ellos est√°n vinculados dentro de las lecciones pero la aplicaci√≥n de ex√°menes puede ser ejecutada localmente; sigue las instrucciones en el directorio `quiz-app`.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813177965,abrildur,71578178,2022-02-23T18:13:52+00:00,2022-02-23T22:07:17+00:00,"Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'.  ¬°Tambi√©n acompa√±a estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!",True,translations/README.es.md,16.0,"@@ -8,122 +8,119 @@
 [![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
 [![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
 
-# Machine Learning for Beginners - A Curriculum
+# Aprendizaje autom√°tico para principiantes - Un plan de estudios
 
-> üåç Travel around the world as we explore Machine Learning by means of world cultures üåç
+> üåç Viaja alrededor del mundo mientras exploramos el aprendizaje autom√°tico a trav√©s de las culturas del mundo üåç
 
-Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about **Machine Learning**. In this curriculum, you will learn about what is sometimes called **classic machine learning**, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our ['Data Science for Beginners' curriculum](https://aka.ms/datascience-beginners), as well!
+Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
 ",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813200355,abrildur,71578178,2022-02-23T18:39:55+00:00,2022-02-23T22:07:17+00:00,"Viaja con nosotros alrededor del mundo mientras aplicamos estas t√©cnicas cl√°sicas a los datos de distintas √°reas del mundo. Cada lecci√≥n incluye:

- Ex√°menes previos y posteriores a cada lecci√≥n
- Instrucciones escritas para completar dicha lecci√≥n
- Una soluci√≥n
- Una tarea y m√°s. 

Nuestra ense√±anza basada en proyectos, te permite aprender mientras practicas; esta es una forma aprobada para que adquieras nuevas habilidades.",True,translations/README.es.md,25.0,"@@ -8,122 +8,119 @@
 [![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
 [![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
 
-# Machine Learning for Beginners - A Curriculum
+# Aprendizaje autom√°tico para principiantes - Un plan de estudios
 
-> üåç Travel around the world as we explore Machine Learning by means of world cultures üåç
+> üåç Viaja alrededor del mundo mientras exploramos el aprendizaje autom√°tico a trav√©s de las culturas del mundo üåç
 
-Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about **Machine Learning**. In this curriculum, you will learn about what is sometimes called **classic machine learning**, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our ['Data Science for Beginners' curriculum](https://aka.ms/datascience-beginners), as well!
+Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
 
-Travel with us around the world as we apply these classic techniques to data from many areas of the world. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment, and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.
+Viaja con nosotros alrededor del mundo mientras aplicamos estas t√©cnicas cl√°sicas a los datos de distintas √°reas del mundo. Cada lecci√≥n incluye ex√°menes previos y posteriores a la lecci√≥n, instrucciones escritas para completar la lecci√≥n, una soluci√≥n, una asignaci√≥n y m√°s. Nuestra pedagog√≠a basa en proyectos te permite aprender mientras construyes, una forma probada para que las nuevas habilidades se te 'peguen'.
 ",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813393172,hereje,3022824,2022-02-23T22:48:08+00:00,2022-02-23T22:48:08+00:00,Done!,True,translations/README.es.md,16.0,"@@ -8,122 +8,119 @@
 [![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
 [![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
 
-# Machine Learning for Beginners - A Curriculum
+# Aprendizaje autom√°tico para principiantes - Un plan de estudios
 
-> üåç Travel around the world as we explore Machine Learning by means of world cultures üåç
+> üåç Viaja alrededor del mundo mientras exploramos el aprendizaje autom√°tico a trav√©s de las culturas del mundo üåç
 
-Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about **Machine Learning**. In this curriculum, you will learn about what is sometimes called **classic machine learning**, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our ['Data Science for Beginners' curriculum](https://aka.ms/datascience-beginners), as well!
+Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
 ",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,860075241,813393326,hereje,3022824,2022-02-23T22:48:22+00:00,2022-02-23T22:48:22+00:00,Done!,True,translations/README.es.md,25.0,"@@ -8,122 +8,119 @@
 [![GitHub forks](https://img.shields.io/github/forks/microsoft/ML-For-Beginners.svg?style=social&label=Fork)](https://GitHub.com/microsoft/ML-For-Beginners/network/)
 [![GitHub stars](https://img.shields.io/github/stars/microsoft/ML-For-Beginners.svg?style=social&label=Star)](https://GitHub.com/microsoft/ML-For-Beginners/stargazers/)
 
-# Machine Learning for Beginners - A Curriculum
+# Aprendizaje autom√°tico para principiantes - Un plan de estudios
 
-> üåç Travel around the world as we explore Machine Learning by means of world cultures üåç
+> üåç Viaja alrededor del mundo mientras exploramos el aprendizaje autom√°tico a trav√©s de las culturas del mundo üåç
 
-Azure Cloud Advocates at Microsoft are pleased to offer a 12-week, 26-lesson curriculum all about **Machine Learning**. In this curriculum, you will learn about what is sometimes called **classic machine learning**, using primarily Scikit-learn as a library and avoiding deep learning, which is covered in our forthcoming 'AI for Beginners' curriculum. Pair these lessons with our ['Data Science for Beginners' curriculum](https://aka.ms/datascience-beginners), as well!
+Los defensores de Azure Cloud en Microsoft est√°n complacidos en ofrecer un plan de estudios de 12 semanas, con 26 lecciones, todas acerca de **aprendizaje autom√°tico**. En este plan de estudios, aprender√°s acerca de lo que algunas veces es llamado **aprendizaje autom√°tico cl√°sico**, usando principalmente Scikit-learn como una biblioteca y evitando el aprendizaje profundo, el cual se aborda en nuestro pr√≥ximo plan de estudios 'IA para principiantes'. ¬°Tambi√©n empareja estas lecciones con nuestro [plan de estudios 'Ciencia de Datos para principiantes'](https://aka.ms/datascience-beginners)!
 
-Travel with us around the world as we apply these classic techniques to data from many areas of the world. Each lesson includes pre- and post-lesson quizzes, written instructions to complete the lesson, a solution, an assignment, and more. Our project-based pedagogy allows you to learn while building, a proven way for new skills to 'stick'.
+Viaja con nosotros alrededor del mundo mientras aplicamos estas t√©cnicas cl√°sicas a los datos de distintas √°reas del mundo. Cada lecci√≥n incluye ex√°menes previos y posteriores a la lecci√≥n, instrucciones escritas para completar la lecci√≥n, una soluci√≥n, una asignaci√≥n y m√°s. Nuestra pedagog√≠a basa en proyectos te permite aprender mientras construyes, una forma probada para que las nuevas habilidades se te 'peguen'.
 ",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859063464,813187254,Stevengez,53009062,2022-02-23T18:25:17+00:00,2022-02-23T18:39:15+00:00,"```suggestion
El truco principal de este problema es, no obstante, que el motor del carrito no es lo suficientemente potente para escalar la monta√±a en una sola pasada. Por lo tanto, la √∫nica forma de lograrlo es conducir hacia atr√°s y adelante para generar impulso.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859063464,813190105,Stevengez,53009062,2022-02-23T18:28:34+00:00,2022-02-23T18:39:15+00:00,"```suggestion
El sistema de recompensas para el carrito de monta√±a es enga√±oso:
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859063464,813193111,Stevengez,53009062,2022-02-23T18:31:33+00:00,2022-02-23T18:39:15+00:00,"```suggestion
* La recompensa de 0 es otorgada si el agente alcanz√≥ la bandera (posici√≥n = 0.5) en la cima de la monta√±a.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859063464,813196248,Stevengez,53009062,2022-02-23T18:34:40+00:00,2022-02-23T18:39:15+00:00,"```suggestion
> **Nota**: Es probable que ajustar los hiperpar√°metros sea necesario para hacer que el algoritmo converja.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859063464,813198311,Stevengez,53009062,2022-02-23T18:37:22+00:00,2022-02-23T18:40:06+00:00,"```suggestion
|          | El algoritmo Q-Learning se adapt√≥ de forma exitosa a partir del ejemplo CartPole, con m√≠nimas modificaciones al c√≥digo, el cual es capaz de resolver el problema al capturar la bandera con menos de 200 pasos. | Se adopt√≥ un nuevo algoritmo Q-Learning de internet, pero est√° bien documentado; o se adopt√≥ el algoritmo existente, pero no cumple los resultados deseados | El estudiante no fue capaz de adoptar ning√∫n algoritmo de forma exitosa, pero ha hecho pasos substanciales hacia la soluci√≥n (implement√≥ la discretizaci√≥n de estado, la estructura de datos de Q-Table, etc.) |
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859063464,813187254,Stevengez,53009062,2022-02-23T18:25:17+00:00,2022-02-23T18:39:15+00:00,"```suggestion
El truco principal de este problema es, no obstante, que el motor del carrito no es lo suficientemente potente para escalar la monta√±a en una sola pasada. Por lo tanto, la √∫nica forma de lograrlo es conducir hacia atr√°s y adelante para generar impulso.
```",True,8-Reinforcement/2-Gym/translations/assignment.es.md,,"@@ -1,43 +1,44 @@
-# Train Mountain Car
+# Entrena el carrito de monta√±a
 
-[OpenAI Gym](http://gym.openai.com) has been designed in such a way that all environments provide the same API - i.e. the same methods `reset`, `step` and `render`, and the same abstractions of **action space** and **observation space**. Thus is should be possible to adapt the same reinforcement learning algorithms to different environments with minimal code changes.
+[OpenAI Gym](http://gym.openai.com) ha sido dise√±ado de tal forma que todos los ambientes proveen la misma API - esto es, los mismos m√©todos `reset`, `step` y `render`, y las mismas abstracciones de **action space** y **observation space**. As√≠ ser√≠a posible adaptar los mismos algoritmos de aprendizaje reforzado a diferentes ambientes con m√≠nimos cambios al c√≥digo.
 
-## A Mountain Car Environment
+## Un ambiente de carrito de monta√±a
 
-[Mountain Car environment](https://gym.openai.com/envs/MountainCar-v0/) contains a car stuck in a valley:
+El [ambiente de carrito de monta√±a](https://gym.openai.com/envs/MountainCar-v0/) contiene un carrito atrapado en un valle:
 
-<img src=""images/mountaincar.png"" width=""300""/>
+<img src=""../images/mountaincar.png"" width=""300""/>
 
-The goal is to get out of the valley and capture the flag, by doing at each step one of the following actions:
+El objetivo es salir del valle y capturar la bandera, al hacer a cada paso una de las siguientes acciones:
 
-| Value | Meaning |
+| Valor | Significado |
 |---|---|
-| 0 | Accelerate to the left |
-| 1 | Do not accelerate |
-| 2 | Accelerate to the right |
+| 0 | Acelerar a la izquierda |
+| 1 | No acelerar |
+| 2 | Acelerar a la derecha |
 
-The main trick of this problem is, however, that the car's engine is not strong enough to scale the mountain in a single pass. Therefore, the only way to succeed is to drive back and forth to build up momentum.
+El truco principal de este problema es, no obstante, que el motor del carrito no es lo suficientemente potente para escalar la monta√±a en una sola pasada. Por lo tanto, la √∫nica forma de lograrlo es conducir de hacia atr√°s y  adelante para generar impulso.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859063464,813190105,Stevengez,53009062,2022-02-23T18:28:34+00:00,2022-02-23T18:39:15+00:00,"```suggestion
El sistema de recompensas para el carrito de monta√±a es enga√±oso:
```",True,8-Reinforcement/2-Gym/translations/assignment.es.md,,"@@ -1,43 +1,44 @@
-# Train Mountain Car
+# Entrena el carrito de monta√±a
 
-[OpenAI Gym](http://gym.openai.com) has been designed in such a way that all environments provide the same API - i.e. the same methods `reset`, `step` and `render`, and the same abstractions of **action space** and **observation space**. Thus is should be possible to adapt the same reinforcement learning algorithms to different environments with minimal code changes.
+[OpenAI Gym](http://gym.openai.com) ha sido dise√±ado de tal forma que todos los ambientes proveen la misma API - esto es, los mismos m√©todos `reset`, `step` y `render`, y las mismas abstracciones de **action space** y **observation space**. As√≠ ser√≠a posible adaptar los mismos algoritmos de aprendizaje reforzado a diferentes ambientes con m√≠nimos cambios al c√≥digo.
 
-## A Mountain Car Environment
+## Un ambiente de carrito de monta√±a
 
-[Mountain Car environment](https://gym.openai.com/envs/MountainCar-v0/) contains a car stuck in a valley:
+El [ambiente de carrito de monta√±a](https://gym.openai.com/envs/MountainCar-v0/) contiene un carrito atrapado en un valle:
 
-<img src=""images/mountaincar.png"" width=""300""/>
+<img src=""../images/mountaincar.png"" width=""300""/>
 
-The goal is to get out of the valley and capture the flag, by doing at each step one of the following actions:
+El objetivo es salir del valle y capturar la bandera, al hacer a cada paso una de las siguientes acciones:
 
-| Value | Meaning |
+| Valor | Significado |
 |---|---|
-| 0 | Accelerate to the left |
-| 1 | Do not accelerate |
-| 2 | Accelerate to the right |
+| 0 | Acelerar a la izquierda |
+| 1 | No acelerar |
+| 2 | Acelerar a la derecha |
 
-The main trick of this problem is, however, that the car's engine is not strong enough to scale the mountain in a single pass. Therefore, the only way to succeed is to drive back and forth to build up momentum.
+El truco principal de este problema es, no obstante, que el motor del carrito no es lo suficientemente potente para escalar la monta√±a en una sola pasada. Por lo tanto, la √∫nica forma de lograrlo es conducir de hacia atr√°s y  adelante para generar impulso.
 
-Observation space consists of just two values:
+El espacio de observaci√≥n consiste de s√≥lo dos valores:
 
-| Num | Observation  | Min | Max |
-|-----|--------------|-----|-----|
-|  0  | Car Position | -1.2| 0.6 |
-|  1  | Car Velocity | -0.07 | 0.07 |
+| Num | Observaci√≥n           | Min   | Max  |
+|-----|-----------------------|-------|------|
+|  0  | Posici√≥n del carrito   | -1.2  | 0.6  |
+|  1  | Velocidad del carrito | -0.07 | 0.07 |
 
-Reward system for the mountain car is rather tricky:
+El sistema de recompensas para el carrito de monta√±a es bastante dif√≠cil:",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859063464,813193111,Stevengez,53009062,2022-02-23T18:31:33+00:00,2022-02-23T18:39:15+00:00,"```suggestion
* La recompensa de 0 es otorgada si el agente alcanz√≥ la bandera (posici√≥n = 0.5) en la cima de la monta√±a.
```",True,8-Reinforcement/2-Gym/translations/assignment.es.md,,"@@ -1,43 +1,44 @@
-# Train Mountain Car
+# Entrena el carrito de monta√±a
 
-[OpenAI Gym](http://gym.openai.com) has been designed in such a way that all environments provide the same API - i.e. the same methods `reset`, `step` and `render`, and the same abstractions of **action space** and **observation space**. Thus is should be possible to adapt the same reinforcement learning algorithms to different environments with minimal code changes.
+[OpenAI Gym](http://gym.openai.com) ha sido dise√±ado de tal forma que todos los ambientes proveen la misma API - esto es, los mismos m√©todos `reset`, `step` y `render`, y las mismas abstracciones de **action space** y **observation space**. As√≠ ser√≠a posible adaptar los mismos algoritmos de aprendizaje reforzado a diferentes ambientes con m√≠nimos cambios al c√≥digo.
 
-## A Mountain Car Environment
+## Un ambiente de carrito de monta√±a
 
-[Mountain Car environment](https://gym.openai.com/envs/MountainCar-v0/) contains a car stuck in a valley:
+El [ambiente de carrito de monta√±a](https://gym.openai.com/envs/MountainCar-v0/) contiene un carrito atrapado en un valle:
 
-<img src=""images/mountaincar.png"" width=""300""/>
+<img src=""../images/mountaincar.png"" width=""300""/>
 
-The goal is to get out of the valley and capture the flag, by doing at each step one of the following actions:
+El objetivo es salir del valle y capturar la bandera, al hacer a cada paso una de las siguientes acciones:
 
-| Value | Meaning |
+| Valor | Significado |
 |---|---|
-| 0 | Accelerate to the left |
-| 1 | Do not accelerate |
-| 2 | Accelerate to the right |
+| 0 | Acelerar a la izquierda |
+| 1 | No acelerar |
+| 2 | Acelerar a la derecha |
 
-The main trick of this problem is, however, that the car's engine is not strong enough to scale the mountain in a single pass. Therefore, the only way to succeed is to drive back and forth to build up momentum.
+El truco principal de este problema es, no obstante, que el motor del carrito no es lo suficientemente potente para escalar la monta√±a en una sola pasada. Por lo tanto, la √∫nica forma de lograrlo es conducir de hacia atr√°s y  adelante para generar impulso.
 
-Observation space consists of just two values:
+El espacio de observaci√≥n consiste de s√≥lo dos valores:
 
-| Num | Observation  | Min | Max |
-|-----|--------------|-----|-----|
-|  0  | Car Position | -1.2| 0.6 |
-|  1  | Car Velocity | -0.07 | 0.07 |
+| Num | Observaci√≥n           | Min   | Max  |
+|-----|-----------------------|-------|------|
+|  0  | Posici√≥n del carrito   | -1.2  | 0.6  |
+|  1  | Velocidad del carrito | -0.07 | 0.07 |
 
-Reward system for the mountain car is rather tricky:
+El sistema de recompensas para el carrito de monta√±a es bastante dif√≠cil:
 
- * Reward of 0 is awarded if the agent reached the flag (position = 0.5) on top of the mountain.
- * Reward of -1 is awarded if the position of the agent is less than 0.5.
+* La recompensa de 0 es otorgada si el agente alcanz√≥ la bandera (position = 0.5) en la cima de la monta√±a.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859063464,813196248,Stevengez,53009062,2022-02-23T18:34:40+00:00,2022-02-23T18:39:15+00:00,"```suggestion
> **Nota**: Es probable que ajustar los hiperpar√°metros sea necesario para hacer que el algoritmo converja.
```",True,8-Reinforcement/2-Gym/translations/assignment.es.md,,"@@ -1,43 +1,44 @@
-# Train Mountain Car
+# Entrena el carrito de monta√±a
 
-[OpenAI Gym](http://gym.openai.com) has been designed in such a way that all environments provide the same API - i.e. the same methods `reset`, `step` and `render`, and the same abstractions of **action space** and **observation space**. Thus is should be possible to adapt the same reinforcement learning algorithms to different environments with minimal code changes.
+[OpenAI Gym](http://gym.openai.com) ha sido dise√±ado de tal forma que todos los ambientes proveen la misma API - esto es, los mismos m√©todos `reset`, `step` y `render`, y las mismas abstracciones de **action space** y **observation space**. As√≠ ser√≠a posible adaptar los mismos algoritmos de aprendizaje reforzado a diferentes ambientes con m√≠nimos cambios al c√≥digo.
 
-## A Mountain Car Environment
+## Un ambiente de carrito de monta√±a
 
-[Mountain Car environment](https://gym.openai.com/envs/MountainCar-v0/) contains a car stuck in a valley:
+El [ambiente de carrito de monta√±a](https://gym.openai.com/envs/MountainCar-v0/) contiene un carrito atrapado en un valle:
 
-<img src=""images/mountaincar.png"" width=""300""/>
+<img src=""../images/mountaincar.png"" width=""300""/>
 
-The goal is to get out of the valley and capture the flag, by doing at each step one of the following actions:
+El objetivo es salir del valle y capturar la bandera, al hacer a cada paso una de las siguientes acciones:
 
-| Value | Meaning |
+| Valor | Significado |
 |---|---|
-| 0 | Accelerate to the left |
-| 1 | Do not accelerate |
-| 2 | Accelerate to the right |
+| 0 | Acelerar a la izquierda |
+| 1 | No acelerar |
+| 2 | Acelerar a la derecha |
 
-The main trick of this problem is, however, that the car's engine is not strong enough to scale the mountain in a single pass. Therefore, the only way to succeed is to drive back and forth to build up momentum.
+El truco principal de este problema es, no obstante, que el motor del carrito no es lo suficientemente potente para escalar la monta√±a en una sola pasada. Por lo tanto, la √∫nica forma de lograrlo es conducir de hacia atr√°s y  adelante para generar impulso.
 
-Observation space consists of just two values:
+El espacio de observaci√≥n consiste de s√≥lo dos valores:
 
-| Num | Observation  | Min | Max |
-|-----|--------------|-----|-----|
-|  0  | Car Position | -1.2| 0.6 |
-|  1  | Car Velocity | -0.07 | 0.07 |
+| Num | Observaci√≥n           | Min   | Max  |
+|-----|-----------------------|-------|------|
+|  0  | Posici√≥n del carrito   | -1.2  | 0.6  |
+|  1  | Velocidad del carrito | -0.07 | 0.07 |
 
-Reward system for the mountain car is rather tricky:
+El sistema de recompensas para el carrito de monta√±a es bastante dif√≠cil:
 
- * Reward of 0 is awarded if the agent reached the flag (position = 0.5) on top of the mountain.
- * Reward of -1 is awarded if the position of the agent is less than 0.5.
+* La recompensa de 0 es otorgada si el agente alcanz√≥ la bandera (position = 0.5) en la cima de la monta√±a.
+* La recompensa de -1 es otorgada si la posici√≥n del agente es menos de 0.5.
 
-Episode terminates if the car position is more than 0.5, or episode length is greater than 200.
-## Instructions
+El episodio termina si la posici√≥n del carrito es m√°s de 0.5, o la longitud del episodio es mayor que 200.
 
-Adapt our reinforcement learning algorithm to solve the mountain car problem. Start with existing [notebook.ipynb](notebook.ipynb) code, substitute new environment, change state discretization functions, and try to make existing algorithm to train with minimal code modifications. Optimize the result by adjusting hyperparameters.
+## Instrucciones
 
-> **Note**: Hyperparameters adjustment is likely to be needed to make algorithm converge. 
-## Rubric
+Adapta nuestro algoritmo de aprendizaje reforzado para resolver el problema del carrito de monta√±a. Comienza con el c√≥digo existente en [notebook.ipynb](../notebook.ipynb), substituye el nuevo ambiente, cambia las funciones de discretizaci√≥n de estado, e intenta hacer que el algoritmo existente entrene con m√≠nimas modificaciones al c√≥digo. Optimiza el resultado al ajustar los hiperpar√°metros.
 
-| Criteria | Exemplary | Adequate | Needs Improvement |
+> **Nota**: El ajuste de los hiperpar√°metros es probable sea necesario para hacer que el algoritmo converja.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859063464,813198311,Stevengez,53009062,2022-02-23T18:37:22+00:00,2022-02-23T18:40:06+00:00,"```suggestion
|          | El algoritmo Q-Learning se adapt√≥ de forma exitosa a partir del ejemplo CartPole, con m√≠nimas modificaciones al c√≥digo, el cual es capaz de resolver el problema al capturar la bandera con menos de 200 pasos. | Se adopt√≥ un nuevo algoritmo Q-Learning de internet, pero est√° bien documentado; o se adopt√≥ el algoritmo existente, pero no cumple los resultados deseados | El estudiante no fue capaz de adoptar ning√∫n algoritmo de forma exitosa, pero ha hecho pasos substanciales hacia la soluci√≥n (implement√≥ la discretizaci√≥n de estado, la estructura de datos de Q-Table, etc.) |
```",True,8-Reinforcement/2-Gym/translations/assignment.es.md,,"@@ -1,43 +1,44 @@
-# Train Mountain Car
+# Entrena el carrito de monta√±a
 
-[OpenAI Gym](http://gym.openai.com) has been designed in such a way that all environments provide the same API - i.e. the same methods `reset`, `step` and `render`, and the same abstractions of **action space** and **observation space**. Thus is should be possible to adapt the same reinforcement learning algorithms to different environments with minimal code changes.
+[OpenAI Gym](http://gym.openai.com) ha sido dise√±ado de tal forma que todos los ambientes proveen la misma API - esto es, los mismos m√©todos `reset`, `step` y `render`, y las mismas abstracciones de **action space** y **observation space**. As√≠ ser√≠a posible adaptar los mismos algoritmos de aprendizaje reforzado a diferentes ambientes con m√≠nimos cambios al c√≥digo.
 
-## A Mountain Car Environment
+## Un ambiente de carrito de monta√±a
 
-[Mountain Car environment](https://gym.openai.com/envs/MountainCar-v0/) contains a car stuck in a valley:
+El [ambiente de carrito de monta√±a](https://gym.openai.com/envs/MountainCar-v0/) contiene un carrito atrapado en un valle:
 
-<img src=""images/mountaincar.png"" width=""300""/>
+<img src=""../images/mountaincar.png"" width=""300""/>
 
-The goal is to get out of the valley and capture the flag, by doing at each step one of the following actions:
+El objetivo es salir del valle y capturar la bandera, al hacer a cada paso una de las siguientes acciones:
 
-| Value | Meaning |
+| Valor | Significado |
 |---|---|
-| 0 | Accelerate to the left |
-| 1 | Do not accelerate |
-| 2 | Accelerate to the right |
+| 0 | Acelerar a la izquierda |
+| 1 | No acelerar |
+| 2 | Acelerar a la derecha |
 
-The main trick of this problem is, however, that the car's engine is not strong enough to scale the mountain in a single pass. Therefore, the only way to succeed is to drive back and forth to build up momentum.
+El truco principal de este problema es, no obstante, que el motor del carrito no es lo suficientemente potente para escalar la monta√±a en una sola pasada. Por lo tanto, la √∫nica forma de lograrlo es conducir de hacia atr√°s y  adelante para generar impulso.
 
-Observation space consists of just two values:
+El espacio de observaci√≥n consiste de s√≥lo dos valores:
 
-| Num | Observation  | Min | Max |
-|-----|--------------|-----|-----|
-|  0  | Car Position | -1.2| 0.6 |
-|  1  | Car Velocity | -0.07 | 0.07 |
+| Num | Observaci√≥n           | Min   | Max  |
+|-----|-----------------------|-------|------|
+|  0  | Posici√≥n del carrito   | -1.2  | 0.6  |
+|  1  | Velocidad del carrito | -0.07 | 0.07 |
 
-Reward system for the mountain car is rather tricky:
+El sistema de recompensas para el carrito de monta√±a es bastante dif√≠cil:
 
- * Reward of 0 is awarded if the agent reached the flag (position = 0.5) on top of the mountain.
- * Reward of -1 is awarded if the position of the agent is less than 0.5.
+* La recompensa de 0 es otorgada si el agente alcanz√≥ la bandera (position = 0.5) en la cima de la monta√±a.
+* La recompensa de -1 es otorgada si la posici√≥n del agente es menos de 0.5.
 
-Episode terminates if the car position is more than 0.5, or episode length is greater than 200.
-## Instructions
+El episodio termina si la posici√≥n del carrito es m√°s de 0.5, o la longitud del episodio es mayor que 200.
 
-Adapt our reinforcement learning algorithm to solve the mountain car problem. Start with existing [notebook.ipynb](notebook.ipynb) code, substitute new environment, change state discretization functions, and try to make existing algorithm to train with minimal code modifications. Optimize the result by adjusting hyperparameters.
+## Instrucciones
 
-> **Note**: Hyperparameters adjustment is likely to be needed to make algorithm converge. 
-## Rubric
+Adapta nuestro algoritmo de aprendizaje reforzado para resolver el problema del carrito de monta√±a. Comienza con el c√≥digo existente en [notebook.ipynb](../notebook.ipynb), substituye el nuevo ambiente, cambia las funciones de discretizaci√≥n de estado, e intenta hacer que el algoritmo existente entrene con m√≠nimas modificaciones al c√≥digo. Optimiza el resultado al ajustar los hiperpar√°metros.
 
-| Criteria | Exemplary | Adequate | Needs Improvement |
+> **Nota**: El ajuste de los hiperpar√°metros es probable sea necesario para hacer que el algoritmo converja.
+## R√∫brica
+
+| Criterio | Ejemplar | Adecuado | Necesita mejorar |
 | -------- | --------- | -------- | ----------------- |
-|          | Q-Learning algorithm is successfully adapted from CartPole example, with minimal code modifications, which is able to solve the problem of capturing the flag under 200 steps. | A new Q-Learning algorithm has been adopted from the Internet, but is well-documented; or existing algorithm adopted, but does not reach desired results | Student was not able to successfully adopt any algorithm, but has mede substantial steps towards solution (implemented state discretization, Q-Table data structure, etc.) |
+|          | El algoritmo Q-Learning se adapt√≥ de forma exitosa a partir del ejemplo CartPole, con m√≠nimas modificaciones al c√≥digo, el cual es capaz de resolver el problema al capturar la bandera con menos de 200 pasos. | Se adopt√≥ un nuevo algoritmo Q-Learning de internet, pero est√° bien documentado; o se adopt√≥ el algoritmo existente, pero no cumple los resultados deseados | El estudiante no fue capaz de adoptar alg√∫n algoritmo de forma exitosa, pero ha hecho pasos substanciales hacia la soluci√≥n (implement√≥ la discretizaci√≥n de estado, la estructura de datos de Q-Table, etc.) |",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859045385,813223217,Stevengez,53009062,2022-02-23T19:01:22+00:00,2022-02-23T19:28:46+00:00,"```suggestion
3. Pedro puede deshacerse de la fatiga al descansar bajo un √°rbol o en el pasto (ej. caminar en una ubicaci√≥n del tablero con un √°rbol o pasto - campo verde)
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859045385,813228651,Stevengez,53009062,2022-02-23T19:07:49+00:00,2022-02-23T19:28:46+00:00,"```suggestion
> **Nota**: En tu nuevo mundo, el estado es m√°s complejo, y adem√°s a la posici√≥n humana tambi√©n incluye la fatiga y los niveles de energ√≠a. Puedes optar por representar el estado como una tupla (tablero, energ√≠a, fatiga), o definir una clase para el estado (tambi√©n puedes querer derivarlo de `Board`), o incluso modifica la clase original `Board` dentro de [rlboard.py](../rlboard.py).
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859045385,813244298,Stevengez,53009062,2022-02-23T19:28:12+00:00,2022-02-23T19:28:46+00:00,"```suggestion
|          | Se present√≥ un notebook con la definici√≥n de las nuevas reglas del mundo. El algoritmo Q-Learning y algunas explicaciones textuales. Q-Learning es capaz de mejorar significativamente los resultados comparado con la caminata aleatoria. | Se present√≥ un notebook, Q-Learning se implement√≥ y mejor√≥ los resultados comparado con la caminata aleatoria, pero no de forma significativa; o el notebook est√° pobremente documentado y el c√≥digo no est√° bien estructurado | Se hicieron algunos intentos para redefinir las reglas del mundo, pero el algoritmo de Q-Learning no funciona, o la funci√≥n reward no est√° totalmente definida |
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859045385,813223217,Stevengez,53009062,2022-02-23T19:01:22+00:00,2022-02-23T19:28:46+00:00,"```suggestion
3. Pedro puede deshacerse de la fatiga al descansar bajo un √°rbol o en el pasto (ej. caminar en una ubicaci√≥n del tablero con un √°rbol o pasto - campo verde)
```",True,8-Reinforcement/1-QLearning/translations/assignment.es.md,,"@@ -1,25 +1,27 @@
-# A More Realistic World
+# Un mundo m√°s realista
 
-In our situation, Peter was able to move around almost without getting tired or hungry. In a more realistic world, we has to sit down and rest from time to time, and also to feed himself. Let's make our world more realistic, by implementing the following rules:
+En nuestro caso, Pedro (Peter) fue capaz de moverse y casi sin cansarse o estar hambriento. En un mundo m√°s realista, √©l tiene que sentarse y descansar de vez en cuando, as√≠ como tambi√©n alimentarse. Hagamos nuestro mundo m√°s realista, al implementar las siguientes reglas:
 
-1. By moving from one place to another, Peter loses **energy** and gains some **fatigue**.
-2. Peter can gain more energy by eating apples.
-3. Peter can get rid of fatigue by resting under the tree or on the grass (i.e. walking into a board location with a tree or grass - green field)
-4. Peter needs to find and kill the wolf
-5. In order to kill the wolf, Peter needs to have certain levels of energy and fatigue, otherwise he loses the battle.
-## Instructions
+1. Al moverse de un lugar a otro, Pedro pierde **energ√≠a** y obtiene algo de **fatiga**.
+2. Pedro puede adquirir m√°s energ√≠a al comer manzanas.
+3. Pedro puede deshacerse de la fatiga al descansar bajo un √°rbol o en el pasto (esto es, entrar en una ubicaci√≥n del tablero con un √°rbol o pasto - campo verde)",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859045385,813228651,Stevengez,53009062,2022-02-23T19:07:49+00:00,2022-02-23T19:28:46+00:00,"```suggestion
> **Nota**: En tu nuevo mundo, el estado es m√°s complejo, y adem√°s a la posici√≥n humana tambi√©n incluye la fatiga y los niveles de energ√≠a. Puedes optar por representar el estado como una tupla (tablero, energ√≠a, fatiga), o definir una clase para el estado (tambi√©n puedes querer derivarlo de `Board`), o incluso modifica la clase original `Board` dentro de [rlboard.py](../rlboard.py).
```",True,8-Reinforcement/1-QLearning/translations/assignment.es.md,,"@@ -1,25 +1,27 @@
-# A More Realistic World
+# Un mundo m√°s realista
 
-In our situation, Peter was able to move around almost without getting tired or hungry. In a more realistic world, we has to sit down and rest from time to time, and also to feed himself. Let's make our world more realistic, by implementing the following rules:
+En nuestro caso, Pedro (Peter) fue capaz de moverse y casi sin cansarse o estar hambriento. En un mundo m√°s realista, √©l tiene que sentarse y descansar de vez en cuando, as√≠ como tambi√©n alimentarse. Hagamos nuestro mundo m√°s realista, al implementar las siguientes reglas:
 
-1. By moving from one place to another, Peter loses **energy** and gains some **fatigue**.
-2. Peter can gain more energy by eating apples.
-3. Peter can get rid of fatigue by resting under the tree or on the grass (i.e. walking into a board location with a tree or grass - green field)
-4. Peter needs to find and kill the wolf
-5. In order to kill the wolf, Peter needs to have certain levels of energy and fatigue, otherwise he loses the battle.
-## Instructions
+1. Al moverse de un lugar a otro, Pedro pierde **energ√≠a** y obtiene algo de **fatiga**.
+2. Pedro puede adquirir m√°s energ√≠a al comer manzanas.
+3. Pedro puede deshacerse de la fatiga al descansar bajo un √°rbol o en el pasto (esto es, entrar en una ubicaci√≥n del tablero con un √°rbol o pasto - campo verde)
+4. Pedro necesita encontrar y matar al lobo
+5. Con el fin de matar al lobo, Pedro necesita tener ciertos niveles de energ√≠a y fatiga, de lo contrario pierde la batalla.
 
-Use the original [notebook.ipynb](notebook.ipynb) notebook as a starting point for your solution.
+## Instrucciones
 
-Modify the reward function above according to the rules of the game, run the reinforcement learning algorithm to learn the best strategy for winning the game, and compare the results of random walk with your algorithm in terms of number of games won and lost.
+Usa el notebook original [notebook.ipynb](../notebook.ipynb) como punto de partida para tu soluci√≥n.
 
-> **Note**: In your new world, the state is more complex, and in addition to human position also includes fatigue and energy levels. You may chose to represent the state as a tuple (Board,energy,fatigue), or define a class for the state (you may also want to derive it from `Board`), or even modify the original `Board` class inside [rlboard.py](rlboard.py).
+Modifica la funci√≥n reward de arriba de acuerdo a las reglas del juego, ejecuta el algoritmo de aprendizaje reforzado para aprender la mejor estrategia para ganar el juego, y compara los resultados de caminata aleatoria con tu algoritmo en t√©rminos de el n√∫mero de juegos ganados y perdidos.
 
-In your solution, please keep the code responsible for random walk strategy, and compare the results of your algorithm with random walk at the end.
+> **Nota**: En tu nuevo mundo, el estado es m√°s complejo, y adem√°s a la posici√≥n humana tambi√©n incluye la fatiga y los niveles de energ√≠a. Puedes optar para representar el estado como una tupla (tablero, energ√≠a, fatiga), o define una clase para el estado (tambi√©n puedes querer derivarlo de `Board`), o incluso modifica la clase original `Board` dentro de [rlboard.py](../rlboard.py).",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,859045385,813244298,Stevengez,53009062,2022-02-23T19:28:12+00:00,2022-02-23T19:28:46+00:00,"```suggestion
|          | Se present√≥ un notebook con la definici√≥n de las nuevas reglas del mundo. El algoritmo Q-Learning y algunas explicaciones textuales. Q-Learning es capaz de mejorar significativamente los resultados comparado con la caminata aleatoria. | Se present√≥ un notebook, Q-Learning se implement√≥ y mejor√≥ los resultados comparado con la caminata aleatoria, pero no de forma significativa; o el notebook est√° pobremente documentado y el c√≥digo no est√° bien estructurado | Se hicieron algunos intentos para redefinir las reglas del mundo, pero el algoritmo de Q-Learning no funciona, o la funci√≥n reward no est√° totalmente definida |
```",True,8-Reinforcement/1-QLearning/translations/assignment.es.md,,"@@ -1,25 +1,27 @@
-# A More Realistic World
+# Un mundo m√°s realista
 
-In our situation, Peter was able to move around almost without getting tired or hungry. In a more realistic world, we has to sit down and rest from time to time, and also to feed himself. Let's make our world more realistic, by implementing the following rules:
+En nuestro caso, Pedro (Peter) fue capaz de moverse y casi sin cansarse o estar hambriento. En un mundo m√°s realista, √©l tiene que sentarse y descansar de vez en cuando, as√≠ como tambi√©n alimentarse. Hagamos nuestro mundo m√°s realista, al implementar las siguientes reglas:
 
-1. By moving from one place to another, Peter loses **energy** and gains some **fatigue**.
-2. Peter can gain more energy by eating apples.
-3. Peter can get rid of fatigue by resting under the tree or on the grass (i.e. walking into a board location with a tree or grass - green field)
-4. Peter needs to find and kill the wolf
-5. In order to kill the wolf, Peter needs to have certain levels of energy and fatigue, otherwise he loses the battle.
-## Instructions
+1. Al moverse de un lugar a otro, Pedro pierde **energ√≠a** y obtiene algo de **fatiga**.
+2. Pedro puede adquirir m√°s energ√≠a al comer manzanas.
+3. Pedro puede deshacerse de la fatiga al descansar bajo un √°rbol o en el pasto (esto es, entrar en una ubicaci√≥n del tablero con un √°rbol o pasto - campo verde)
+4. Pedro necesita encontrar y matar al lobo
+5. Con el fin de matar al lobo, Pedro necesita tener ciertos niveles de energ√≠a y fatiga, de lo contrario pierde la batalla.
 
-Use the original [notebook.ipynb](notebook.ipynb) notebook as a starting point for your solution.
+## Instrucciones
 
-Modify the reward function above according to the rules of the game, run the reinforcement learning algorithm to learn the best strategy for winning the game, and compare the results of random walk with your algorithm in terms of number of games won and lost.
+Usa el notebook original [notebook.ipynb](../notebook.ipynb) como punto de partida para tu soluci√≥n.
 
-> **Note**: In your new world, the state is more complex, and in addition to human position also includes fatigue and energy levels. You may chose to represent the state as a tuple (Board,energy,fatigue), or define a class for the state (you may also want to derive it from `Board`), or even modify the original `Board` class inside [rlboard.py](rlboard.py).
+Modifica la funci√≥n reward de arriba de acuerdo a las reglas del juego, ejecuta el algoritmo de aprendizaje reforzado para aprender la mejor estrategia para ganar el juego, y compara los resultados de caminata aleatoria con tu algoritmo en t√©rminos de el n√∫mero de juegos ganados y perdidos.
 
-In your solution, please keep the code responsible for random walk strategy, and compare the results of your algorithm with random walk at the end.
+> **Nota**: En tu nuevo mundo, el estado es m√°s complejo, y adem√°s a la posici√≥n humana tambi√©n incluye la fatiga y los niveles de energ√≠a. Puedes optar para representar el estado como una tupla (tablero, energ√≠a, fatiga), o define una clase para el estado (tambi√©n puedes querer derivarlo de `Board`), o incluso modifica la clase original `Board` dentro de [rlboard.py](../rlboard.py).
 
-> **Note**: You may need to adjust hyperparameters to make it work, especially the number of epochs. Because the success of the game (fighting the wolf) is a rare event, you can expect much longer training time.
-## Rubric
+En tu soluci√≥n, mant√©n el c√≥digo responsable de la estrategia de caminata aleatoria, y compara los resultados de tu algoritmo con la caminata aleatoria al final.
 
-| Criteria | Exemplary                                                                                                                                                                                             | Adequate                                                                                                                                                                                | Needs Improvement                                                                                                                          |
+> **Nota**: Puedes necesitar ajustar los hiperpar√°metros para hacerlo funcionar, especialmente el n√∫mero de √©pocas. Porque el √©xito del juego (pelear contra el lobo) es un evento raro, puedes esperar un tiempo de entrenamiento mayor.
+
+## R√∫brica
+
+| Criterio | Ejemplar                                                                                                                                                                                             | Adecuado                                                                                                                                                                                | Necesita mejorar                                                                                                                          |
 | -------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------ |
-|          | A notebook is presented with the definition of new world rules, Q-Learning algorithm and some textual explanations. Q-Learning is able to significantly improve the results comparing to random walk. | Notebook is presented, Q-Learning is implemented and improves results comparing to random walk, but not significantly; or notebook is poorly documented and code is not well-structured | Some attempt to re-define the rules of the world are made, but Q-Learning algorithm does not work, or reward function is not fully defined |
+|          | Se present√≥ un notebook con la definici√≥n de las nuevas reglas del mundo. El algoritmo Q-Learning y algunas explicaciones textuales. Q-Learning es capa de mejorar significativamente los resultados comparado con la caminata aleatoria. | Se present√≥ un notebook, Q-Learning se implement√≥ y mejor√≥ los resultados comparado con la caminata aleatoria, pero no de forma significativa; o el notebook est√° pobremente documentado y el c√≥digo no est√° bien estructurado | Se hicieron algunos intentos para redefinir las reglas del mundo, pero el algoritmo de Q-Learning no funciona, o la funci√≥n reward no est√° totalmente definida |",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858677883,813306379,madebygps,6733686,2022-02-23T20:50:34+00:00,2022-02-23T20:50:54+00:00,"One suggestion:

Tambi√©n prueba ajustar distintos hiperpar√°metros y valores para los pasos de tiempo.",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858677883,813353183,hereje,3022824,2022-02-23T21:51:13+00:00,2022-02-23T21:51:14+00:00,Done!,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858677883,813306379,madebygps,6733686,2022-02-23T20:50:34+00:00,2022-02-23T20:50:54+00:00,"One suggestion:

Tambi√©n prueba ajustar distintos hiperpar√°metros y valores para los pasos de tiempo.",True,7-TimeSeries/3-SVR/translations/assignment.es.md,,"@@ -0,0 +1,13 @@
+# Un nuevo modelo SVR
+
+## Instrucciones [^1]
+
+Ahora que has construido un modelo SVR, construye uno nuevo con datos frescos (prueba uno de [estos conjuntos de datos de Duke](http://www2.stat.duke.edu/~mw/ts_data_sets.html)). Anota tu trabajo en un notebook. Visualiza los datos y tu modelo, y prueba su precisi√≥n usando MAPE y gr√°ficos apropiados. Tambi√©n prueba ajustar distintos hiperpar√°metros y tambi√©n usa distintos valores para los pasos de tiempo.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858677883,813353183,hereje,3022824,2022-02-23T21:51:13+00:00,2022-02-23T21:51:14+00:00,Done!,True,7-TimeSeries/3-SVR/translations/assignment.es.md,,"@@ -0,0 +1,13 @@
+# Un nuevo modelo SVR
+
+## Instrucciones [^1]
+
+Ahora que has construido un modelo SVR, construye uno nuevo con datos frescos (prueba uno de [estos conjuntos de datos de Duke](http://www2.stat.duke.edu/~mw/ts_data_sets.html)). Anota tu trabajo en un notebook. Visualiza los datos y tu modelo, y prueba su precisi√≥n usando MAPE y gr√°ficos apropiados. Tambi√©n prueba ajustar distintos hiperpar√°metros y tambi√©n usa distintos valores para los pasos de tiempo.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858671406,813268691,Stevengez,53009062,2022-02-23T19:59:59+00:00,2022-02-23T20:09:32+00:00,"```suggestion
# Prueba un conjunto de datos diferente
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858671406,813274004,Stevengez,53009062,2022-02-23T20:07:05+00:00,2022-02-23T20:09:32+00:00,"```suggestion
Has comenzado a aprender acerca de la predicci√≥n de series de tiempo al mirar el tipo de datos que requiere este modelado especial. Ya has visualizado algunos datos referentes a la energ√≠a. Ahora, busca otros datos que te beneficiar√≠an de la predicci√≥n de series de tiempo. Encuentra tres ejemplos (prueba [Kaggle](https://kaggle.com) y [Azure Open Datasets](https://azure.microsoft.com/en-us/services/open-datasets/catalog/?WT.mc_id=academic-15963-cxa)) y crea un notebook para visualizarlos. Anota cualquier caracter√≠stica especial que tengan (estacionalidad, cambios abruptos, u otras tendencias) en el notebook.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858671406,813274957,Stevengez,53009062,2022-02-23T20:08:24+00:00,2022-02-23T20:09:33+00:00,"```suggestion
|          | Se graficaron y explicaron tres conjuntos de datos en un notebook | Se graficaron y explicaron dos conjuntos de datos en un notebook | Se graficaron y explicaron pocos conjuntos de datos en un notebook o los datos presentados fueron insuficientes |
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858671406,813268691,Stevengez,53009062,2022-02-23T19:59:59+00:00,2022-02-23T20:09:32+00:00,"```suggestion
# Prueba un conjunto de datos diferente
```",True,6-NLP/5-Hotel-Reviews-2/translations/assignment.es.md,,"@@ -1,11 +1,11 @@
-# Try a different dataset
+# Prueba un conjunto de dato diferente",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858671406,813274004,Stevengez,53009062,2022-02-23T20:07:05+00:00,2022-02-23T20:09:32+00:00,"```suggestion
Has comenzado a aprender acerca de la predicci√≥n de series de tiempo al mirar el tipo de datos que requiere este modelado especial. Ya has visualizado algunos datos referentes a la energ√≠a. Ahora, busca otros datos que te beneficiar√≠an de la predicci√≥n de series de tiempo. Encuentra tres ejemplos (prueba [Kaggle](https://kaggle.com) y [Azure Open Datasets](https://azure.microsoft.com/en-us/services/open-datasets/catalog/?WT.mc_id=academic-15963-cxa)) y crea un notebook para visualizarlos. Anota cualquier caracter√≠stica especial que tengan (estacionalidad, cambios abruptos, u otras tendencias) en el notebook.
```",True,7-TimeSeries/1-Introduction/translations/assignment.es.md,,"@@ -1,11 +1,11 @@
-# Visualize some more Time Series
+# Visualiza algunas series de tiempo m√°s
 
-## Instructions
+## Instrucciones
 
-You've begun to learn about Time Series Forecasting by looking at the type of data that requires this special modeling. You've visualized some data around energy. Now, look around for some other data that would benefit from Time Series Forecasting. Find three examples (try [Kaggle](https://kaggle.com) and [Azure Open Datasets](https://azure.microsoft.com/en-us/services/open-datasets/catalog/?WT.mc_id=academic-15963-cxa)) and create a notebook to visualize them. Notate any special characteristics they have (seasonality, abrupt changes, or other trends) in the notebook.
+Has comenzado a aprender acerca de la predicci√≥n de series de tiempo al mirar el tipo de datos que requiere este modelado especial. Ya has visualizado algunos datos referentes a la energ√≠a. Ahora, mira alrededor para algunos otros datos que te beneficiar√≠an de la predicci√≥n de series de tiempo. Encuentra tres ejemplos (prueba [Kaggle](https://kaggle.com) y [Azure Open Datasets](https://azure.microsoft.com/en-us/services/open-datasets/catalog/?WT.mc_id=academic-15963-cxa)) y crea un notebook para visualizarlos. Anota cualquier caracter√≠stica especial que tengan (estacionalidad, cambios abruptos, u otras tendencias) en el notebook.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858671406,813274957,Stevengez,53009062,2022-02-23T20:08:24+00:00,2022-02-23T20:09:33+00:00,"```suggestion
|          | Se graficaron y explicaron tres conjuntos de datos en un notebook | Se graficaron y explicaron dos conjuntos de datos en un notebook | Se graficaron y explicaron pocos conjuntos de datos en un notebook o los datos presentados fueron insuficientes |
```",True,7-TimeSeries/1-Introduction/translations/assignment.es.md,,"@@ -1,11 +1,11 @@
-# Visualize some more Time Series
+# Visualiza algunas series de tiempo m√°s
 
-## Instructions
+## Instrucciones
 
-You've begun to learn about Time Series Forecasting by looking at the type of data that requires this special modeling. You've visualized some data around energy. Now, look around for some other data that would benefit from Time Series Forecasting. Find three examples (try [Kaggle](https://kaggle.com) and [Azure Open Datasets](https://azure.microsoft.com/en-us/services/open-datasets/catalog/?WT.mc_id=academic-15963-cxa)) and create a notebook to visualize them. Notate any special characteristics they have (seasonality, abrupt changes, or other trends) in the notebook.
+Has comenzado a aprender acerca de la predicci√≥n de series de tiempo al mirar el tipo de datos que requiere este modelado especial. Ya has visualizado algunos datos referentes a la energ√≠a. Ahora, mira alrededor para algunos otros datos que te beneficiar√≠an de la predicci√≥n de series de tiempo. Encuentra tres ejemplos (prueba [Kaggle](https://kaggle.com) y [Azure Open Datasets](https://azure.microsoft.com/en-us/services/open-datasets/catalog/?WT.mc_id=academic-15963-cxa)) y crea un notebook para visualizarlos. Anota cualquier caracter√≠stica especial que tengan (estacionalidad, cambios abruptos, u otras tendencias) en el notebook.
 
-## Rubric
+## R√∫brica
 
-| Criteria | Exemplary                                              | Adequate                                             | Needs Improvement                                                                         |
+| Criterio | Ejemplar                                              | Adecuado                                             | Necesita mejorar                                                                         |
 | -------- | ------------------------------------------------------ | ---------------------------------------------------- | ----------------------------------------------------------------------------------------- |
-|          | Three datasets are plotted and explained in a notebook | Two datasets are plotted and explained in a notebook | Few datasets are plotted or explained in a notebook or the data presented is insufficient |
+|          | Se graficaron y explicaron tres conjuntos de datos en un notebook | Se graficaron y explicaron tres conjuntos de datos en un notebook | Se graficaron y explicaron pocos conjuntos de datos en un notebook o los datos presentados fueron insuficientes |",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858668702,813276879,Stevengez,53009062,2022-02-23T20:10:56+00:00,2022-02-23T20:12:43+00:00,"```suggestion
# Prueba un conjunto de datos diferente
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858668702,813276879,Stevengez,53009062,2022-02-23T20:10:56+00:00,2022-02-23T20:12:43+00:00,"```suggestion
# Prueba un conjunto de datos diferente
```",True,6-NLP/5-Hotel-Reviews-2/translations/assignment.es.md,,"@@ -1,11 +1,11 @@
-# Try a different dataset
+# Prueba un conjunto de dato diferente",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858667229,813282046,Stevengez,53009062,2022-02-23T20:18:12+00:00,2022-02-23T20:18:41+00:00,"```suggestion
NLTK es una biblioteca bien conocida para su uso en ling√º√≠stica computacional y NLP. Toma esta oportunidad para leer el '[libro NLTK](https://www.nltk.org/book/)' y prueba sus ejercicios. En esta asignaci√≥n sin ponderaci√≥n, conocer√°s esta biblioteca m√°s a fondo.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858667229,813346919,hereje,3022824,2022-02-23T21:44:34+00:00,2022-02-23T21:44:34+00:00,Thanks!,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858667229,813282046,Stevengez,53009062,2022-02-23T20:18:12+00:00,2022-02-23T20:18:41+00:00,"```suggestion
NLTK es una biblioteca bien conocida para su uso en ling√º√≠stica computacional y NLP. Toma esta oportunidad para leer el '[libro NLTK](https://www.nltk.org/book/)' y prueba sus ejercicios. En esta asignaci√≥n sin ponderaci√≥n, conocer√°s esta biblioteca m√°s a fondo.
```",True,6-NLP/4-Hotel-Reviews-1/translations/assignment.es.md,,"@@ -1,6 +1,5 @@
 # NLTK
 
-## Instructions
-
-NLTK is a well-known library for use in computational linguistics and NLP. Take this opportunity to read through the '[NLTK book](https://www.nltk.org/book/)' and try out its exercises. In this ungraded assignment, you will get to know this library more deeply.
+## Instrucciones
 
+NLTK es una biblioteca bien conocida para su uso en ling√º√≠stica computacional y NLP. Toma esta oportunidad para leer el '[libro NLTK](https://www.nltk.org/book/)' y prueba sus ejercicios. En esta asignaci√≥n sin calificar, conocer√°s m√°s profundamente esta biblioteca m√°s a fondo.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858667229,813346919,hereje,3022824,2022-02-23T21:44:34+00:00,2022-02-23T21:44:34+00:00,Thanks!,True,6-NLP/4-Hotel-Reviews-1/translations/assignment.es.md,,"@@ -1,6 +1,5 @@
 # NLTK
 
-## Instructions
-
-NLTK is a well-known library for use in computational linguistics and NLP. Take this opportunity to read through the '[NLTK book](https://www.nltk.org/book/)' and try out its exercises. In this ungraded assignment, you will get to know this library more deeply.
+## Instrucciones
 
+NLTK es una biblioteca bien conocida para su uso en ling√º√≠stica computacional y NLP. Toma esta oportunidad para leer el '[libro NLTK](https://www.nltk.org/book/)' y prueba sus ejercicios. En esta asignaci√≥n sin calificar, conocer√°s m√°s profundamente esta biblioteca m√°s a fondo.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858665093,813307390,madebygps,6733686,2022-02-23T20:52:01+00:00,2022-02-23T20:52:01+00:00,Typo in AZure,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,858665093,813307390,madebygps,6733686,2022-02-23T20:52:01+00:00,2022-02-23T20:52:01+00:00,Typo in AZure,True,6-NLP/3-Translation-Sentiment/translations/assignment.es.md,,"@@ -0,0 +1,11 @@
+# Licencia po√©tica
+
+## Instrucciones
+
+En [este notebook](https://www.kaggle.com/jenlooper/emily-dickinson-word-frequency) puedes encontrar m√°s de 500 poemas de Emily Dickinson previamente analizados por sentimiento usando an√°lisis de texto de AZure. Usando este conjunto de datos, anal√≠zalo usando las t√©cnicas descritas en la lecci√≥n. ¬øEl sentimiento sugerido de un poema coincide con la decisi√≥n m√°s sofisticada del servicio de Azure? ¬øEn tu opini√≥n por qu√© o por qu√© no? ¬øAlgo te sorprende?",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,856376870,813293927,Stevengez,53009062,2022-02-23T20:34:46+00:00,2022-02-23T20:34:48+00:00,"```suggestion
En las lecciones anteriores, programaste un bot b√°sico con el cual chatear. Este bot da respuestas aleatorias hasta que le digas 'bye'. ¬øPuedes hacer las respuestas menos aleatorias, y activar respuestas si dices cosas espec√≠ficas, como 'why' o 'how'? Piensa un poco en c√≥mo el aprendizaje autom√°tico puede hacer este tipo de trabajo menos manual a medida que extiendes tu bot. Puedes usar las librer√≠as NLTK o TextBlob para hacer tus tareas m√°s f√°ciles.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,856376870,813293927,Stevengez,53009062,2022-02-23T20:34:46+00:00,2022-02-23T20:34:48+00:00,"```suggestion
En las lecciones anteriores, programaste un bot b√°sico con el cual chatear. Este bot da respuestas aleatorias hasta que le digas 'bye'. ¬øPuedes hacer las respuestas menos aleatorias, y activar respuestas si dices cosas espec√≠ficas, como 'why' o 'how'? Piensa un poco en c√≥mo el aprendizaje autom√°tico puede hacer este tipo de trabajo menos manual a medida que extiendes tu bot. Puedes usar las librer√≠as NLTK o TextBlob para hacer tus tareas m√°s f√°ciles.
```",True,6-NLP/2-Tasks/translations/assignment.es.md,,"@@ -1,11 +1,11 @@
-# Make a Bot talk back
+# Hacer que un Bot responda
 
-## Instructions
+## Instrucciones
 
-In the past few lessons, you programmed a basic bot with whom to chat. This bot gives random answers until you say 'bye'. Can you make the answers a little less random, and trigger answers if you say specific things, like 'why' or 'how'? Think a bit how machine learning might make this type of work less manual as you extend your bot. You can use NLTK or TextBlob libraries to make your tasks easier.
+En las lecciones anteriores, programaste un bot b√°sico con el cual chatear. Este bot da respuestas aleatorias hasta que le digas 'bye'. ¬øPuedes hacer las respuestas menos aleatorias, y enviar respuestas si dices cosas espec√≠ficas, como 'why' o 'how'? Piensa un poco en c√≥mo el aprendizaje autom√°tico puede realizar este tipo de trabajo menos manual a medida que extiendes tu bot. Puedes usar las librer√≠as NLTK o TextBlob para hacer m√°s f√°ciles tus actividades.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,856368148,813302765,Stevengez,53009062,2022-02-23T20:45:30+00:00,2022-02-23T20:45:30+00:00,"```suggestion
En estas dos lecciones, se te presentar√° la predicci√≥n de series de tiempo, un √°rea algo menos conocida del aprendizaje autom√°tico que sin embargo es extremadamente valiosa para la industria y aplicaciones empresariales, entre otros campos. Mientras las redes neuronales pueden ser usadas para mejorar la utilidad de estos modelos, las estudiaremos en el contexto del aprendizaje autom√°tico cl√°sico como modelos que ayudan a predecir el desempe√±o futuro basado en el pasado.
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,856368148,813302765,Stevengez,53009062,2022-02-23T20:45:30+00:00,2022-02-23T20:45:30+00:00,"```suggestion
En estas dos lecciones, se te presentar√° la predicci√≥n de series de tiempo, un √°rea algo menos conocida del aprendizaje autom√°tico que sin embargo es extremadamente valiosa para la industria y aplicaciones empresariales, entre otros campos. Mientras las redes neuronales pueden ser usadas para mejorar la utilidad de estos modelos, las estudiaremos en el contexto del aprendizaje autom√°tico cl√°sico como modelos que ayudan a predecir el desempe√±o futuro basado en el pasado.
```",True,7-TimeSeries/translations/README.es.md,,"@@ -1,23 +1,23 @@
-# Introduction to time series forecasting
+# Introducci√≥n a la predicci√≥n de series de tiempo
 
-What is time series forecasting? It's about predicting future events by analyzing trends of the past.
+¬øQu√© es la predicci√≥n de series de tiempo? Se trata de predecir eventos futuros al analizar las tendencias del pasado.
 
-## Regional topic: worldwide electricity usage ‚ú®
+## Tema regional: Uso de la electricidad en el mundo ‚ú®
 
-In these two lessons, you will be introduced to time series forecasting, a somewhat lesser known area of machine learning that is nevertheless extremely valuable for industry and business applications, among other fields. While neural networks can be used to enhance the utility of these models, we will study them in the context of classical machine learning as models help predict future performance based on the past.
+En estas dos lecciones, se te presentar√° la predicci√≥n de series de tiempo, un √°rea algo menos conocida del aprendizaje autom√°tico que sin embargo es extremadamente valiosa para la industria y aplicaciones empresariales, entre otros campos. Mientras las redes neuronales pueden ser usadas para mejorar la utilidad de estos modelos, las estudiaremos en el contexto del aprendizaje autom√°tico cl√°sico como modelos que ayudan a predecir el desempe√±o a futuro basado en el pasado.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,856195037,813310313,madebygps,6733686,2022-02-23T20:55:53+00:00,2022-02-23T20:56:06+00:00,"Suggestion:

remove the as√≠ from para as√≠ comprender

En esta lecci√≥n, has trabajado con algunas t√©cnicas de visualizaci√≥n para comprender c√≥mo graficar tus datos en preparaci√≥n para agruparlos.",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,856195037,813356440,hereje,3022824,2022-02-23T21:54:28+00:00,2022-02-23T21:54:28+00:00,Thanks!,False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,856195037,813310313,madebygps,6733686,2022-02-23T20:55:53+00:00,2022-02-23T20:56:06+00:00,"Suggestion:

remove the as√≠ from para as√≠ comprender

En esta lecci√≥n, has trabajado con algunas t√©cnicas de visualizaci√≥n para comprender c√≥mo graficar tus datos en preparaci√≥n para agruparlos.",True,5-Clustering/1-Visualize/translations/assignment.es.md,,"@@ -0,0 +1,11 @@
+# Investiga otras visualizaciones para agruparlas
+
+## Instrucciones
+
+En esta lecci√≥n, has trabajado con algunas t√©cnicas de visualizaci√≥n para as√≠ comprender c√≥mo graficar tus datos en preparaci√≥n para agruparlos. Los gr√°ficos de dispersi√≥n son particularmente √∫tiles para encontrar grupos de objetos. Investiga distintas formas y librer√≠as para crear gr√°ficos de dispersi√≥n y documenta tu trabajo en un notebook. Puedes usar los datos de esta lecci√≥n, otras lecciones, o datos que t√∫ mismo proporciones (por favor, d√° cr√©dito a su fuente en tu notebook). Grafica algunos datos usando gr√°ficos de dispersi√≥n y explica lo que descubras.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,856195037,813356440,hereje,3022824,2022-02-23T21:54:28+00:00,2022-02-23T21:54:28+00:00,Thanks!,True,5-Clustering/1-Visualize/translations/assignment.es.md,,"@@ -0,0 +1,11 @@
+# Investiga otras visualizaciones para agruparlas
+
+## Instrucciones
+
+En esta lecci√≥n, has trabajado con algunas t√©cnicas de visualizaci√≥n para as√≠ comprender c√≥mo graficar tus datos en preparaci√≥n para agruparlos. Los gr√°ficos de dispersi√≥n son particularmente √∫tiles para encontrar grupos de objetos. Investiga distintas formas y librer√≠as para crear gr√°ficos de dispersi√≥n y documenta tu trabajo en un notebook. Puedes usar los datos de esta lecci√≥n, otras lecciones, o datos que t√∫ mismo proporciones (por favor, d√° cr√©dito a su fuente en tu notebook). Grafica algunos datos usando gr√°ficos de dispersi√≥n y explica lo que descubras.",0,0,0,0,0,0,0
microsoft/ML-For-Beginners,855970283,813312624,Stevengez,53009062,2022-02-23T20:59:07+00:00,2022-02-23T20:59:08+00:00,"```suggestion
|          | Se present√≥ tanto una aplicaci√≥n web como un notebook, ambos bien documentados y ejecut√°ndose | Uno de esos dos falta o contiene errores | Ambos faltan o est√°n defectuosos |
```",False,,,,0,0,0,0,0,0,0
microsoft/ML-For-Beginners,855970283,813312624,Stevengez,53009062,2022-02-23T20:59:07+00:00,2022-02-23T20:59:08+00:00,"```suggestion
|          | Se present√≥ tanto una aplicaci√≥n web como un notebook, ambos bien documentados y ejecut√°ndose | Uno de esos dos falta o contiene errores | Ambos faltan o est√°n defectuosos |
```",True,4-Classification/4-Applied/translations/assignment.es.md,,"@@ -1,11 +1,11 @@
-# Build a recommender
+# Construye un recomendador
 
-## Instructions
+## Instrucciones
 
-Given your exercises in this lesson, you now know how to build JavaScript-based web app using Onnx Runtime and a converted Onnx model. Experiment with building a new recommender using data from these lessons or sourced elsewhere (give credit, please). You might create a pet recommender given various personality attributes, or a music genre recommender based on a person's mood. Be creative!
+Dados tus ejercicios en esta lecci√≥n, ahora sabes c√≥mo construir aplicaciones web basadas en JavaScript usando el Runtime Onnx y un modelo Onnx convertido. Experimenta con la construcci√≥n de un nuevo recomendador usando los datos de estas lecciones u obtenidos de otro lugar (por favor, da los cr√©ditos correspondientes). Debes crear un recomendador de mascotas dados diversos atributos de personalidad, o un recomendador de g√©neros musicales basados en el estado de √°nimo de una persona. ¬°S√© creativo!
 
-## Rubric
+## R√∫brica
 
-| Criteria | Exemplary                                                              | Adequate                              | Needs Improvement                 |
+| Criterio | Ejemplar                                                              | Adecuado                              | Necesita mejorar                 |
 | -------- | ---------------------------------------------------------------------- | ------------------------------------- | --------------------------------- |
-|          | A web app and notebook are presented, both well documented and running | One of those two is missing or flawed | Both are either missing or flawed |
+|          | Se present√≥ tanto una aplicaci√≥n web como un notebook, ambos bien documentados y ejecut√°ndose | Uno de esos dos falta o contiene errores | A web app and notebook are presented, both well documented and running | One of those two is missing or flawed | Ambos faltan o est√°n defectuosos |",0,0,0,0,0,0,0
